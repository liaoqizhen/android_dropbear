
                                int  hash_idx,
                                int  iteration_count,  
                      unsigned char *out,
                      unsigned long  password_len, 
                      unsigned long *outlen)
                const unsigned char *salt, 
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
#1	libtomcrypt/crypt.tex	/^	{                   % THESE headers.$/;"	s	language:Tex
A	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned long A[32], B[32];$/;"	m	language:C++	struct:xtea_key	access:public
ACC	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 ACC[MAXBLOCKSIZE],$/;"	m	language:C++	struct:__anon53	access:public
ACCUM	libtommath/mtest/mpi.c	79;"	d	language:C	file:
ADDKEY	libtomcrypt/src/prngs/sober128.c	169;"	d	language:C	file:
AF_INET6	fake-rfc2553.h	88;"	d	language:C++
AF_INET6	sftp-server/openbsd-compat/fake-rfc2553.h	86;"	d	language:C++
AGENTDIRPREFIX	svr-agentfwd.c	44;"	d	language:C	file:
AGE_FACTOR	progressmeter.c	142;"	d	language:C	file:
AI_CANONNAME	fake-rfc2553.h	109;"	d	language:C++
AI_CANONNAME	sftp-server/openbsd-compat/fake-rfc2553.h	107;"	d	language:C++
AI_NUMERICHOST	fake-rfc2553.h	112;"	d	language:C++
AI_NUMERICHOST	sftp-server/openbsd-compat/fake-rfc2553.h	110;"	d	language:C++
AI_PASSIVE	fake-rfc2553.h	106;"	d	language:C++
AI_PASSIVE	sftp-server/openbsd-compat/fake-rfc2553.h	104;"	d	language:C++
ALIGN	sftp-server/defines.h	611;"	d	language:C++
ALIGNBYTES	sftp-server/defines.h	610;"	d	language:C++
ALLOC	libtommath/mtest/mpi.h	58;"	d	language:C++
ALLOW_BLANK_PASSWORDS	options.h	297;"	d	language:C++
AND  OR and XOR Operations	libtommath/bn.tex	/^in place and no new digits are required to complete it.$/;"	u	language:Tex
ANSI X9.63 Export	libtomcrypt/crypt.tex	/^all internally allocated memory upon error.$/;"	u	language:Tex
ANSI X9.63 Import	libtomcrypt/crypt.tex	/^section 4.3.6 of the standard.  It does not allow for the export of private keys.$/;"	u	language:Tex
ANSI_RNG	libtomcrypt/src/prngs/rng_get_bytes.c	55;"	d	language:C	file:
ARGCHK	libtommath/mtest/mpi.h	63;"	d	language:C++
ARGCHK	libtommath/mtest/mpi.h	66;"	d	language:C++
ARGCHK	libtommath/mtest/mpi.h	68;"	d	language:C++
ARGTYPE	libtomcrypt/crypt.tex	/^stored in \\textit{tomcrypt\\_custom.h} which allow the enabling and disabling of various algorithms.$/;"	b	language:Tex
ARGTYPE	libtomcrypt/src/headers/tomcrypt_cfg.h	48;"	d	language:C++
ARM	libtomcrypt/src/prngs/rng_get_bytes.c	94;"	d	language:C	file:
ASCII Conversions	libtommath/bn.tex	/^\\chapter{Input and Output}$/;"	s	language:Tex
ASN.1 BIT STRING	libtomcrypt/crypt.tex	/^and short integer functions can encode and decode each others outputs.  $/;"	u	language:Tex
ASN.1 CHOICE	libtomcrypt/crypt.tex	/^It is suggested that decoded data be further scrutinized (e.g. days of month in particular).$/;"	u	language:Tex
ASN.1 Flexi Decoder	libtomcrypt/crypt.tex	/^will have the \\textit{used} flag set to non--zero to reflect it was the data type decoded.$/;"	u	language:Tex
ASN.1 IA5 STRING	libtomcrypt/crypt.tex	/^$0 \\ldots 2^{32} - 1$.  $/;"	u	language:Tex
ASN.1 INTEGER	libtomcrypt/crypt.tex	/^Like the SET type the der\\_length\\_sequence() function can be used to determine the length of a \\textit{SET OF} object.$/;"	u	language:Tex
ASN.1 OBJECT IDENTIFIER	libtomcrypt/crypt.tex	/^These will encode or decode an OCTET STRING data type.  The octets are stored using one \\textbf{unsigned char} each.  $/;"	u	language:Tex
ASN.1 OCTET STRING	libtomcrypt/crypt.tex	/^as a one bit, and a zero value a zero bit.$/;"	u	language:Tex
ASN.1 PRINTABLE STRING	libtomcrypt/crypt.tex	/^that the build platform honours the run--time platforms character conventions.$/;"	u	language:Tex
ASN.1 UTCTIME	libtomcrypt/crypt.tex	/^intend to use the ISO C functions for working with wide--char arrays, you should make sure that wchar\\_t has been defined previously.$/;"	u	language:Tex
ASN.1 UTF8 STRING	libtomcrypt/crypt.tex	/^that the build platform honours the run-time platforms character conventions.$/;"	u	language:Tex
ASN1_CLASS_APPLICATION	keyimport.c	231;"	d	language:C	file:
ASN1_CLASS_CONTEXT_SPECIFIC	keyimport.c	232;"	d	language:C	file:
ASN1_CLASS_MASK	keyimport.c	234;"	d	language:C	file:
ASN1_CLASS_PRIVATE	keyimport.c	233;"	d	language:C	file:
ASN1_CLASS_UNIVERSAL	keyimport.c	230;"	d	language:C	file:
ASN1_CONSTRUCTED	keyimport.c	237;"	d	language:C	file:
AUTH_METHOD_INTERACT	auth.h	93;"	d	language:C++
AUTH_METHOD_INTERACT_LEN	auth.h	94;"	d	language:C++
AUTH_METHOD_NONE	auth.h	87;"	d	language:C++
AUTH_METHOD_NONE_LEN	auth.h	88;"	d	language:C++
AUTH_METHOD_PASSWORD	auth.h	91;"	d	language:C++
AUTH_METHOD_PASSWORD_LEN	auth.h	92;"	d	language:C++
AUTH_METHOD_PUBKEY	auth.h	89;"	d	language:C++
AUTH_METHOD_PUBKEY_LEN	auth.h	90;"	d	language:C++
AUTH_TIMEOUT	sysoptions.h	23;"	d	language:C++
AUTH_TYPE_INTERACT	auth.h	85;"	d	language:C++
AUTH_TYPE_NONE	auth.h	82;"	d	language:C++
AUTH_TYPE_PASSWORD	auth.h	84;"	d	language:C++
AUTH_TYPE_PUBKEY	auth.h	83;"	d	language:C++
Absolute	libtommath/bn.tex	/^Which assigns $-a$ to $b$.  $/;"	u	language:Tex
Accelerated CCM	libtomcrypt/crypt.tex	/^free them.$/;"	b	language:Tex
Accelerated F9	libtomcrypt/crypt.tex	/^This function is meant to perform an optimized XCBC-MAC message authentication code computation when the user calls xcbc\\_memory().  $/;"	b	language:Tex
Accelerated GCM	libtomcrypt/crypt.tex	/^\\index{ccm\\_memory()} This function is called when the user calls ccm\\_memory().$/;"	b	language:Tex
Accelerated LRW	libtomcrypt/crypt.tex	/^The accelerator will only be used to encrypt whole blocks.  Partial blocks are always handled in software.$/;"	b	language:Tex
Accelerated OMAC	libtomcrypt/crypt.tex	/^be called prior to this.  This function must handle scheduling the key provided on its own.  It is called when the user calls gcm\\_memory().$/;"	b	language:Tex
Accelerated XCBC-MAC	libtomcrypt/crypt.tex	/^This function is meant to perform an optimized OMAC1 (CMAC) message authentication code computation when the user calls omac\\_memory().  $/;"	b	language:Tex
Acceleration	libtomcrypt/crypt.tex	/^The done function terminates the hash and returns the message digest.$/;"	u	language:Tex
Addition and Subtraction	libtommath/bn.tex	/^Which compute $c = a \\odot b$ where $\\odot$ is one of OR, AND or XOR.  $/;"	s	language:Tex
Additional Authentication Data	libtomcrypt/crypt.tex	/^to only use 12--byte IVs.  You can just increment it like a counter for each packet.$/;"	b	language:Tex
Algebraic Functions	libtommath/bn.tex	/^is non--zero.  $/;"	c	language:Tex
Algo_Type	algo.h	/^struct Algo_Type {$/;"	s	language:C++
Algo_Type::data	algo.h	/^	const void *data; \/* algorithm specific data *\/$/;"	m	language:C++	struct:Algo_Type	access:public
Algo_Type::mode	algo.h	/^	const void *mode; \/* the mode, currently only used for ciphers,$/;"	m	language:C++	struct:Algo_Type	access:public
Algo_Type::name	algo.h	/^	unsigned char *name; \/* identifying name *\/$/;"	m	language:C++	struct:Algo_Type	access:public
Algo_Type::usable	algo.h	/^	char usable; \/* whether we can use this algorithm *\/$/;"	m	language:C++	struct:Algo_Type	access:public
Algo_Type::val	algo.h	/^	char val; \/* a value for this cipher, or -1 for invalid *\/$/;"	m	language:C++	struct:Algo_Type	access:public
Algorithm One accepts as input a password, an 8--byte salt, and an iteration counter.  The iteration counter is meant to act as delay for
Algorithm Two	libtomcrypt/crypt.tex	/^it is set to the number of bytes stored.  If it is smaller than not all of the hash output is stored in \\textit{out}.$/;"	u	language:Tex
Attrib	sftp-server/sftp-common.h	/^struct Attrib {$/;"	s	language:C++
Attrib	sftp-server/sftp-common.h	/^typedef struct Attrib Attrib;$/;"	t	language:C++	typeref:struct:Attrib
Attrib::atime	sftp-server/sftp-common.h	/^	u_int32_t	atime;$/;"	m	language:C++	struct:Attrib	access:public
Attrib::flags	sftp-server/sftp-common.h	/^	u_int32_t	flags;$/;"	m	language:C++	struct:Attrib	access:public
Attrib::gid	sftp-server/sftp-common.h	/^	u_int32_t	gid;$/;"	m	language:C++	struct:Attrib	access:public
Attrib::mtime	sftp-server/sftp-common.h	/^	u_int32_t	mtime;$/;"	m	language:C++	struct:Attrib	access:public
Attrib::perm	sftp-server/sftp-common.h	/^	u_int32_t	perm;$/;"	m	language:C++	struct:Attrib	access:public
Attrib::size	sftp-server/sftp-common.h	/^	u_int64_t	size;$/;"	m	language:C++	struct:Attrib	access:public
Attrib::uid	sftp-server/sftp-common.h	/^	u_int32_t	uid;$/;"	m	language:C++	struct:Attrib	access:public
AuthState	auth.h	/^struct AuthState {$/;"	s	language:C++
AuthState::authdone	auth.h	/^	unsigned authdone : 1; \/* 0 if we haven't authed, 1 if we have. Applies for$/;"	m	language:C++	struct:AuthState	access:public
AuthState::authtypes	auth.h	/^	unsigned char authtypes; \/* Flags indicating which auth types are still $/;"	m	language:C++	struct:AuthState	access:public
AuthState::failcount	auth.h	/^	unsigned int failcount; \/* Number of (failed) authentication attempts.*\/$/;"	m	language:C++	struct:AuthState	access:public
AuthState::perm_warn	auth.h	/^	unsigned perm_warn : 1; \/* Server only, set if bad permissions on $/;"	m	language:C++	struct:AuthState	access:public
AuthState::pubkey_options	auth.h	/^	struct PubKeyOptions* pubkey_options;$/;"	m	language:C++	struct:AuthState	typeref:struct:AuthState::PubKeyOptions	access:public
AuthState::pw_dir	auth.h	/^	char *pw_dir;$/;"	m	language:C++	struct:AuthState	access:public
AuthState::pw_gid	auth.h	/^	gid_t pw_gid;$/;"	m	language:C++	struct:AuthState	access:public
AuthState::pw_name	auth.h	/^	char *pw_name;$/;"	m	language:C++	struct:AuthState	access:public
AuthState::pw_passwd	auth.h	/^	char *pw_passwd;$/;"	m	language:C++	struct:AuthState	access:public
AuthState::pw_shell	auth.h	/^	char *pw_shell;$/;"	m	language:C++	struct:AuthState	access:public
AuthState::pw_uid	auth.h	/^	uid_t pw_uid;$/;"	m	language:C++	struct:AuthState	access:public
AuthState::username	auth.h	/^	char *username; \/* This is the username the client presents to check. It$/;"	m	language:C++	struct:AuthState	access:public
B	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned long A[32], B[32];$/;"	m	language:C++	struct:xtea_key	access:public
B	libtomcrypt/src/headers/tomcrypt_pk.h	/^   char *B;$/;"	m	language:C++	struct:__anon34	access:public
B	libtomcrypt/src/prngs/sober128.c	43;"	d	language:C	file:
BADARG	sftp-server/openbsd-compat/getopt.c	50;"	d	language:C	file:
BADCH	sftp-server/openbsd-compat/getopt.c	49;"	d	language:C	file:
BASE64	libtomcrypt/src/headers/tomcrypt_custom.h	134;"	d	language:C++
BIGNUM	sftp-server/openssl/bn.h	1;"	d	language:C++
BIG_ENDIAN	sftp-server/defines.h	498;"	d	language:C++
BITS	libtommath/mtest/mpi.h	188;"	d	language:C++
BLOCKSIZE	libtomcrypt/src/ciphers/anubis.c	41;"	d	language:C	file:
BLOCKSIZE	libtomcrypt/src/ciphers/khazad.c	37;"	d	language:C	file:
BLOCKSIZEB	libtomcrypt/src/ciphers/anubis.c	42;"	d	language:C	file:
BLOCKSIZEB	libtomcrypt/src/ciphers/khazad.c	38;"	d	language:C	file:
BLOWFISH	libtomcrypt/src/headers/tomcrypt_custom.h	94;"	d	language:C++
BNCORE_C	libtommath/tommath_class.h	129;"	d	language:C++
BN_ERROR_C	libtommath/tommath_class.h	11;"	d	language:C++
BN_FAST_MP_INVMOD_C	libtommath/tommath_class.h	12;"	d	language:C++
BN_FAST_MP_INVMOD_C	libtommath/tommath_class.h	437;"	d	language:C++
BN_FAST_MP_INVMOD_C	libtommath/tommath_superclass.h	60;"	d	language:C++
BN_FAST_MP_MONTGOMERY_REDUCE_C	libtommath/tommath_class.h	13;"	d	language:C++
BN_FAST_MP_MONTGOMERY_REDUCE_C	libtommath/tommath_class.h	345;"	d	language:C++
BN_FAST_MP_MONTGOMERY_REDUCE_C	libtommath/tommath_class.h	543;"	d	language:C++
BN_FAST_S_MP_MUL_DIGS_C	libtommath/tommath_class.h	14;"	d	language:C++
BN_FAST_S_MP_MUL_DIGS_C	libtommath/tommath_class.h	557;"	d	language:C++
BN_FAST_S_MP_MUL_DIGS_C	libtommath/tommath_class.h	958;"	d	language:C++
BN_FAST_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_class.h	15;"	d	language:C++
BN_FAST_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_class.h	713;"	d	language:C++
BN_FAST_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_class.h	966;"	d	language:C++
BN_FAST_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_superclass.h	59;"	d	language:C++
BN_FAST_S_MP_SQR_C	libtommath/tommath_class.h	16;"	d	language:C++
BN_FAST_S_MP_SQR_C	libtommath/tommath_class.h	801;"	d	language:C++
BN_H_	libtommath/tommath.h	16;"	d	language:C++
BN_MP_2EXPT_C	libtommath/tommath_class.h	17;"	d	language:C++
BN_MP_2EXPT_C	libtommath/tommath_class.h	535;"	d	language:C++
BN_MP_2EXPT_C	libtommath/tommath_class.h	751;"	d	language:C++
BN_MP_2EXPT_C	libtommath/tommath_class.h	758;"	d	language:C++
BN_MP_2EXPT_C	libtommath/tommath_class.h	773;"	d	language:C++
BN_MP_ABS_C	libtommath/tommath_class.h	18;"	d	language:C++
BN_MP_ABS_C	libtommath/tommath_class.h	250;"	d	language:C++
BN_MP_ABS_C	libtommath/tommath_class.h	330;"	d	language:C++
BN_MP_ABS_C	libtommath/tommath_class.h	389;"	d	language:C++
BN_MP_ADDMOD_C	libtommath/tommath_class.h	21;"	d	language:C++
BN_MP_ADDMOD_C	libtommath/tommath_superclass.h	24;"	d	language:C++
BN_MP_ADD_C	libtommath/tommath_class.h	148;"	d	language:C++
BN_MP_ADD_C	libtommath/tommath_class.h	199;"	d	language:C++
BN_MP_ADD_C	libtommath/tommath_class.h	19;"	d	language:C++
BN_MP_ADD_C	libtommath/tommath_class.h	254;"	d	language:C++
BN_MP_ADD_C	libtommath/tommath_class.h	450;"	d	language:C++
BN_MP_ADD_C	libtommath/tommath_class.h	485;"	d	language:C++
BN_MP_ADD_C	libtommath/tommath_class.h	497;"	d	language:C++
BN_MP_ADD_C	libtommath/tommath_class.h	519;"	d	language:C++
BN_MP_ADD_C	libtommath/tommath_class.h	720;"	d	language:C++
BN_MP_ADD_C	libtommath/tommath_class.h	819;"	d	language:C++
BN_MP_ADD_C	libtommath/tommath_class.h	873;"	d	language:C++
BN_MP_ADD_C	libtommath/tommath_class.h	890;"	d	language:C++
BN_MP_ADD_D_C	libtommath/tommath_class.h	20;"	d	language:C++
BN_MP_ADD_D_C	libtommath/tommath_class.h	378;"	d	language:C++
BN_MP_ADD_D_C	libtommath/tommath_class.h	652;"	d	language:C++
BN_MP_ADD_D_C	libtommath/tommath_class.h	666;"	d	language:C++
BN_MP_ADD_D_C	libtommath/tommath_class.h	683;"	d	language:C++
BN_MP_ADD_D_C	libtommath/tommath_class.h	692;"	d	language:C++
BN_MP_ADD_D_C	libtommath/tommath_class.h	834;"	d	language:C++
BN_MP_AND_C	libtommath/tommath_class.h	22;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	156;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	163;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	168;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	173;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	194;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	206;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	23;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	264;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	270;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	280;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	286;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	297;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	307;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	483;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	492;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	526;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	545;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	570;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	575;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	607;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	704;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	788;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	835;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	922;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	938;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	960;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	968;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	975;"	d	language:C++
BN_MP_CLAMP_C	libtommath/tommath_class.h	982;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	200;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	208;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	218;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	24;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	265;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	278;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	288;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	299;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	322;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	329;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	343;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	398;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	417;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	467;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	477;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	487;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	498;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	518;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	581;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	597;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	609;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	617;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	630;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	642;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	654;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	674;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	723;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	734;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	745;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	752;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	761;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	808;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	823;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	841;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	858;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	904;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	912;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	924;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	944;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	962;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	970;"	d	language:C++
BN_MP_CLEAR_C	libtommath/tommath_class.h	977;"	d	language:C++
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	150;"	d	language:C++
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	257;"	d	language:C++
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	25;"	d	language:C++
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	331;"	d	language:C++
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	371;"	d	language:C++
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	456;"	d	language:C++
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	507;"	d	language:C++
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	880;"	d	language:C++
BN_MP_CLEAR_MULTI_C	libtommath/tommath_class.h	897;"	d	language:C++
BN_MP_CLEAR_MULTI_C	libtommath/tommath_superclass.h	28;"	d	language:C++
BN_MP_CMP_C	libtommath/tommath_class.h	145;"	d	language:C++
BN_MP_CMP_C	libtommath/tommath_class.h	252;"	d	language:C++
BN_MP_CMP_C	libtommath/tommath_class.h	26;"	d	language:C++
BN_MP_CMP_C	libtommath/tommath_class.h	452;"	d	language:C++
BN_MP_CMP_C	libtommath/tommath_class.h	594;"	d	language:C++
BN_MP_CMP_C	libtommath/tommath_class.h	616;"	d	language:C++
BN_MP_CMP_C	libtommath/tommath_class.h	640;"	d	language:C++
BN_MP_CMP_C	libtommath/tommath_class.h	721;"	d	language:C++
BN_MP_CMP_D_C	libtommath/tommath_class.h	147;"	d	language:C++
BN_MP_CMP_D_C	libtommath/tommath_class.h	27;"	d	language:C++
BN_MP_CMP_D_C	libtommath/tommath_class.h	379;"	d	language:C++
BN_MP_CMP_D_C	libtommath/tommath_class.h	453;"	d	language:C++
BN_MP_CMP_D_C	libtommath/tommath_class.h	471;"	d	language:C++
BN_MP_CMP_D_C	libtommath/tommath_class.h	613;"	d	language:C++
BN_MP_CMP_D_C	libtommath/tommath_class.h	625;"	d	language:C++
BN_MP_CMP_D_C	libtommath/tommath_class.h	634;"	d	language:C++
BN_MP_CMP_D_C	libtommath/tommath_class.h	646;"	d	language:C++
BN_MP_CMP_D_C	libtommath/tommath_class.h	717;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	157;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	187;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	222;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	244;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	28;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	308;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	394;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	454;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	466;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	504;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	538;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	547;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	732;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	743;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	821;"	d	language:C++
BN_MP_CMP_MAG_C	libtommath/tommath_class.h	828;"	d	language:C++
BN_MP_CNT_LSB_C	libtommath/tommath_class.h	29;"	d	language:C++
BN_MP_CNT_LSB_C	libtommath/tommath_class.h	392;"	d	language:C++
BN_MP_CNT_LSB_C	libtommath/tommath_class.h	474;"	d	language:C++
BN_MP_CNT_LSB_C	libtommath/tommath_class.h	637;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	139;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	182;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	245;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	274;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	293;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	30;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	355;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	364;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	411;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	445;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	525;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	567;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	588;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	601;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	869;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	886;"	d	language:C++
BN_MP_COPY_C	libtommath/tommath_class.h	950;"	d	language:C++
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	249;"	d	language:C++
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	31;"	d	language:C++
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	341;"	d	language:C++
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	534;"	d	language:C++
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	670;"	d	language:C++
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	728;"	d	language:C++
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	739;"	d	language:C++
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	750;"	d	language:C++
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	759;"	d	language:C++
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	766;"	d	language:C++
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	917;"	d	language:C++
BN_MP_COUNT_BITS_C	libtommath/tommath_class.h	942;"	d	language:C++
BN_MP_DIV_2D_C	libtommath/tommath_class.h	255;"	d	language:C++
BN_MP_DIV_2D_C	libtommath/tommath_class.h	294;"	d	language:C++
BN_MP_DIV_2D_C	libtommath/tommath_class.h	34;"	d	language:C++
BN_MP_DIV_2D_C	libtommath/tommath_class.h	393;"	d	language:C++
BN_MP_DIV_2D_C	libtommath/tommath_class.h	475;"	d	language:C++
BN_MP_DIV_2D_C	libtommath/tommath_class.h	638;"	d	language:C++
BN_MP_DIV_2D_C	libtommath/tommath_class.h	729;"	d	language:C++
BN_MP_DIV_2D_C	libtommath/tommath_class.h	740;"	d	language:C++
BN_MP_DIV_2D_C	libtommath/tommath_class.h	857;"	d	language:C++
BN_MP_DIV_2_C	libtommath/tommath_class.h	142;"	d	language:C++
BN_MP_DIV_2_C	libtommath/tommath_class.h	33;"	d	language:C++
BN_MP_DIV_2_C	libtommath/tommath_class.h	448;"	d	language:C++
BN_MP_DIV_2_C	libtommath/tommath_class.h	664;"	d	language:C++
BN_MP_DIV_2_C	libtommath/tommath_class.h	820;"	d	language:C++
BN_MP_DIV_2_C	libtommath/tommath_class.h	875;"	d	language:C++
BN_MP_DIV_2_C	libtommath/tommath_class.h	892;"	d	language:C++
BN_MP_DIV_3_C	libtommath/tommath_class.h	295;"	d	language:C++
BN_MP_DIV_3_C	libtommath/tommath_class.h	35;"	d	language:C++
BN_MP_DIV_3_C	libtommath/tommath_class.h	878;"	d	language:C++
BN_MP_DIV_3_C	libtommath/tommath_class.h	895;"	d	language:C++
BN_MP_DIV_3_C	libtommath/tommath_superclass.h	57;"	d	language:C++
BN_MP_DIV_C	libtommath/tommath_class.h	32;"	d	language:C++
BN_MP_DIV_C	libtommath/tommath_class.h	366;"	d	language:C++
BN_MP_DIV_C	libtommath/tommath_class.h	505;"	d	language:C++
BN_MP_DIV_C	libtommath/tommath_class.h	517;"	d	language:C++
BN_MP_DIV_C	libtommath/tommath_class.h	593;"	d	language:C++
BN_MP_DIV_C	libtommath/tommath_class.h	774;"	d	language:C++
BN_MP_DIV_C	libtommath/tommath_class.h	818;"	d	language:C++
BN_MP_DIV_D_C	libtommath/tommath_class.h	36;"	d	language:C++
BN_MP_DIV_D_C	libtommath/tommath_class.h	530;"	d	language:C++
BN_MP_DIV_D_C	libtommath/tommath_class.h	673;"	d	language:C++
BN_MP_DIV_D_C	libtommath/tommath_class.h	903;"	d	language:C++
BN_MP_DIV_D_C	libtommath/tommath_class.h	911;"	d	language:C++
BN_MP_DIV_SMALL	libtommath/tommath_superclass.h	37;"	d	language:C++
BN_MP_DR_IS_MODULUS_C	libtommath/tommath_class.h	334;"	d	language:C++
BN_MP_DR_IS_MODULUS_C	libtommath/tommath_class.h	37;"	d	language:C++
BN_MP_DR_IS_MODULUS_C	libtommath/tommath_superclass.h	50;"	d	language:C++
BN_MP_DR_REDUCE_C	libtommath/tommath_class.h	348;"	d	language:C++
BN_MP_DR_REDUCE_C	libtommath/tommath_class.h	38;"	d	language:C++
BN_MP_DR_REDUCE_C	libtommath/tommath_superclass.h	52;"	d	language:C++
BN_MP_DR_SETUP_C	libtommath/tommath_class.h	347;"	d	language:C++
BN_MP_DR_SETUP_C	libtommath/tommath_class.h	39;"	d	language:C++
BN_MP_DR_SETUP_C	libtommath/tommath_superclass.h	51;"	d	language:C++
BN_MP_ERROR_TO_STRING_C	libtommath/tommath_class.h	133;"	d	language:C++
BN_MP_ERR_C	libtommath/tommath_class.h	415;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	149;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	207;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	256;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	281;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	287;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	298;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	358;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	370;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	395;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	40;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	455;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	520;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	596;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	608;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	822;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	923;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	954;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	961;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	969;"	d	language:C++
BN_MP_EXCH_C	libtommath/tommath_class.h	976;"	d	language:C++
BN_MP_EXPTMOD_C	libtommath/tommath_class.h	42;"	d	language:C++
BN_MP_EXPTMOD_C	libtommath/tommath_class.h	615;"	d	language:C++
BN_MP_EXPTMOD_C	libtommath/tommath_class.h	639;"	d	language:C++
BN_MP_EXPTMOD_C	libtommath/tommath_superclass.h	25;"	d	language:C++
BN_MP_EXPTMOD_FAST_C	libtommath/tommath_class.h	337;"	d	language:C++
BN_MP_EXPTMOD_FAST_C	libtommath/tommath_class.h	43;"	d	language:C++
BN_MP_EXPT_D_C	libtommath/tommath_class.h	41;"	d	language:C++
BN_MP_EXPT_D_C	libtommath/tommath_class.h	589;"	d	language:C++
BN_MP_EXTEUCLID_C	libtommath/tommath_class.h	44;"	d	language:C++
BN_MP_FREAD_C	libtommath/tommath_class.h	45;"	d	language:C++
BN_MP_FWRITE_C	libtommath/tommath_class.h	46;"	d	language:C++
BN_MP_GCD_C	libtommath/tommath_class.h	47;"	d	language:C++
BN_MP_GCD_C	libtommath/tommath_class.h	503;"	d	language:C++
BN_MP_GCD_C	libtommath/tommath_superclass.h	21;"	d	language:C++
BN_MP_GET_INT_C	libtommath/tommath_class.h	463;"	d	language:C++
BN_MP_GET_INT_C	libtommath/tommath_class.h	48;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	154;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	162;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	167;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	172;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	178;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	192;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	236;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	269;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	306;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	49;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	511;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	544;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	563;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	568;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	574;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	701;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	833;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	937;"	d	language:C++
BN_MP_GROW_C	libtommath/tommath_class.h	981;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	198;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	259;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	276;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	327;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	342;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	416;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	421;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	426;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	431;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	50;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	516;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	579;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	586;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	614;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	627;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	651;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	727;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	738;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	749;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	757;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	806;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	839;"	d	language:C++
BN_MP_INIT_C	libtommath/tommath_class.h	943;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	205;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	260;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	319;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	391;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	473;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	51;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	606;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	635;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	671;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	709;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	816;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	855;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	902;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	910;"	d	language:C++
BN_MP_INIT_COPY_C	libtommath/tommath_class.h	921;"	d	language:C++
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	138;"	d	language:C++
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	247;"	d	language:C++
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	362;"	d	language:C++
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	443;"	d	language:C++
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	502;"	d	language:C++
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	52;"	d	language:C++
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	867;"	d	language:C++
BN_MP_INIT_MULTI_C	libtommath/tommath_class.h	884;"	d	language:C++
BN_MP_INIT_MULTI_C	libtommath/tommath_superclass.h	27;"	d	language:C++
BN_MP_INIT_SET_C	libtommath/tommath_class.h	53;"	d	language:C++
BN_MP_INIT_SET_INT_C	libtommath/tommath_class.h	461;"	d	language:C++
BN_MP_INIT_SET_INT_C	libtommath/tommath_class.h	54;"	d	language:C++
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	258;"	d	language:C++
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	285;"	d	language:C++
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	296;"	d	language:C++
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	482;"	d	language:C++
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	491;"	d	language:C++
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	55;"	d	language:C++
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	959;"	d	language:C++
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	967;"	d	language:C++
BN_MP_INIT_SIZE_C	libtommath/tommath_class.h	974;"	d	language:C++
BN_MP_INVMOD_C	libtommath/tommath_class.h	328;"	d	language:C++
BN_MP_INVMOD_C	libtommath/tommath_class.h	56;"	d	language:C++
BN_MP_INVMOD_C	libtommath/tommath_superclass.h	20;"	d	language:C++
BN_MP_INVMOD_SLOW_C	libtommath/tommath_class.h	438;"	d	language:C++
BN_MP_INVMOD_SLOW_C	libtommath/tommath_class.h	57;"	d	language:C++
BN_MP_ISEVEN_C	libtommath/tommath_class.h	137;"	d	language:C++
BN_MP_ISEVEN_C	libtommath/tommath_class.h	446;"	d	language:C++
BN_MP_ISEVEN_C	libtommath/tommath_class.h	649;"	d	language:C++
BN_MP_ISODD_C	libtommath/tommath_class.h	143;"	d	language:C++
BN_MP_ISODD_C	libtommath/tommath_class.h	336;"	d	language:C++
BN_MP_ISODD_C	libtommath/tommath_class.h	436;"	d	language:C++
BN_MP_ISODD_C	libtommath/tommath_class.h	449;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	146;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	232;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	243;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	292;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	365;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	388;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	435;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	442;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	472;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	602;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	672;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	693;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	814;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	856;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	901;"	d	language:C++
BN_MP_ISZERO_C	libtommath/tommath_class.h	909;"	d	language:C++
BN_MP_IS_SQUARE_C	libtommath/tommath_class.h	58;"	d	language:C++
BN_MP_JACOBI_C	libtommath/tommath_class.h	59;"	d	language:C++
BN_MP_KARATSUBA_MUL_C	libtommath/tommath_class.h	556;"	d	language:C++
BN_MP_KARATSUBA_MUL_C	libtommath/tommath_class.h	60;"	d	language:C++
BN_MP_KARATSUBA_MUL_C	libtommath/tommath_class.h	998;"	d	language:C++
BN_MP_KARATSUBA_MUL_C	libtommath/tommath_superclass.h	46;"	d	language:C++
BN_MP_KARATSUBA_SQR_C	libtommath/tommath_class.h	61;"	d	language:C++
BN_MP_KARATSUBA_SQR_C	libtommath/tommath_class.h	800;"	d	language:C++
BN_MP_KARATSUBA_SQR_C	libtommath/tommath_class.h	999;"	d	language:C++
BN_MP_KARATSUBA_SQR_C	libtommath/tommath_superclass.h	47;"	d	language:C++
BN_MP_LCM_C	libtommath/tommath_class.h	62;"	d	language:C++
BN_MP_LCM_C	libtommath/tommath_superclass.h	18;"	d	language:C++
BN_MP_LSHD_C	libtommath/tommath_class.h	261;"	d	language:C++
BN_MP_LSHD_C	libtommath/tommath_class.h	486;"	d	language:C++
BN_MP_LSHD_C	libtommath/tommath_class.h	496;"	d	language:C++
BN_MP_LSHD_C	libtommath/tommath_class.h	569;"	d	language:C++
BN_MP_LSHD_C	libtommath/tommath_class.h	63;"	d	language:C++
BN_MP_LSHD_C	libtommath/tommath_class.h	684;"	d	language:C++
BN_MP_LSHD_C	libtommath/tommath_class.h	719;"	d	language:C++
BN_MP_LSHD_C	libtommath/tommath_class.h	879;"	d	language:C++
BN_MP_LSHD_C	libtommath/tommath_class.h	896;"	d	language:C++
BN_MP_MOD_2D_C	libtommath/tommath_class.h	277;"	d	language:C++
BN_MP_MOD_2D_C	libtommath/tommath_class.h	65;"	d	language:C++
BN_MP_MOD_2D_C	libtommath/tommath_class.h	714;"	d	language:C++
BN_MP_MOD_2D_C	libtommath/tommath_class.h	868;"	d	language:C++
BN_MP_MOD_2D_C	libtommath/tommath_class.h	885;"	d	language:C++
BN_MP_MOD_C	libtommath/tommath_class.h	140;"	d	language:C++
BN_MP_MOD_C	libtommath/tommath_class.h	201;"	d	language:C++
BN_MP_MOD_C	libtommath/tommath_class.h	354;"	d	language:C++
BN_MP_MOD_C	libtommath/tommath_class.h	444;"	d	language:C++
BN_MP_MOD_C	libtommath/tommath_class.h	462;"	d	language:C++
BN_MP_MOD_C	libtommath/tommath_class.h	476;"	d	language:C++
BN_MP_MOD_C	libtommath/tommath_class.h	582;"	d	language:C++
BN_MP_MOD_C	libtommath/tommath_class.h	64;"	d	language:C++
BN_MP_MOD_C	libtommath/tommath_class.h	809;"	d	language:C++
BN_MP_MOD_C	libtommath/tommath_class.h	842;"	d	language:C++
BN_MP_MOD_C	libtommath/tommath_class.h	949;"	d	language:C++
BN_MP_MOD_C	libtommath/tommath_superclass.h	22;"	d	language:C++
BN_MP_MOD_D_C	libtommath/tommath_class.h	460;"	d	language:C++
BN_MP_MOD_D_C	libtommath/tommath_class.h	621;"	d	language:C++
BN_MP_MOD_D_C	libtommath/tommath_class.h	650;"	d	language:C++
BN_MP_MOD_D_C	libtommath/tommath_class.h	66;"	d	language:C++
BN_MP_MOD_D_C	libtommath/tommath_superclass.h	31;"	d	language:C++
BN_MP_MONTGOMERY_CALC_NORMALIZATION_C	libtommath/tommath_class.h	351;"	d	language:C++
BN_MP_MONTGOMERY_CALC_NORMALIZATION_C	libtommath/tommath_class.h	67;"	d	language:C++
BN_MP_MONTGOMERY_REDUCE_C	libtommath/tommath_class.h	346;"	d	language:C++
BN_MP_MONTGOMERY_REDUCE_C	libtommath/tommath_class.h	68;"	d	language:C++
BN_MP_MONTGOMERY_REDUCE_C	libtommath/tommath_superclass.h	69;"	d	language:C++
BN_MP_MONTGOMERY_SETUP_C	libtommath/tommath_class.h	344;"	d	language:C++
BN_MP_MONTGOMERY_SETUP_C	libtommath/tommath_class.h	69;"	d	language:C++
BN_MP_MULMOD_C	libtommath/tommath_class.h	352;"	d	language:C++
BN_MP_MULMOD_C	libtommath/tommath_class.h	74;"	d	language:C++
BN_MP_MULMOD_C	libtommath/tommath_superclass.h	23;"	d	language:C++
BN_MP_MUL_2D_C	libtommath/tommath_class.h	251;"	d	language:C++
BN_MP_MUL_2D_C	libtommath/tommath_class.h	397;"	d	language:C++
BN_MP_MUL_2D_C	libtommath/tommath_class.h	703;"	d	language:C++
BN_MP_MUL_2D_C	libtommath/tommath_class.h	72;"	d	language:C++
BN_MP_MUL_2D_C	libtommath/tommath_class.h	787;"	d	language:C++
BN_MP_MUL_2D_C	libtommath/tommath_class.h	876;"	d	language:C++
BN_MP_MUL_2D_C	libtommath/tommath_class.h	893;"	d	language:C++
BN_MP_MUL_2_C	libtommath/tommath_class.h	537;"	d	language:C++
BN_MP_MUL_2_C	libtommath/tommath_class.h	665;"	d	language:C++
BN_MP_MUL_2_C	libtommath/tommath_class.h	71;"	d	language:C++
BN_MP_MUL_2_C	libtommath/tommath_class.h	872;"	d	language:C++
BN_MP_MUL_2_C	libtommath/tommath_class.h	889;"	d	language:C++
BN_MP_MUL_C	libtommath/tommath_class.h	323;"	d	language:C++
BN_MP_MUL_C	libtommath/tommath_class.h	357;"	d	language:C++
BN_MP_MUL_C	libtommath/tommath_class.h	367;"	d	language:C++
BN_MP_MUL_C	libtommath/tommath_class.h	481;"	d	language:C++
BN_MP_MUL_C	libtommath/tommath_class.h	506;"	d	language:C++
BN_MP_MUL_C	libtommath/tommath_class.h	580;"	d	language:C++
BN_MP_MUL_C	libtommath/tommath_class.h	590;"	d	language:C++
BN_MP_MUL_C	libtommath/tommath_class.h	70;"	d	language:C++
BN_MP_MUL_C	libtommath/tommath_class.h	711;"	d	language:C++
BN_MP_MUL_C	libtommath/tommath_class.h	741;"	d	language:C++
BN_MP_MUL_C	libtommath/tommath_class.h	871;"	d	language:C++
BN_MP_MUL_C	libtommath/tommath_class.h	952;"	d	language:C++
BN_MP_MUL_D_C	libtommath/tommath_class.h	263;"	d	language:C++
BN_MP_MUL_D_C	libtommath/tommath_class.h	377;"	d	language:C++
BN_MP_MUL_D_C	libtommath/tommath_class.h	592;"	d	language:C++
BN_MP_MUL_D_C	libtommath/tommath_class.h	691;"	d	language:C++
BN_MP_MUL_D_C	libtommath/tommath_class.h	730;"	d	language:C++
BN_MP_MUL_D_C	libtommath/tommath_class.h	73;"	d	language:C++
BN_MP_MUL_D_C	libtommath/tommath_class.h	877;"	d	language:C++
BN_MP_MUL_D_C	libtommath/tommath_class.h	894;"	d	language:C++
BN_MP_NEG_C	libtommath/tommath_class.h	369;"	d	language:C++
BN_MP_NEG_C	libtommath/tommath_class.h	76;"	d	language:C++
BN_MP_N_ROOT_C	libtommath/tommath_class.h	75;"	d	language:C++
BN_MP_N_ROOT_C	libtommath/tommath_class.h	813;"	d	language:C++
BN_MP_OR_C	libtommath/tommath_class.h	77;"	d	language:C++
BN_MP_PRIME_FERMAT_C	libtommath/tommath_class.h	78;"	d	language:C++
BN_MP_PRIME_IS_DIVISIBLE_C	libtommath/tommath_class.h	626;"	d	language:C++
BN_MP_PRIME_IS_DIVISIBLE_C	libtommath/tommath_class.h	79;"	d	language:C++
BN_MP_PRIME_IS_PRIME_C	libtommath/tommath_class.h	662;"	d	language:C++
BN_MP_PRIME_IS_PRIME_C	libtommath/tommath_class.h	80;"	d	language:C++
BN_MP_PRIME_MILLER_RABIN_C	libtommath/tommath_class.h	629;"	d	language:C++
BN_MP_PRIME_MILLER_RABIN_C	libtommath/tommath_class.h	653;"	d	language:C++
BN_MP_PRIME_MILLER_RABIN_C	libtommath/tommath_class.h	81;"	d	language:C++
BN_MP_PRIME_NEXT_PRIME_C	libtommath/tommath_class.h	82;"	d	language:C++
BN_MP_PRIME_RABIN_MILLER_TRIALS_C	libtommath/tommath_class.h	83;"	d	language:C++
BN_MP_PRIME_RABIN_MILLER_TRIALS_C	libtommath/tommath_superclass.h	32;"	d	language:C++
BN_MP_PRIME_RANDOM_EX_C	libtommath/tommath_class.h	84;"	d	language:C++
BN_MP_PRIME_RANDOM_EX_C	libtommath/tommath_superclass.h	19;"	d	language:C++
BN_MP_RADIX_SIZE_C	libtommath/tommath_class.h	383;"	d	language:C++
BN_MP_RADIX_SIZE_C	libtommath/tommath_class.h	85;"	d	language:C++
BN_MP_RADIX_SMAP_C	libtommath/tommath_class.h	690;"	d	language:C++
BN_MP_RADIX_SMAP_C	libtommath/tommath_class.h	86;"	d	language:C++
BN_MP_RAND_C	libtommath/tommath_class.h	87;"	d	language:C++
BN_MP_READ_RADIX_C	libtommath/tommath_class.h	88;"	d	language:C++
BN_MP_READ_SIGNED_BIN_C	libtommath/tommath_class.h	89;"	d	language:C++
BN_MP_READ_UNSIGNED_BIN_C	libtommath/tommath_class.h	661;"	d	language:C++
BN_MP_READ_UNSIGNED_BIN_C	libtommath/tommath_class.h	697;"	d	language:C++
BN_MP_READ_UNSIGNED_BIN_C	libtommath/tommath_class.h	90;"	d	language:C++
BN_MP_REDUCE_2K_C	libtommath/tommath_class.h	350;"	d	language:C++
BN_MP_REDUCE_2K_C	libtommath/tommath_class.h	765;"	d	language:C++
BN_MP_REDUCE_2K_C	libtommath/tommath_class.h	92;"	d	language:C++
BN_MP_REDUCE_2K_C	libtommath/tommath_superclass.h	55;"	d	language:C++
BN_MP_REDUCE_2K_L_C	libtommath/tommath_class.h	93;"	d	language:C++
BN_MP_REDUCE_2K_L_C	libtommath/tommath_class.h	948;"	d	language:C++
BN_MP_REDUCE_2K_SETUP_C	libtommath/tommath_class.h	349;"	d	language:C++
BN_MP_REDUCE_2K_SETUP_C	libtommath/tommath_class.h	94;"	d	language:C++
BN_MP_REDUCE_2K_SETUP_C	libtommath/tommath_superclass.h	54;"	d	language:C++
BN_MP_REDUCE_2K_SETUP_L_C	libtommath/tommath_class.h	947;"	d	language:C++
BN_MP_REDUCE_2K_SETUP_L_C	libtommath/tommath_class.h	95;"	d	language:C++
BN_MP_REDUCE_C	libtommath/tommath_class.h	91;"	d	language:C++
BN_MP_REDUCE_C	libtommath/tommath_class.h	946;"	d	language:C++
BN_MP_REDUCE_C	libtommath/tommath_superclass.h	48;"	d	language:C++
BN_MP_REDUCE_IS_2K_C	libtommath/tommath_class.h	335;"	d	language:C++
BN_MP_REDUCE_IS_2K_C	libtommath/tommath_class.h	96;"	d	language:C++
BN_MP_REDUCE_IS_2K_C	libtommath/tommath_superclass.h	53;"	d	language:C++
BN_MP_REDUCE_IS_2K_L_C	libtommath/tommath_class.h	332;"	d	language:C++
BN_MP_REDUCE_IS_2K_L_C	libtommath/tommath_class.h	97;"	d	language:C++
BN_MP_REDUCE_SETUP_C	libtommath/tommath_class.h	708;"	d	language:C++
BN_MP_REDUCE_SETUP_C	libtommath/tommath_class.h	945;"	d	language:C++
BN_MP_REDUCE_SETUP_C	libtommath/tommath_class.h	98;"	d	language:C++
BN_MP_REDUCE_SETUP_C	libtommath/tommath_superclass.h	49;"	d	language:C++
BN_MP_RSHD_C	libtommath/tommath_class.h	155;"	d	language:C++
BN_MP_RSHD_C	libtommath/tommath_class.h	262;"	d	language:C++
BN_MP_RSHD_C	libtommath/tommath_class.h	279;"	d	language:C++
BN_MP_RSHD_C	libtommath/tommath_class.h	512;"	d	language:C++
BN_MP_RSHD_C	libtommath/tommath_class.h	546;"	d	language:C++
BN_MP_RSHD_C	libtommath/tommath_class.h	710;"	d	language:C++
BN_MP_RSHD_C	libtommath/tommath_class.h	817;"	d	language:C++
BN_MP_RSHD_C	libtommath/tommath_class.h	870;"	d	language:C++
BN_MP_RSHD_C	libtommath/tommath_class.h	887;"	d	language:C++
BN_MP_RSHD_C	libtommath/tommath_class.h	99;"	d	language:C++
BN_MP_SET_C	libtommath/tommath_class.h	100;"	d	language:C++
BN_MP_SET_C	libtommath/tommath_class.h	141;"	d	language:C++
BN_MP_SET_C	libtommath/tommath_class.h	248;"	d	language:C++
BN_MP_SET_C	libtommath/tommath_class.h	320;"	d	language:C++
BN_MP_SET_C	libtommath/tommath_class.h	353;"	d	language:C++
BN_MP_SET_C	libtommath/tommath_class.h	363;"	d	language:C++
BN_MP_SET_C	libtommath/tommath_class.h	422;"	d	language:C++
BN_MP_SET_C	libtommath/tommath_class.h	447;"	d	language:C++
BN_MP_SET_C	libtommath/tommath_class.h	536;"	d	language:C++
BN_MP_SET_C	libtommath/tommath_class.h	587;"	d	language:C++
BN_MP_SET_C	libtommath/tommath_class.h	628;"	d	language:C++
BN_MP_SET_C	libtommath/tommath_class.h	647;"	d	language:C++
BN_MP_SET_C	libtommath/tommath_class.h	718;"	d	language:C++
BN_MP_SET_C	libtommath/tommath_class.h	953;"	d	language:C++
BN_MP_SET_INT_C	libtommath/tommath_class.h	101;"	d	language:C++
BN_MP_SET_INT_C	libtommath/tommath_class.h	427;"	d	language:C++
BN_MP_SET_INT_C	libtommath/tommath_superclass.h	26;"	d	language:C++
BN_MP_SHRINK_C	libtommath/tommath_class.h	102;"	d	language:C++
BN_MP_SHRINK_C	libtommath/tommath_superclass.h	17;"	d	language:C++
BN_MP_SIGNED_BIN_SIZE_C	libtommath/tommath_class.h	103;"	d	language:C++
BN_MP_SIGNED_BIN_SIZE_C	libtommath/tommath_class.h	850;"	d	language:C++
BN_MP_SQRMOD_C	libtommath/tommath_class.h	105;"	d	language:C++
BN_MP_SQRMOD_C	libtommath/tommath_class.h	641;"	d	language:C++
BN_MP_SQRT_C	libtommath/tommath_class.h	106;"	d	language:C++
BN_MP_SQRT_C	libtommath/tommath_class.h	464;"	d	language:C++
BN_MP_SQR_C	libtommath/tommath_class.h	104;"	d	language:C++
BN_MP_SQR_C	libtommath/tommath_class.h	321;"	d	language:C++
BN_MP_SQR_C	libtommath/tommath_class.h	356;"	d	language:C++
BN_MP_SQR_C	libtommath/tommath_class.h	465;"	d	language:C++
BN_MP_SQR_C	libtommath/tommath_class.h	493;"	d	language:C++
BN_MP_SQR_C	libtommath/tommath_class.h	807;"	d	language:C++
BN_MP_SQR_C	libtommath/tommath_class.h	888;"	d	language:C++
BN_MP_SQR_C	libtommath/tommath_class.h	951;"	d	language:C++
BN_MP_SUBMOD_C	libtommath/tommath_class.h	109;"	d	language:C++
BN_MP_SUB_C	libtommath/tommath_class.h	107;"	d	language:C++
BN_MP_SUB_C	libtommath/tommath_class.h	144;"	d	language:C++
BN_MP_SUB_C	libtommath/tommath_class.h	253;"	d	language:C++
BN_MP_SUB_C	libtommath/tommath_class.h	368;"	d	language:C++
BN_MP_SUB_C	libtommath/tommath_class.h	451;"	d	language:C++
BN_MP_SUB_C	libtommath/tommath_class.h	484;"	d	language:C++
BN_MP_SUB_C	libtommath/tommath_class.h	494;"	d	language:C++
BN_MP_SUB_C	libtommath/tommath_class.h	591;"	d	language:C++
BN_MP_SUB_C	libtommath/tommath_class.h	716;"	d	language:C++
BN_MP_SUB_C	libtommath/tommath_class.h	840;"	d	language:C++
BN_MP_SUB_C	libtommath/tommath_class.h	874;"	d	language:C++
BN_MP_SUB_C	libtommath/tommath_class.h	891;"	d	language:C++
BN_MP_SUB_D_C	libtommath/tommath_class.h	108;"	d	language:C++
BN_MP_SUB_D_C	libtommath/tommath_class.h	193;"	d	language:C++
BN_MP_SUB_D_C	libtommath/tommath_class.h	595;"	d	language:C++
BN_MP_SUB_D_C	libtommath/tommath_class.h	636;"	d	language:C++
BN_MP_SUB_D_C	libtommath/tommath_class.h	648;"	d	language:C++
BN_MP_SUB_D_C	libtommath/tommath_class.h	663;"	d	language:C++
BN_MP_S_RMAP_C	libtommath/tommath_class.h	376;"	d	language:C++
BN_MP_S_RMAP_C	libtommath/tommath_class.h	678;"	d	language:C++
BN_MP_S_RMAP_C	libtommath/tommath_class.h	689;"	d	language:C++
BN_MP_S_RMAP_C	libtommath/tommath_class.h	905;"	d	language:C++
BN_MP_S_RMAP_C	libtommath/tommath_class.h	913;"	d	language:C++
BN_MP_TOOM_MUL_C	libtommath/tommath_class.h	1000;"	d	language:C++
BN_MP_TOOM_MUL_C	libtommath/tommath_class.h	114;"	d	language:C++
BN_MP_TOOM_MUL_C	libtommath/tommath_class.h	555;"	d	language:C++
BN_MP_TOOM_MUL_C	libtommath/tommath_superclass.h	44;"	d	language:C++
BN_MP_TOOM_SQR_C	libtommath/tommath_class.h	1001;"	d	language:C++
BN_MP_TOOM_SQR_C	libtommath/tommath_class.h	115;"	d	language:C++
BN_MP_TOOM_SQR_C	libtommath/tommath_class.h	799;"	d	language:C++
BN_MP_TOOM_SQR_C	libtommath/tommath_superclass.h	45;"	d	language:C++
BN_MP_TORADIX_C	libtommath/tommath_class.h	116;"	d	language:C++
BN_MP_TORADIX_C	libtommath/tommath_class.h	384;"	d	language:C++
BN_MP_TORADIX_N_C	libtommath/tommath_class.h	117;"	d	language:C++
BN_MP_TO_SIGNED_BIN_C	libtommath/tommath_class.h	110;"	d	language:C++
BN_MP_TO_SIGNED_BIN_C	libtommath/tommath_class.h	851;"	d	language:C++
BN_MP_TO_SIGNED_BIN_N_C	libtommath/tommath_class.h	111;"	d	language:C++
BN_MP_TO_UNSIGNED_BIN_C	libtommath/tommath_class.h	112;"	d	language:C++
BN_MP_TO_UNSIGNED_BIN_C	libtommath/tommath_class.h	846;"	d	language:C++
BN_MP_TO_UNSIGNED_BIN_C	libtommath/tommath_class.h	863;"	d	language:C++
BN_MP_TO_UNSIGNED_BIN_C	libtommath/tommath_superclass.h	30;"	d	language:C++
BN_MP_TO_UNSIGNED_BIN_N_C	libtommath/tommath_class.h	113;"	d	language:C++
BN_MP_UNSIGNED_BIN_SIZE_C	libtommath/tommath_class.h	118;"	d	language:C++
BN_MP_UNSIGNED_BIN_SIZE_C	libtommath/tommath_class.h	795;"	d	language:C++
BN_MP_UNSIGNED_BIN_SIZE_C	libtommath/tommath_class.h	862;"	d	language:C++
BN_MP_UNSIGNED_BIN_SIZE_C	libtommath/tommath_superclass.h	29;"	d	language:C++
BN_MP_XOR_C	libtommath/tommath_class.h	119;"	d	language:C++
BN_MP_ZERO_C	libtommath/tommath_class.h	120;"	d	language:C++
BN_MP_ZERO_C	libtommath/tommath_class.h	177;"	d	language:C++
BN_MP_ZERO_C	libtommath/tommath_class.h	246;"	d	language:C++
BN_MP_ZERO_C	libtommath/tommath_class.h	275;"	d	language:C++
BN_MP_ZERO_C	libtommath/tommath_class.h	375;"	d	language:C++
BN_MP_ZERO_C	libtommath/tommath_class.h	390;"	d	language:C++
BN_MP_ZERO_C	libtommath/tommath_class.h	524;"	d	language:C++
BN_MP_ZERO_C	libtommath/tommath_class.h	682;"	d	language:C++
BN_MP_ZERO_C	libtommath/tommath_class.h	688;"	d	language:C++
BN_MP_ZERO_C	libtommath/tommath_class.h	702;"	d	language:C++
BN_MP_ZERO_C	libtommath/tommath_class.h	778;"	d	language:C++
BN_MP_ZERO_C	libtommath/tommath_class.h	782;"	d	language:C++
BN_MP_ZERO_C	libtommath/tommath_class.h	786;"	d	language:C++
BN_MP_ZERO_C	libtommath/tommath_class.h	815;"	d	language:C++
BN_PRIME_TAB_C	libtommath/tommath_class.h	121;"	d	language:C++
BN_PRIME_TAB_C	libtommath/tommath_superclass.h	34;"	d	language:C++
BN_REVERSE_C	libtommath/tommath_class.h	122;"	d	language:C++
BN_REVERSE_C	libtommath/tommath_superclass.h	33;"	d	language:C++
BN_S_MP_ADD_C	libtommath/tommath_class.h	123;"	d	language:C++
BN_S_MP_ADD_C	libtommath/tommath_class.h	186;"	d	language:C++
BN_S_MP_ADD_C	libtommath/tommath_class.h	495;"	d	language:C++
BN_S_MP_ADD_C	libtommath/tommath_class.h	731;"	d	language:C++
BN_S_MP_ADD_C	libtommath/tommath_class.h	742;"	d	language:C++
BN_S_MP_ADD_C	libtommath/tommath_class.h	827;"	d	language:C++
BN_S_MP_EXPTMOD_C	libtommath/tommath_class.h	124;"	d	language:C++
BN_S_MP_EXPTMOD_C	libtommath/tommath_class.h	333;"	d	language:C++
BN_S_MP_EXPTMOD_C	libtommath/tommath_superclass.h	56;"	d	language:C++
BN_S_MP_MUL_C	libtommath/tommath_class.h	558;"	d	language:C++
BN_S_MP_MUL_DIGS_C	libtommath/tommath_class.h	125;"	d	language:C++
BN_S_MP_MUL_DIGS_C	libtommath/tommath_class.h	559;"	d	language:C++
BN_S_MP_MUL_DIGS_C	libtommath/tommath_class.h	715;"	d	language:C++
BN_S_MP_MUL_DIGS_C	libtommath/tommath_superclass.h	67;"	d	language:C++
BN_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_class.h	126;"	d	language:C++
BN_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_class.h	712;"	d	language:C++
BN_S_MP_MUL_HIGH_DIGS_C	libtommath/tommath_superclass.h	58;"	d	language:C++
BN_S_MP_SQR_C	libtommath/tommath_class.h	127;"	d	language:C++
BN_S_MP_SQR_C	libtommath/tommath_class.h	802;"	d	language:C++
BN_S_MP_SQR_C	libtommath/tommath_superclass.h	68;"	d	language:C++
BN_S_MP_SUB_C	libtommath/tommath_class.h	128;"	d	language:C++
BN_S_MP_SUB_C	libtommath/tommath_class.h	158;"	d	language:C++
BN_S_MP_SUB_C	libtommath/tommath_class.h	188;"	d	language:C++
BN_S_MP_SUB_C	libtommath/tommath_class.h	309;"	d	language:C++
BN_S_MP_SUB_C	libtommath/tommath_class.h	396;"	d	language:C++
BN_S_MP_SUB_C	libtommath/tommath_class.h	539;"	d	language:C++
BN_S_MP_SUB_C	libtommath/tommath_class.h	548;"	d	language:C++
BN_S_MP_SUB_C	libtommath/tommath_class.h	722;"	d	language:C++
BN_S_MP_SUB_C	libtommath/tommath_class.h	733;"	d	language:C++
BN_S_MP_SUB_C	libtommath/tommath_class.h	744;"	d	language:C++
BN_S_MP_SUB_C	libtommath/tommath_class.h	753;"	d	language:C++
BN_S_MP_SUB_C	libtommath/tommath_class.h	760;"	d	language:C++
BN_S_MP_SUB_C	libtommath/tommath_class.h	829;"	d	language:C++
BPD	libtomcrypt/src/encauth/gcm/gcm_gf_mult.c	108;"	d	language:C	file:
BROKEN_REALPATH	sftp-server/defines.h	60;"	d	language:C++
BSDgetopt	sftp-server/openbsd-compat/getopt.c	/^BSDgetopt(nargc, nargv, ostr)$/;"	f	language:C
BSDgetopt	sftp-server/openbsd-compat/openbsd-compat.h	/^int BSDgetopt(int argc, char * const *argv, const char *opts);$/;"	p	language:C++	signature:(int argc, char * const *argv, const char *opts)
BSDoptarg	sftp-server/openbsd-compat/getopt.c	/^char	*BSDoptarg;		\/* argument associated with option *\/$/;"	v	language:C
BSDopterr	sftp-server/openbsd-compat/getopt.c	/^int	BSDopterr = 1,		\/* if error message should be printed *\/$/;"	v	language:C
BSDoptind	sftp-server/openbsd-compat/getopt.c	/^	BSDoptind = 1,		\/* index into parent argv vector *\/$/;"	v	language:C
BSDoptopt	sftp-server/openbsd-compat/getopt.c	/^	BSDoptopt,		\/* character checked for validity *\/$/;"	v	language:C
BSDoptreset	sftp-server/openbsd-compat/getopt.c	/^	BSDoptreset;		\/* reset getopt *\/$/;"	v	language:C
BSWAP	libtomcrypt/src/headers/tomcrypt_macros.h	230;"	d	language:C++
BUF	scp.c	/^} BUF;$/;"	t	language:C	typeref:struct:__anon17	file:
BUFFER_ALLOCSZ	sftp-server/buffer.c	29;"	d	language:C	file:
BUFFER_H	sftp-server/buffer.h	17;"	d	language:C++
BUFFER_MAX_CHUNK	sftp-server/buffer.c	27;"	d	language:C	file:
BUFFER_MAX_LEN	sftp-server/buffer.c	28;"	d	language:C	file:
BUF_MAX_INCR	buffer.c	34;"	d	language:C	file:
BUF_MAX_MPINT	buffer.c	38;"	d	language:C	file:
BUF_MAX_SIZE	buffer.c	35;"	d	language:C	file:
BYTE2WORD	libtomcrypt/src/prngs/sober128.c	/^static ulong32 BYTE2WORD(unsigned char *b)$/;"	f	language:C	file:	signature:(unsigned char *b)
BYTES	libtommath/mtest/mpi.h	189;"	d	language:C++
BYTE_ORDER	sftp-server/defines.h	501;"	d	language:C++
BYTE_ORDER	sftp-server/defines.h	503;"	d	language:C++
Background	libtomcrypt/crypt.tex	/^\\mysection{Symmetric Modes of Operations}$/;"	u	language:Tex
Barrett Reduction	libtommath/bn.tex	/^of $b$.  This algorithm accepts an input $a$ of any range and is not limited by $0 \\le a < b^2$.$/;"	s	language:Tex
Basic Operations	libtommath/bn.tex	/^\\end{alltt} \\end{small}$/;"	c	language:Tex
Binary Conversions	libtommath/bn.tex	/^can be used to denote a negative number.$/;"	s	language:Tex
Block Size	libtomcrypt/crypt.tex	/^The \\textit{hashsize} variable indicates the length of the output in octets.$/;"	u	language:Tex
Buffer	sftp-server/buffer.h	/^}       Buffer;$/;"	t	language:C++	typeref:struct:__anon3
CARRYOUT	libtommath/mtest/mpi.c	78;"	d	language:C	file:
CBC Mode	libtomcrypt/crypt.tex	/^than once.$/;"	b	language:Tex
CC	sftp-server/Makefile	/^CC       = arm-linux-androideabi-gcc$/;"	m	language:Make
CCM Example	libtomcrypt/crypt.tex	/^return \\textbf{CRYPT\\_NOP}.$/;"	b	language:Tex
CCM Mode	libtomcrypt/crypt.tex	/^appropriately.$/;"	u	language:Tex
CCM_DECRYPT	libtomcrypt/src/headers/tomcrypt_mac.h	199;"	d	language:C++
CCM_ENCRYPT	libtomcrypt/src/headers/tomcrypt_mac.h	198;"	d	language:C++
CFB Mode	libtomcrypt/crypt.tex	/^as the block cipher is under a chosen plaintext attack (provided the initial vector is unique).$/;"	b	language:Tex
CFLAGS	sftp-server/Makefile	/^CFLAGS   = -I. $(CPPFLAGS) -march=armv7-a -mfloat-abi=softfp$/;"	m	language:Make
CHANNEL_EFD_INPUT_ACTIVE	sftp-server/channels.h	189;"	d	language:C++
CHANNEL_EFD_OUTPUT_ACTIVE	sftp-server/channels.h	193;"	d	language:C++
CHANNEL_H	sftp-server/channels.h	39;"	d	language:C++
CHANNEL_ID_AGENT	channel.h	36;"	d	language:C++
CHANNEL_ID_NONE	channel.h	33;"	d	language:C++
CHANNEL_ID_SESSION	channel.h	34;"	d	language:C++
CHANNEL_ID_TCPDIRECT	channel.h	37;"	d	language:C++
CHANNEL_ID_TCPFORWARDED	channel.h	38;"	d	language:C++
CHANNEL_ID_X11	channel.h	35;"	d	language:C++
CHAN_CLOSE_RCVD	sftp-server/channels.h	181;"	d	language:C++
CHAN_CLOSE_SENT	sftp-server/channels.h	180;"	d	language:C++
CHAN_EOF_RCVD	sftp-server/channels.h	183;"	d	language:C++
CHAN_EOF_SENT	sftp-server/channels.h	182;"	d	language:C++
CHAN_EXTENDED_IGNORE	sftp-server/channels.h	156;"	d	language:C++
CHAN_EXTENDED_READ	sftp-server/channels.h	157;"	d	language:C++
CHAN_EXTENDED_WRITE	sftp-server/channels.h	158;"	d	language:C++
CHAN_EXTEND_SIZE	channel.h	48;"	d	language:C++
CHAN_INPUT_CLOSED	sftp-server/channels.h	172;"	d	language:C++
CHAN_INPUT_OPEN	sftp-server/channels.h	169;"	d	language:C++
CHAN_INPUT_WAIT_DRAIN	sftp-server/channels.h	170;"	d	language:C++
CHAN_INPUT_WAIT_OCLOSE	sftp-server/channels.h	171;"	d	language:C++
CHAN_LOCAL	sftp-server/channels.h	184;"	d	language:C++
CHAN_OUTPUT_CLOSED	sftp-server/channels.h	178;"	d	language:C++
CHAN_OUTPUT_OPEN	sftp-server/channels.h	175;"	d	language:C++
CHAN_OUTPUT_WAIT_DRAIN	sftp-server/channels.h	176;"	d	language:C++
CHAN_OUTPUT_WAIT_IEOF	sftp-server/channels.h	177;"	d	language:C++
CHAN_RBUF	sftp-server/channels.h	186;"	d	language:C++
CHAN_SES_PACKET_DEFAULT	sftp-server/channels.h	161;"	d	language:C++
CHAN_SES_WINDOW_DEFAULT	sftp-server/channels.h	162;"	d	language:C++
CHAN_TCP_PACKET_DEFAULT	sftp-server/channels.h	163;"	d	language:C++
CHAN_TCP_WINDOW_DEFAULT	sftp-server/channels.h	164;"	d	language:C++
CHAN_X11_PACKET_DEFAULT	sftp-server/channels.h	165;"	d	language:C++
CHAN_X11_WINDOW_DEFAULT	sftp-server/channels.h	166;"	d	language:C++
CHECKCLEARTOWRITE	debug.h	50;"	d	language:C++
CIRCLEQ_EMPTY	sftp-server/openbsd-compat/sys-queue.h	112;"	d	language:C++
CIRCLEQ_EMPTY	sftp-server/openbsd-compat/sys-queue.h	521;"	d	language:C++
CIRCLEQ_END	sftp-server/openbsd-compat/sys-queue.h	109;"	d	language:C++
CIRCLEQ_END	sftp-server/openbsd-compat/sys-queue.h	518;"	d	language:C++
CIRCLEQ_ENTRY	sftp-server/openbsd-compat/sys-queue.h	106;"	d	language:C++
CIRCLEQ_ENTRY	sftp-server/openbsd-compat/sys-queue.h	507;"	d	language:C++
CIRCLEQ_FIRST	sftp-server/openbsd-compat/sys-queue.h	107;"	d	language:C++
CIRCLEQ_FIRST	sftp-server/openbsd-compat/sys-queue.h	516;"	d	language:C++
CIRCLEQ_FOREACH	sftp-server/openbsd-compat/sys-queue.h	113;"	d	language:C++
CIRCLEQ_FOREACH	sftp-server/openbsd-compat/sys-queue.h	524;"	d	language:C++
CIRCLEQ_FOREACH_REVERSE	sftp-server/openbsd-compat/sys-queue.h	114;"	d	language:C++
CIRCLEQ_FOREACH_REVERSE	sftp-server/openbsd-compat/sys-queue.h	529;"	d	language:C++
CIRCLEQ_HEAD	sftp-server/openbsd-compat/sys-queue.h	104;"	d	language:C++
CIRCLEQ_HEAD	sftp-server/openbsd-compat/sys-queue.h	498;"	d	language:C++
CIRCLEQ_HEAD_INITIALIZER	sftp-server/openbsd-compat/sys-queue.h	105;"	d	language:C++
CIRCLEQ_HEAD_INITIALIZER	sftp-server/openbsd-compat/sys-queue.h	504;"	d	language:C++
CIRCLEQ_INIT	sftp-server/openbsd-compat/sys-queue.h	115;"	d	language:C++
CIRCLEQ_INIT	sftp-server/openbsd-compat/sys-queue.h	537;"	d	language:C++
CIRCLEQ_INSERT_AFTER	sftp-server/openbsd-compat/sys-queue.h	116;"	d	language:C++
CIRCLEQ_INSERT_AFTER	sftp-server/openbsd-compat/sys-queue.h	542;"	d	language:C++
CIRCLEQ_INSERT_BEFORE	sftp-server/openbsd-compat/sys-queue.h	117;"	d	language:C++
CIRCLEQ_INSERT_BEFORE	sftp-server/openbsd-compat/sys-queue.h	552;"	d	language:C++
CIRCLEQ_INSERT_HEAD	sftp-server/openbsd-compat/sys-queue.h	118;"	d	language:C++
CIRCLEQ_INSERT_HEAD	sftp-server/openbsd-compat/sys-queue.h	562;"	d	language:C++
CIRCLEQ_INSERT_TAIL	sftp-server/openbsd-compat/sys-queue.h	119;"	d	language:C++
CIRCLEQ_INSERT_TAIL	sftp-server/openbsd-compat/sys-queue.h	572;"	d	language:C++
CIRCLEQ_LAST	sftp-server/openbsd-compat/sys-queue.h	108;"	d	language:C++
CIRCLEQ_LAST	sftp-server/openbsd-compat/sys-queue.h	517;"	d	language:C++
CIRCLEQ_NEXT	sftp-server/openbsd-compat/sys-queue.h	110;"	d	language:C++
CIRCLEQ_NEXT	sftp-server/openbsd-compat/sys-queue.h	519;"	d	language:C++
CIRCLEQ_PREV	sftp-server/openbsd-compat/sys-queue.h	111;"	d	language:C++
CIRCLEQ_PREV	sftp-server/openbsd-compat/sys-queue.h	520;"	d	language:C++
CIRCLEQ_REMOVE	sftp-server/openbsd-compat/sys-queue.h	120;"	d	language:C++
CIRCLEQ_REMOVE	sftp-server/openbsd-compat/sys-queue.h	582;"	d	language:C++
CIRCLEQ_REPLACE	sftp-server/openbsd-compat/sys-queue.h	121;"	d	language:C++
CIRCLEQ_REPLACE	sftp-server/openbsd-compat/sys-queue.h	597;"	d	language:C++
CMDNEEDS	scp.c	292;"	d	language:C	file:
CMSG_DATA	sftp-server/defines.h	473;"	d	language:C++
CMSG_FIRSTHDR	sftp-server/defines.h	481;"	d	language:C++
CMSG_LEN	sftp-server/defines.h	463;"	d	language:C++
CMSG_SPACE	sftp-server/defines.h	468;"	d	language:C++
COMPAT_H	sftp-server/compat.h	28;"	d	language:C++
CONST64	libtomcrypt/src/headers/tomcrypt_macros.h	3;"	d	language:C++
CONST64	libtomcrypt/src/headers/tomcrypt_macros.h	6;"	d	language:C++
CPPFLAGS	sftp-server/Makefile	/^CPPFLAGS =$/;"	m	language:Make
CRYPT	libtomcrypt/src/headers/tomcrypt.h	19;"	d	language:C++
CRYPT_BUFFER_OVERFLOW	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_BUFFER_OVERFLOW,  \/* Not enough space for output *\/$/;"	e	language:C++	enum:__anon32
CRYPT_ERROR	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_ERROR,            \/* Generic Error *\/$/;"	e	language:C++	enum:__anon32
CRYPT_ERROR_READPRNG	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_ERROR_READPRNG,   \/* Could not read enough from PRNG *\/$/;"	e	language:C++	enum:__anon32
CRYPT_FAIL_TESTVECTOR	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_FAIL_TESTVECTOR,  \/* Algorithm failed test vectors *\/$/;"	e	language:C++	enum:__anon32
CRYPT_FILE_NOTFOUND	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_FILE_NOTFOUND,    \/* File Not Found *\/$/;"	e	language:C++	enum:__anon32
CRYPT_INVALID_ARG	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_INVALID_ARG,      \/* Generic invalid argument *\/$/;"	e	language:C++	enum:__anon32
CRYPT_INVALID_CIPHER	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_INVALID_CIPHER,   \/* Invalid cipher specified *\/$/;"	e	language:C++	enum:__anon32
CRYPT_INVALID_HASH	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_INVALID_HASH,     \/* Invalid hash specified *\/$/;"	e	language:C++	enum:__anon32
CRYPT_INVALID_KEYSIZE	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_INVALID_KEYSIZE,  \/* Invalid key size given *\/$/;"	e	language:C++	enum:__anon32
CRYPT_INVALID_PACKET	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_INVALID_PACKET,   \/* Invalid input packet given *\/$/;"	e	language:C++	enum:__anon32
CRYPT_INVALID_PRIME_SIZE	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_INVALID_PRIME_SIZE,\/* Invalid size of prime requested *\/$/;"	e	language:C++	enum:__anon32
CRYPT_INVALID_PRNG	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_INVALID_PRNG,     \/* Invalid PRNG specified *\/$/;"	e	language:C++	enum:__anon32
CRYPT_INVALID_PRNGSIZE	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_INVALID_PRNGSIZE, \/* Invalid number of bits for a PRNG *\/$/;"	e	language:C++	enum:__anon32
CRYPT_INVALID_ROUNDS	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_INVALID_ROUNDS,   \/* Invalid number of rounds *\/$/;"	e	language:C++	enum:__anon32
CRYPT_MEM	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_MEM,              \/* Out of memory *\/$/;"	e	language:C++	enum:__anon32
CRYPT_NOP	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_NOP,              \/* Not a failure but no operation was performed *\/$/;"	e	language:C++	enum:__anon32
CRYPT_OK	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_OK=0,             \/* Result OK *\/$/;"	e	language:C++	enum:__anon32
CRYPT_PK_DUP	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_PK_DUP,           \/* Duplicate key already in key ring *\/$/;"	e	language:C++	enum:__anon32
CRYPT_PK_INVALID_PADDING	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_PK_INVALID_PADDING \/* Invalid padding on input *\/$/;"	e	language:C++	enum:__anon32
CRYPT_PK_INVALID_SIZE	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_PK_INVALID_SIZE,  \/* Invalid size input for PK parameters *\/$/;"	e	language:C++	enum:__anon32
CRYPT_PK_INVALID_SYSTEM	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_PK_INVALID_SYSTEM,\/* Invalid PK system specified *\/$/;"	e	language:C++	enum:__anon32
CRYPT_PK_INVALID_TYPE	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_PK_INVALID_TYPE,  \/* Invalid type of PK key *\/$/;"	e	language:C++	enum:__anon32
CRYPT_PK_NOT_FOUND	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_PK_NOT_FOUND,     \/* Key not found in keyring *\/$/;"	e	language:C++	enum:__anon32
CRYPT_PK_NOT_PRIVATE	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_PK_NOT_PRIVATE,   \/* Requires a private PK key *\/$/;"	e	language:C++	enum:__anon32
CRYPT_PK_TYPE_MISMATCH	libtomcrypt/src/headers/tomcrypt.h	/^   CRYPT_PK_TYPE_MISMATCH, \/* Not equivalent types of PK keys *\/$/;"	e	language:C++	enum:__anon32
CTR Mode	libtomcrypt/crypt.tex	/^It is important that the initial vector be unique and preferably random for each message encrypted under the same key.$/;"	b	language:Tex
CTR_COUNTER_BIG_ENDIAN	libtomcrypt/src/headers/tomcrypt_cipher.h	776;"	d	language:C++
CTR_COUNTER_LITTLE_ENDIAN	libtomcrypt/src/headers/tomcrypt_cipher.h	775;"	d	language:C++
CUSTOM_FAILED_LOGIN	sftp-server/defines.h	721;"	d	language:C++
CUSTOM_FAILED_LOGIN	sftp-server/openbsd-compat/bsd-cray.h	47;"	d	language:C++
CUSTOM_FAILED_LOGIN	sftp-server/openbsd-compat/port-aix.h	97;"	d	language:C++
CUSTOM_SSH_AUDIT_EVENTS	sftp-server/defines.h	566;"	d	language:C++
CUSTOM_SYS_AUTH_ALLOWED_USER	sftp-server/openbsd-compat/port-aix.h	91;"	d	language:C++
CUSTOM_SYS_AUTH_GET_LASTLOGIN_MSG	sftp-server/openbsd-compat/port-aix.h	95;"	d	language:C++
CUSTOM_SYS_AUTH_PASSWD	sftp-server/defines.h	705;"	d	language:C++
CUSTOM_SYS_AUTH_PASSWD	sftp-server/defines.h	709;"	d	language:C++
CUSTOM_SYS_AUTH_PASSWD	sftp-server/openbsd-compat/port-aix.h	90;"	d	language:C++
CUSTOM_SYS_AUTH_RECORD_LOGIN	sftp-server/openbsd-compat/port-aix.h	93;"	d	language:C++
CUSTOM_SYS_TUN_OPEN	sftp-server/openbsd-compat/port-tun.h	23;"	d	language:C++
Ch	libtomcrypt/src/hashes/sha2/sha256.c	58;"	d	language:C	file:
Ch	libtomcrypt/src/hashes/sha2/sha512.c	83;"	d	language:C	file:
ChanSess	chansession.h	/^struct ChanSess {$/;"	s	language:C++
ChanSess::agentdir	chansession.h	/^	char * agentdir;$/;"	m	language:C++	struct:ChanSess	access:public
ChanSess::agentfile	chansession.h	/^	char * agentfile;$/;"	m	language:C++	struct:ChanSess	access:public
ChanSess::agentlistener	chansession.h	/^	struct Listener * agentlistener;$/;"	m	language:C++	struct:ChanSess	typeref:struct:ChanSess::Listener	access:public
ChanSess::cmd	chansession.h	/^	unsigned char * cmd; \/* command to exec *\/$/;"	m	language:C++	struct:ChanSess	access:public
ChanSess::connection_string	chansession.h	/^	char *connection_string;$/;"	m	language:C++	struct:ChanSess	access:public
ChanSess::exit	chansession.h	/^	struct exitinfo exit;$/;"	m	language:C++	struct:ChanSess	typeref:struct:ChanSess::exitinfo	access:public
ChanSess::master	chansession.h	/^	int master; \/* the master terminal fd*\/$/;"	m	language:C++	struct:ChanSess	access:public
ChanSess::pid	chansession.h	/^	pid_t pid; \/* child process pid *\/$/;"	m	language:C++	struct:ChanSess	access:public
ChanSess::slave	chansession.h	/^	int slave;$/;"	m	language:C++	struct:ChanSess	access:public
ChanSess::term	chansession.h	/^	unsigned char * term;$/;"	m	language:C++	struct:ChanSess	access:public
ChanSess::tty	chansession.h	/^	unsigned char * tty;$/;"	m	language:C++	struct:ChanSess	access:public
ChanSess::x11authcookie	chansession.h	/^	char * x11authcookie;$/;"	m	language:C++	struct:ChanSess	access:public
ChanSess::x11authprot	chansession.h	/^	char * x11authprot;$/;"	m	language:C++	struct:ChanSess	access:public
ChanSess::x11listener	chansession.h	/^	struct Listener * x11listener;$/;"	m	language:C++	struct:ChanSess	typeref:struct:ChanSess::Listener	access:public
ChanSess::x11port	chansession.h	/^	int x11port;$/;"	m	language:C++	struct:ChanSess	access:public
ChanSess::x11screennum	chansession.h	/^	unsigned int x11screennum;$/;"	m	language:C++	struct:ChanSess	access:public
ChanSess::x11singleconn	chansession.h	/^	unsigned char x11singleconn;$/;"	m	language:C++	struct:ChanSess	access:public
ChanType	channel.h	/^struct ChanType {$/;"	s	language:C++
ChanType::check_close	channel.h	/^	int (*check_close)(struct Channel*);$/;"	m	language:C++	struct:ChanType	access:public
ChanType::closehandler	channel.h	/^	void (*closehandler)(struct Channel*);$/;"	m	language:C++	struct:ChanType	access:public
ChanType::inithandler	channel.h	/^	int (*inithandler)(struct Channel*);$/;"	m	language:C++	struct:ChanType	access:public
ChanType::name	channel.h	/^	char *name;$/;"	m	language:C++	struct:ChanType	access:public
ChanType::reqhandler	channel.h	/^	void (*reqhandler)(struct Channel*);$/;"	m	language:C++	struct:ChanType	access:public
ChanType::sepfds	channel.h	/^	int sepfds; \/* Whether this channel has seperate pipes for in\/out or not *\/$/;"	m	language:C++	struct:ChanType	access:public
Channel	channel.h	/^struct Channel {$/;"	s	language:C++
Channel	sftp-server/channels.h	/^struct Channel {$/;"	s	language:C++
Channel	sftp-server/channels.h	/^typedef struct Channel Channel;$/;"	t	language:C++	typeref:struct:Channel
Channel::await_open	channel.h	/^	int await_open; \/* flag indicating whether we've sent an open request$/;"	m	language:C++	struct:Channel	access:public
Channel::client_tty	sftp-server/channels.h	/^	int	client_tty;	\/* (client) TTY has been requested *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::connect_ctx	sftp-server/channels.h	/^	struct channel_connect	connect_ctx;$/;"	m	language:C++	struct:Channel	typeref:struct:Channel::channel_connect	access:public
Channel::ctl_chan	sftp-server/channels.h	/^	int     ctl_chan;	\/* control channel (multiplexed connections) *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::ctype	sftp-server/channels.h	/^	char   *ctype;		\/* type *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::datagram	sftp-server/channels.h	/^	int     		datagram;$/;"	m	language:C++	struct:Channel	access:public
Channel::delayed	sftp-server/channels.h	/^	int     delayed;	\/* post-select handlers for newly created$/;"	m	language:C++	struct:Channel	access:public
Channel::detach_close	sftp-server/channels.h	/^	int			detach_close;$/;"	m	language:C++	struct:Channel	access:public
Channel::detach_user	sftp-server/channels.h	/^	channel_callback_fn	*detach_user;$/;"	m	language:C++	struct:Channel	access:public
Channel::efd	sftp-server/channels.h	/^	int     efd;		\/* extended fd *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::errfd	channel.h	/^	int errfd; \/* used like writefd or readfd, depending if it's client or server.$/;"	m	language:C++	struct:Channel	access:public
Channel::extended	sftp-server/channels.h	/^	Buffer  extended;$/;"	m	language:C++	struct:Channel	access:public
Channel::extended_usage	sftp-server/channels.h	/^	int     extended_usage;$/;"	m	language:C++	struct:Channel	access:public
Channel::extrabuf	channel.h	/^	circbuffer *extrabuf; \/* extended-data for the program - used like writebuf$/;"	m	language:C++	struct:Channel	access:public
Channel::filter_cleanup	sftp-server/channels.h	/^	channel_filter_cleanup_fn *filter_cleanup;$/;"	m	language:C++	struct:Channel	access:public
Channel::filter_ctx	sftp-server/channels.h	/^	void			*filter_ctx;$/;"	m	language:C++	struct:Channel	access:public
Channel::flags	sftp-server/channels.h	/^	int     flags;		\/* close sent\/rcvd *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::flushing	channel.h	/^	int flushing;$/;"	m	language:C++	struct:Channel	access:public
Channel::force_drain	sftp-server/channels.h	/^	int     force_drain;	\/* force close on iEOF *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::host_port	sftp-server/channels.h	/^	int     host_port;	\/* remote port to connect for forwards *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::index	channel.h	/^	unsigned int index; \/* the local channel index *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::initconn	channel.h	/^	int initconn; \/* used for TCP forwarding, whether the channel has been$/;"	m	language:C++	struct:Channel	access:public
Channel::input	sftp-server/channels.h	/^	Buffer  input;		\/* data read from socket, to be sent over$/;"	m	language:C++	struct:Channel	access:public
Channel::input_filter	sftp-server/channels.h	/^	channel_infilter_fn	*input_filter;$/;"	m	language:C++	struct:Channel	access:public
Channel::isatty	sftp-server/channels.h	/^	int     isatty;		\/* rfd is a tty *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::istate	sftp-server/channels.h	/^	u_int   istate;		\/* input from channel (state of receive half) *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::listening_port	sftp-server/channels.h	/^	int     listening_port;	\/* port being listened for forwards *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::local_consumed	sftp-server/channels.h	/^	u_int	local_consumed;$/;"	m	language:C++	struct:Channel	access:public
Channel::local_maxpacket	sftp-server/channels.h	/^	u_int	local_maxpacket;$/;"	m	language:C++	struct:Channel	access:public
Channel::local_window	sftp-server/channels.h	/^	u_int	local_window;$/;"	m	language:C++	struct:Channel	access:public
Channel::local_window_max	sftp-server/channels.h	/^	u_int	local_window_max;$/;"	m	language:C++	struct:Channel	access:public
Channel::mux_ctx	sftp-server/channels.h	/^	void			*mux_ctx;$/;"	m	language:C++	struct:Channel	access:public
Channel::mux_rcb	sftp-server/channels.h	/^	mux_callback_fn		*mux_rcb;$/;"	m	language:C++	struct:Channel	access:public
Channel::open_confirm	sftp-server/channels.h	/^	channel_callback_fn	*open_confirm;$/;"	m	language:C++	struct:Channel	access:public
Channel::open_confirm_ctx	sftp-server/channels.h	/^	void			*open_confirm_ctx;$/;"	m	language:C++	struct:Channel	access:public
Channel::ostate	sftp-server/channels.h	/^	u_int   ostate;		\/* output to channel  (state of transmit half) *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::output	sftp-server/channels.h	/^	Buffer  output;		\/* data received over encrypted connection for$/;"	m	language:C++	struct:Channel	access:public
Channel::output_filter	sftp-server/channels.h	/^	channel_outfilter_fn	*output_filter;$/;"	m	language:C++	struct:Channel	access:public
Channel::path	sftp-server/channels.h	/^	char    *path;$/;"	m	language:C++	struct:Channel	access:public
Channel::readfd	channel.h	/^	int readfd; \/* read from insecure side, written to wire *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::recv_close	channel.h	/^	int sent_close, recv_close;$/;"	m	language:C++	struct:Channel	access:public
Channel::recv_eof	channel.h	/^	int recv_eof, sent_eof;$/;"	m	language:C++	struct:Channel	access:public
Channel::recvdonelen	channel.h	/^	unsigned int recvdonelen;$/;"	m	language:C++	struct:Channel	access:public
Channel::recvmaxpacket	channel.h	/^	unsigned int recvmaxpacket, transmaxpacket;$/;"	m	language:C++	struct:Channel	access:public
Channel::recvwindow	channel.h	/^	unsigned int recvwindow, transwindow;$/;"	m	language:C++	struct:Channel	access:public
Channel::remote_id	sftp-server/channels.h	/^	int     remote_id;	\/* channel identifier for remote peer *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::remote_maxpacket	sftp-server/channels.h	/^	u_int	remote_maxpacket;$/;"	m	language:C++	struct:Channel	access:public
Channel::remote_name	sftp-server/channels.h	/^	char   *remote_name;	\/* remote hostname *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::remote_window	sftp-server/channels.h	/^	u_int	remote_window;$/;"	m	language:C++	struct:Channel	access:public
Channel::remotechan	channel.h	/^	unsigned int remotechan;$/;"	m	language:C++	struct:Channel	access:public
Channel::rfd	sftp-server/channels.h	/^	int     rfd;		\/* read fd *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::self	sftp-server/channels.h	/^	int     self;		\/* my own channel identifier *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::sent_close	channel.h	/^	int sent_close, recv_close;$/;"	m	language:C++	struct:Channel	access:public
Channel::sent_eof	channel.h	/^	int recv_eof, sent_eof;$/;"	m	language:C++	struct:Channel	access:public
Channel::single_connection	sftp-server/channels.h	/^	int	single_connection;$/;"	m	language:C++	struct:Channel	access:public
Channel::sock	sftp-server/channels.h	/^	int     sock;		\/* sock fd *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::status_confirms	sftp-server/channels.h	/^	struct channel_confirms	status_confirms;$/;"	m	language:C++	struct:Channel	typeref:struct:Channel::channel_confirms	access:public
Channel::transmaxpacket	channel.h	/^	unsigned int recvmaxpacket, transmaxpacket;$/;"	m	language:C++	struct:Channel	access:public
Channel::transwindow	channel.h	/^	unsigned int recvwindow, transwindow;$/;"	m	language:C++	struct:Channel	access:public
Channel::type	channel.h	/^	const struct ChanType* type;$/;"	m	language:C++	struct:Channel	typeref:struct:Channel::ChanType	access:public
Channel::type	sftp-server/channels.h	/^	int     type;		\/* channel type\/state *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::typedata	channel.h	/^	void* typedata; \/* a pointer to type specific data *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::wfd	sftp-server/channels.h	/^	int     wfd;		\/* write fd *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::wfd_isatty	sftp-server/channels.h	/^	int     wfd_isatty;	\/* wfd is a tty *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::writebuf	channel.h	/^	circbuffer *writebuf; \/* data from the wire, for local consumption *\/$/;"	m	language:C++	struct:Channel	access:public
Channel::writefd	channel.h	/^	int writefd; \/* read from wire, written to insecure side *\/$/;"	m	language:C++	struct:Channel	access:public
ChildPid	chansession.h	/^struct ChildPid {$/;"	s	language:C++
ChildPid::chansess	chansession.h	/^	struct ChanSess * chansess;$/;"	m	language:C++	struct:ChildPid	typeref:struct:ChildPid::ChanSess	access:public
ChildPid::pid	chansession.h	/^	pid_t pid;$/;"	m	language:C++	struct:ChildPid	access:public
Choice of Mode	libtomcrypt/crypt.tex	/^buffer the output which will allow you to encrypt or decrypt partial blocks without delay.$/;"	u	language:Tex
Cipher Termination	libtomcrypt/crypt.tex	/^This should indicate a keysize of sixteen bytes is suggested by storing 16 in \\textit{keysize.}$/;"	u	language:Tex
Ciphertext Stealing	libtomcrypt/crypt.tex	/^other modes.$/;"	u	language:Tex
DAYS	sftp-server/misc.c	275;"	d	language:C	file:
DD	libtomcrypt/src/headers/tomcrypt_pk.h	/^            DD, \/* day *\/$/;"	m	language:C++	struct:__anon39	access:public
DE1	libtomcrypt/src/ciphers/des.c	21;"	d	language:C	file:
DEAD_PROCESS	loginrec.c	160;"	d	language:C	file:
DEBUG_HACKCRYPT	debug.h	79;"	d	language:C++
DEBUG_HACKCRYPT	svr-auth.c	42;"	d	language:C	file:
DEBUG_TRACE	debug.h	42;"	d	language:C++
DECODE_V	libtomcrypt/src/pk/asn1/der/utctime/der_decode_utctime.c	37;"	d	language:C	file:
DEFAULT_IDLE_TIMEOUT	options.h	292;"	d	language:C++
DEFAULT_KEEPALIVE	options.h	288;"	d	language:C++
DEFAULT_PATH	options.h	295;"	d	language:C++
DEFAULT_RECV_WINDOW	options.h	273;"	d	language:C++
DEFAULT_WINSIZE	progressmeter.c	33;"	d	language:C	file:
DEF_MP_INT	dbutil.h	78;"	d	language:C++
DES	libtomcrypt/src/headers/tomcrypt_custom.h	112;"	d	language:C++
DESC_DEF_ONLY	libtomcrypt/src/math/gmp_desc.c	12;"	d	language:C	file:
DESC_DEF_ONLY	libtomcrypt/src/math/ltm_desc.c	12;"	d	language:C	file:
DESC_DEF_ONLY	libtomcrypt/src/math/tfm_desc.c	12;"	d	language:C	file:
DH_G_VAL	common-kex.c	/^static const int DH_G_VAL = 2;$/;"	v	language:C	file:
DH_P_14_LEN	common-kex.c	54;"	d	language:C	file:
DH_P_1_LEN	common-kex.c	39;"	d	language:C	file:
DIAG	libtommath/mtest/mpi.c	20;"	d	language:C	file:
DIAG	libtommath/mtest/mpi.c	22;"	d	language:C	file:
DIGIT	libtommath/mtest/mpi.h	60;"	d	language:C++
DIGIT	libtommath/tommath.h	189;"	d	language:C++
DIGITS	libtommath/mtest/mpi.h	59;"	d	language:C++
DIGIT_BIT	libtommath/mtest/mpi.h	52;"	d	language:C++
DIGIT_BIT	libtommath/tommath.h	102;"	d	language:C++
DIGIT_BIT	libtommath/tommath.h	127;"	d	language:C++
DIGIT_BIT	libtommath/tommath.h	79;"	d	language:C++
DIGIT_BIT	libtommath/tommath.h	99;"	d	language:C++
DIGIT_FMT	libtommath/mtest/mpi-types.h	14;"	d	language:C++
DIGIT_MAX	libtommath/mtest/mpi.h	53;"	d	language:C++
DISABLE_LASTLOG	config.h	26;"	d	language:C++
DISABLE_PAM	config.h	29;"	d	language:C++
DISABLE_UTMP	config.h	41;"	d	language:C++
DISABLE_UTMPX	config.h	44;"	d	language:C++
DISABLE_WTMP	config.h	47;"	d	language:C++
DISABLE_WTMPX	config.h	50;"	d	language:C++
DISABLE_WTMPX	sftp-server/config.h	121;"	d	language:C++
DISABLE_X11FWD	sysoptions.h	148;"	d	language:C++
DISABLE_ZLIB	config.h	53;"	d	language:C++
DO	libtomcrypt/testprof/tomcrypt_test.h	23;"	d	language:C++
DO	libtomcrypt/testprof/tomcrypt_test.h	25;"	d	language:C++
DO	libtommath/demo/timing.c	76;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	267;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	284;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	310;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	327;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	329;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	355;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	382;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	399;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	401;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	427;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	457;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	474;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	476;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	502;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	533;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	550;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	552;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	579;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	611;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	634;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	657;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	672;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	687;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	702;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	733;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	744;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	746;"	d	language:C	file:
DO1	libtomcrypt/testprof/x86_prof.c	757;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	311;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	328;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	330;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	354;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	383;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	400;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	402;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	426;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	458;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	475;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	477;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	501;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	534;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	551;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	553;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	578;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	612;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	633;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	658;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	673;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	688;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	703;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	734;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	743;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	747;"	d	language:C	file:
DO2	libtomcrypt/testprof/x86_prof.c	756;"	d	language:C	file:
DO_HOST_LOOKUP	options.h	153;"	d	language:C++
DO_LOG_SAFE_IN_SIGHAND	sftp-server/defines.h	548;"	d	language:C++
DO_MOTD	options.h	157;"	d	language:C++
DROPBEAR_3DES	options.h	94;"	d	language:C++
DROPBEAR_AES	sysoptions.h	140;"	d	language:C++
DROPBEAR_AES128	options.h	93;"	d	language:C++
DROPBEAR_AES256	options.h	95;"	d	language:C++
DROPBEAR_COMP_NONE	sysoptions.h	70;"	d	language:C++
DROPBEAR_COMP_ZLIB	sysoptions.h	71;"	d	language:C++
DROPBEAR_COMP_ZLIB_DELAY	sysoptions.h	72;"	d	language:C++
DROPBEAR_DEFADDRESS	options.h	19;"	d	language:C++
DROPBEAR_DEFPORT	options.h	14;"	d	language:C++
DROPBEAR_DSS	options.h	127;"	d	language:C++
DROPBEAR_ENABLE_CTR_MODE	options.h	104;"	d	language:C++
DROPBEAR_FAILURE	sysoptions.h	59;"	d	language:C++
DROPBEAR_HOME	options.h	23;"	d	language:C++
DROPBEAR_KEX_DH_GROUP1	sysoptions.h	62;"	d	language:C++
DROPBEAR_KEX_DH_GROUP14	sysoptions.h	63;"	d	language:C++
DROPBEAR_KEY_LINES	sysoptions.h	178;"	d	language:C++
DROPBEAR_MAX_CLI_INTERACT_PROMPTS	sysoptions.h	135;"	d	language:C++
DROPBEAR_MAX_CLI_PASS	sysoptions.h	133;"	d	language:C++
DROPBEAR_MAX_PORTS	sysoptions.h	47;"	d	language:C++
DROPBEAR_MAX_SOCKS	sysoptions.h	130;"	d	language:C++
DROPBEAR_MD5_HMAC	options.h	120;"	d	language:C++
DROPBEAR_MODE_CBC	algo.h	33;"	d	language:C++
DROPBEAR_MODE_CTR	algo.h	34;"	d	language:C++
DROPBEAR_MODE_UNUSED	algo.h	32;"	d	language:C++
DROPBEAR_PASSWORD_ENV	options.h	195;"	d	language:C++
DROPBEAR_PIDFILE	options.h	240;"	d	language:C++
DROPBEAR_RANDOM_DEV	options.h	214;"	d	language:C++
DROPBEAR_RSA	options.h	126;"	d	language:C++
DROPBEAR_SHA1_96_HMAC	options.h	119;"	d	language:C++
DROPBEAR_SHA1_HMAC	options.h	118;"	d	language:C++
DROPBEAR_SIGNKEY_ANY	sysoptions.h	65;"	d	language:C++
DROPBEAR_SIGNKEY_DSS	sysoptions.h	67;"	d	language:C++
DROPBEAR_SIGNKEY_NONE	sysoptions.h	68;"	d	language:C++
DROPBEAR_SIGNKEY_RSA	sysoptions.h	66;"	d	language:C++
DROPBEAR_SIGNKEY_VERIFY	sysoptions.h	76;"	d	language:C++
DROPBEAR_SUCCESS	sysoptions.h	58;"	d	language:C++
DROPBEAR_TCP_ACCEPT	sysoptions.h	156;"	d	language:C++
DROPBEAR_TWOFISH	sysoptions.h	144;"	d	language:C++
DROPBEAR_TWOFISH128	options.h	99;"	d	language:C++
DROPBEAR_TWOFISH256	options.h	98;"	d	language:C++
DROPBEAR_VERSION	sysoptions.h	7;"	d	language:C++
DROPBEAR_ZLIB_MEM_LEVEL	sysoptions.h	183;"	d	language:C++
DROPBEAR_ZLIB_WINDOW_BITS	options.h	149;"	d	language:C++
DROUND	libtomcrypt/src/prngs/sober128.c	176;"	d	language:C	file:
DSS_PRIV_FILENAME	options.h	28;"	d	language:C++
DSS_SIGNATURE_SIZE	dss.h	33;"	d	language:C++
DSS_SIZE	dropbearkey.c	58;"	d	language:C	file:
Digest Size	libtomcrypt/crypt.tex	/^This is the internal ID byte used to distinguish the hash from other hashes.$/;"	u	language:Tex
Digital Signature Algorithm	libtomcrypt/crypt.tex	/^The library will not warn you if you make this mistake, so it is important to check yourself before using the signatures.$/;"	c	language:Tex
Done	libtomcrypt/crypt.tex	/^guaranteed to be a multiple of the block size in length.$/;"	u	language:Tex
Done	libtomcrypt/crypt.tex	/^if it does as many protocols do not retry reads and will fail on the first try.$/;"	u	language:Tex
E	libtomcrypt/notes/etc/whirlgen.c	/^unsigned E[16] =  { 1, 0xb, 9, 0xc, 0xd, 6, 0xf, 3, 0xe, 8, 7, 4, 0xa, 2, 5, 0 };$/;"	v	language:C
EAI_FAMILY	fake-rfc2553.h	135;"	d	language:C++
EAI_FAMILY	sftp-server/openbsd-compat/fake-rfc2553.h	133;"	d	language:C++
EAI_MEMORY	fake-rfc2553.h	126;"	d	language:C++
EAI_MEMORY	sftp-server/openbsd-compat/fake-rfc2553.h	124;"	d	language:C++
EAI_NODATA	fake-rfc2553.h	123;"	d	language:C++
EAI_NODATA	sftp-server/openbsd-compat/fake-rfc2553.h	121;"	d	language:C++
EAI_NONAME	fake-rfc2553.h	129;"	d	language:C++
EAI_NONAME	sftp-server/openbsd-compat/fake-rfc2553.h	127;"	d	language:C++
EAI_SYSTEM	fake-rfc2553.h	132;"	d	language:C++
EAI_SYSTEM	sftp-server/openbsd-compat/fake-rfc2553.h	130;"	d	language:C++
EAX Mode	libtomcrypt/crypt.tex	/^\\mysection{Encrypt and Authenticate Modes}$/;"	u	language:Tex
EC-DSA Signature Generation	libtomcrypt/crypt.tex	/^ANSI X9.62 format.  $/;"	u	language:Tex
EC-DSA Signature Verification	libtomcrypt/crypt.tex	/^the ECC \\textit{key} provided must be a private key.$/;"	u	language:Tex
ECB Mode	libtomcrypt/crypt.tex	/^$P$ under the key $k$ as $E_k(P)$.  In some modes there exists an initial vector denoted as $C_{-1}$.$/;"	b	language:Tex
ECB_DEC	libtomcrypt/src/ciphers/aes/aes.c	/^int ECB_DEC(const unsigned char *ct, unsigned char *pt, symmetric_key *skey) $/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
ECB_DEC	libtomcrypt/src/ciphers/aes/aes.c	41;"	d	language:C	file:
ECB_DONE	libtomcrypt/src/ciphers/aes/aes.c	/^void ECB_DONE(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
ECB_DONE	libtomcrypt/src/ciphers/aes/aes.c	42;"	d	language:C	file:
ECB_DONE	libtomcrypt/src/ciphers/aes/aes.c	71;"	d	language:C	file:
ECB_ENC	libtomcrypt/src/ciphers/aes/aes.c	/^int ECB_ENC(const unsigned char *pt, unsigned char *ct, symmetric_key *skey) $/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
ECB_ENC	libtomcrypt/src/ciphers/aes/aes.c	40;"	d	language:C	file:
ECB_ENC	libtomcrypt/src/ciphers/aes/aes.c	69;"	d	language:C	file:
ECB_KS	libtomcrypt/src/ciphers/aes/aes.c	/^int ECB_KS(int *keysize)$/;"	f	language:C	signature:(int *keysize)
ECB_KS	libtomcrypt/src/ciphers/aes/aes.c	44;"	d	language:C	file:
ECB_KS	libtomcrypt/src/ciphers/aes/aes.c	70;"	d	language:C	file:
ECB_TEST	libtomcrypt/src/ciphers/aes/aes.c	/^int ECB_TEST(void)$/;"	f	language:C	signature:(void)
ECB_TEST	libtomcrypt/src/ciphers/aes/aes.c	43;"	d	language:C	file:
ECC Encryption Format	libtomcrypt/crypt.tex	/^to use some form of challenge response in that case (e.g. compute a MAC of a known string).$/;"	u	language:Tex
ECC Key Export	libtomcrypt/crypt.tex	/^\\end{verbatim}$/;"	u	language:Tex
ECC Key Free	libtomcrypt/crypt.tex	/^those from the original key generation function.$/;"	u	language:Tex
ECC Key Generation	libtomcrypt/crypt.tex	/^\\mysection{Core Functions}$/;"	u	language:Tex
ECC Key Import	libtomcrypt/crypt.tex	/^This will export the key with the given \\textit{type} (\\textbf{PK\\_PUBLIC} or \\textbf{PK\\_PRIVATE}), and store it to \\textit{out}.  $/;"	u	language:Tex
ECC Shared Secret	libtomcrypt/crypt.tex	/^The imported key is stored in the ECC key pointed to by \\textit{key}.  The function will free any allocated memory upon error.$/;"	u	language:Tex
ECC-DH Decryption	libtomcrypt/crypt.tex	/^recipients multiple call to this function for each public ECC key is required.$/;"	u	language:Tex
ECC_BUF_SIZE	libtomcrypt/src/headers/tomcrypt_pk.h	150;"	d	language:C++
ECC_MAXSIZE	libtomcrypt/src/headers/tomcrypt_pk.h	153;"	d	language:C++
EMSG	sftp-server/openbsd-compat/getopt.c	51;"	d	language:C	file:
EN0	libtomcrypt/src/ciphers/des.c	20;"	d	language:C	file:
ENABLE_AGENTFWD	sysoptions.h	166;"	d	language:C++
ENABLE_CLI_AGENTFWD	options.h	75;"	d	language:C++
ENABLE_CLI_ANYTCPFWD	sysoptions.h	152;"	d	language:C++
ENABLE_CLI_INTERACT_AUTH	options.h	187;"	d	language:C++
ENABLE_CLI_LOCALTCPFWD	options.h	67;"	d	language:C++
ENABLE_CLI_MULTIHOP	sysoptions.h	170;"	d	language:C++
ENABLE_CLI_NETCAT	options.h	87;"	d	language:C++
ENABLE_CLI_PASSWORD_AUTH	options.h	185;"	d	language:C++
ENABLE_CLI_PROXYCMD	options.h	83;"	d	language:C++
ENABLE_CLI_PUBKEY_AUTH	options.h	186;"	d	language:C++
ENABLE_CLI_REMOTETCPFWD	options.h	68;"	d	language:C++
ENABLE_CONNECT_UNIX	sysoptions.h	174;"	d	language:C++
ENABLE_PKCS11	sftp-server/config.h	124;"	d	language:C++
ENABLE_SVR_AGENTFWD	options.h	74;"	d	language:C++
ENABLE_SVR_LOCALTCPFWD	options.h	70;"	d	language:C++
ENABLE_SVR_MASTER_PASSWORD	options.h	173;"	d	language:C++
ENABLE_SVR_PASSWORD_AUTH	options.h	174;"	d	language:C++
ENABLE_SVR_PUBKEY_AUTH	options.h	177;"	d	language:C++
ENABLE_SVR_PUBKEY_OPTIONS	options.h	182;"	d	language:C++
ENABLE_SVR_REMOTETCPFWD	options.h	71;"	d	language:C++
ENABLE_X11FWD	options.h	59;"	d	language:C++
ENCRYPT_ONLY	libtomcrypt/src/mac/pelican/pelican.c	20;"	d	language:C	file:
ENDIAN_32BITWORD	libtomcrypt/src/headers/tomcrypt_cfg.h	109;"	d	language:C++
ENDIAN_32BITWORD	libtomcrypt/src/headers/tomcrypt_cfg.h	61;"	d	language:C++
ENDIAN_32BITWORD	libtomcrypt/src/headers/tomcrypt_cfg.h	83;"	d	language:C++
ENDIAN_32BITWORD	libtomcrypt/src/headers/tomcrypt_cfg.h	94;"	d	language:C++
ENDIAN_64BITWORD	libtomcrypt/src/headers/tomcrypt_cfg.h	110;"	d	language:C++
ENDIAN_64BITWORD	libtomcrypt/src/headers/tomcrypt_cfg.h	69;"	d	language:C++
ENDIAN_64BITWORD	libtomcrypt/src/headers/tomcrypt_cfg.h	75;"	d	language:C++
ENDIAN_64BITWORD	libtomcrypt/src/headers/tomcrypt_cfg.h	92;"	d	language:C++
ENDIAN_BIG	libtomcrypt/src/headers/tomcrypt_cfg.h	108;"	d	language:C++
ENDIAN_BIG	libtomcrypt/src/headers/tomcrypt_cfg.h	82;"	d	language:C++
ENDIAN_BIG	libtomcrypt/src/headers/tomcrypt_cfg.h	90;"	d	language:C++
ENDIAN_LITTLE	libtomcrypt/src/headers/tomcrypt_cfg.h	107;"	d	language:C++
ENDIAN_LITTLE	libtomcrypt/src/headers/tomcrypt_cfg.h	60;"	d	language:C++
ENDIAN_LITTLE	libtomcrypt/src/headers/tomcrypt_cfg.h	68;"	d	language:C++
ENDIAN_LITTLE	libtomcrypt/src/headers/tomcrypt_cfg.h	74;"	d	language:C++
ENDIAN_NEUTRAL	libtomcrypt/src/headers/tomcrypt_cfg.h	128;"	d	language:C++
ENTROPY_TIMEOUT_MSEC	sftp-server/config.h	127;"	d	language:C++
ENV_SIZE	sysoptions.h	39;"	d	language:C++
ERRFD_IS_READ	common-channel.c	60;"	d	language:C	file:
ERRFD_IS_WRITE	common-channel.c	61;"	d	language:C	file:
ERROR	sftp-server/openbsd-compat/bsd-cygwin_util.h	37;"	d	language:C++
ERRSET_FAIL	sftp-server/openbsd-compat/getrrsetbyname.h	82;"	d	language:C++
ERRSET_INVAL	sftp-server/openbsd-compat/getrrsetbyname.h	83;"	d	language:C++
ERRSET_NODATA	sftp-server/openbsd-compat/getrrsetbyname.h	85;"	d	language:C++
ERRSET_NOMEMORY	sftp-server/openbsd-compat/getrrsetbyname.h	81;"	d	language:C++
ERRSET_NONAME	sftp-server/openbsd-compat/getrrsetbyname.h	84;"	d	language:C++
ERRSET_SUCCESS	sftp-server/openbsd-compat/getrrsetbyname.h	80;"	d	language:C++
EWOULDBLOCK	sftp-server/defines.h	745;"	d	language:C++
EXA	sftp-server/openbsd-compat/fmt_scaled.c	/^	NONE = 0, KILO = 1, MEGA = 2, GIGA = 3, TERA = 4, PETA = 5, EXA = 6$/;"	e	language:C	enum:__anon8	file:
EXP	libtomcrypt/src/ciphers/safer/safer.c	92;"	d	language:C	file:
EXPAND_MAX_KEYS	sftp-server/misc.c	564;"	d	language:C	file:
EXPAND_MAX_KEYS	sftp-server/misc.c	614;"	d	language:C	file:
Ei	libtomcrypt/notes/etc/whirlgen.c	/^unsigned Ei[16];$/;"	v	language:C
Endianess	libtomcrypt/crypt.tex	/^to 4, it will return CRYPT\\_INVALID\\_ARG to the caller.  $/;"	b	language:Tex
Entropy Addition	libtomcrypt/crypt.tex	/^Initialize the PRNG and make it ready to accept entropy.$/;"	u	language:Tex
Example	libtomcrypt/crypt.tex	/^checking is guaranteed to see if the entropy is sufficient, or if the PRNG is even in a ready state before reading.$/;"	u	language:Tex
Example Usage	libtomcrypt/crypt.tex	/^If you are processing many packets under the same key you shouldn't use this function as it invokes the pre--computation with each call.$/;"	b	language:Tex
Example Usage	libtomcrypt/crypt.tex	/^simulations which need a high quality (and fast) stream of bytes.  $/;"	b	language:Tex
Exponentiation	libtommath/bn.tex	/^slower than mp\\_dr\\_reduce but faster for most moduli sizes than the Montgomery reduction.  $/;"	c	language:Tex
Export Size	libtomcrypt/crypt.tex	/^The name by which find\\_prng() will find the PRNG.$/;"	u	language:Tex
Exporting and Importing	libtomcrypt/crypt.tex	/^Terminate a PRNG state.  The behaviour of this function depends on the particular PRNG used.$/;"	u	language:Tex
Extended ANSI X9.63 Import	libtomcrypt/crypt.tex	/^\\textit{key}.  The function will free any allocated memory upon error.$/;"	u	language:Tex
Extended Euclidean Algorithm	libtommath/bn.tex	/^\\chapter{Algebraic Functions}$/;"	s	language:Tex
Extended Key Generation	libtomcrypt/crypt.tex	/^The function will free any internally allocated resources if there is an error.$/;"	u	language:Tex
Extended Key Import	libtomcrypt/crypt.tex	/^any allocated memory automatically.$/;"	u	language:Tex
F	libtomcrypt/src/ciphers/blowfish.c	378;"	d	language:C	file:
F	libtomcrypt/src/ciphers/blowfish.c	380;"	d	language:C	file:
F	libtomcrypt/src/ciphers/kseed.c	188;"	d	language:C	file:
F	libtomcrypt/src/hashes/md4.c	52;"	d	language:C	file:
F	libtomcrypt/src/hashes/md5.c	39;"	d	language:C	file:
F	libtomcrypt/src/hashes/rmd128.c	45;"	d	language:C	file:
F	libtomcrypt/src/hashes/rmd160.c	45;"	d	language:C	file:
F	libtomcrypt/src/hashes/rmd256.c	39;"	d	language:C	file:
F	libtomcrypt/src/hashes/rmd320.c	39;"	d	language:C	file:
F0	libtomcrypt/src/hashes/sha1.c	39;"	d	language:C	file:
F1	libtomcrypt/src/hashes/sha1.c	40;"	d	language:C	file:
F2	libtomcrypt/src/hashes/sha1.c	41;"	d	language:C	file:
F3	libtomcrypt/src/hashes/sha1.c	42;"	d	language:C	file:
F8 Mode	libtomcrypt/crypt.tex	/^\\end{verbatim}$/;"	u	language:Tex
FD_CLOSED	common-channel.c	58;"	d	language:C	file:
FD_UNINIT	common-channel.c	57;"	d	language:C	file:
FF	libtomcrypt/src/hashes/md4.c	62;"	d	language:C	file:
FF	libtomcrypt/src/hashes/md5.c	46;"	d	language:C	file:
FF	libtomcrypt/src/hashes/md5.c	85;"	d	language:C	file:
FF	libtomcrypt/src/hashes/rmd128.c	51;"	d	language:C	file:
FF	libtomcrypt/src/hashes/rmd160.c	52;"	d	language:C	file:
FF	libtomcrypt/src/hashes/rmd256.c	45;"	d	language:C	file:
FF	libtomcrypt/src/hashes/rmd320.c	46;"	d	language:C	file:
FF0	libtomcrypt/src/hashes/sha1.c	135;"	d	language:C	file:
FF0	libtomcrypt/src/hashes/sha1.c	74;"	d	language:C	file:
FF1	libtomcrypt/src/hashes/sha1.c	136;"	d	language:C	file:
FF1	libtomcrypt/src/hashes/sha1.c	75;"	d	language:C	file:
FF2	libtomcrypt/src/hashes/sha1.c	137;"	d	language:C	file:
FF2	libtomcrypt/src/hashes/sha1.c	76;"	d	language:C	file:
FF3	libtomcrypt/src/hashes/sha1.c	138;"	d	language:C	file:
FF3	libtomcrypt/src/hashes/sha1.c	77;"	d	language:C	file:
FFF	libtomcrypt/src/hashes/rmd128.c	67;"	d	language:C	file:
FFF	libtomcrypt/src/hashes/rmd160.c	77;"	d	language:C	file:
FFF	libtomcrypt/src/hashes/rmd256.c	61;"	d	language:C	file:
FFF	libtomcrypt/src/hashes/rmd320.c	71;"	d	language:C	file:
FI	libtomcrypt/src/ciphers/cast5.c	/^INLINE static ulong32 FI(ulong32 R, ulong32 Km, ulong32 Kr)$/;"	f	language:C	file:	signature:(ulong32 R, ulong32 Km, ulong32 Kr)
FI	libtomcrypt/src/ciphers/kasumi.c	/^static u16 FI( u16 in, u16 subkey )$/;"	f	language:C	file:	signature:( u16 in, u16 subkey )
FII	libtomcrypt/src/ciphers/cast5.c	/^INLINE static ulong32 FII(ulong32 R, ulong32 Km, ulong32 Kr)$/;"	f	language:C	file:	signature:(ulong32 R, ulong32 Km, ulong32 Kr)
FIII	libtomcrypt/src/ciphers/cast5.c	/^INLINE static ulong32 FIII(ulong32 R, ulong32 Km, ulong32 Kr)$/;"	f	language:C	file:	signature:(ulong32 R, ulong32 Km, ulong32 Kr)
FILEMODEMASK	scp.c	657;"	d	language:C	file:
FL	libtomcrypt/src/ciphers/kasumi.c	/^static ulong32 FL( ulong32 in, int round_no, symmetric_key *key )$/;"	f	language:C	file:	signature:( ulong32 in, int round_no, symmetric_key *key )
FMT_SCALED_STRSIZE	sftp-server/openbsd-compat/openbsd-compat.h	105;"	d	language:C++
FO	libtomcrypt/src/ciphers/kasumi.c	/^static ulong32 FO( ulong32 in, int round_no, symmetric_key *key)$/;"	f	language:C	file:	signature:( ulong32 in, int round_no, symmetric_key *key)
FOLD	libtomcrypt/src/prngs/sober128.c	38;"	d	language:C	file:
FOLDP	libtomcrypt/src/prngs/sober128.c	41;"	d	language:C	file:
FORTUNA_POOLS	libtomcrypt/src/headers/tomcrypt_custom.h	143;"	d	language:C++
FORTUNA_POOLS	libtomcrypt/src/prngs/fortuna.c	33;"	d	language:C	file:
FP_ENTRIES	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	23;"	d	language:C	file:
FP_LUT	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	28;"	d	language:C	file:
FSID_TO_ULONG	sftp-server/defines.h	594;"	d	language:C++
FSID_TO_ULONG	sftp-server/defines.h	598;"	d	language:C++
FSID_TO_ULONG	sftp-server/defines.h	602;"	d	language:C++
Fortuna	libtomcrypt/crypt.tex	/^should use Fortuna instead.$/;"	b	language:Tex
Free ing a Flexi List}
From ASCII	libtommath/bn.tex	/^function returns an error code and ``size'' will be zero.  $/;"	u	language:Tex
G	libtomcrypt/src/ciphers/kseed.c	186;"	d	language:C	file:
G	libtomcrypt/src/hashes/md4.c	53;"	d	language:C	file:
G	libtomcrypt/src/hashes/md5.c	40;"	d	language:C	file:
G	libtomcrypt/src/hashes/rmd128.c	46;"	d	language:C	file:
G	libtomcrypt/src/hashes/rmd160.c	46;"	d	language:C	file:
G	libtomcrypt/src/hashes/rmd256.c	40;"	d	language:C	file:
G	libtomcrypt/src/hashes/rmd320.c	40;"	d	language:C	file:
GAMMA	libtomcrypt/src/ciphers/noekeon.c	53;"	d	language:C	file:
GB	libtomcrypt/src/ciphers/cast5.c	395;"	d	language:C	file:
GB	libtomcrypt/src/ciphers/cast5.c	397;"	d	language:C	file:
GB	libtomcrypt/src/hashes/whirl/whirl.c	43;"	d	language:C	file:
GCM  _TABLES	libtomcrypt/crypt.tex	/^it will not speed up the encryption or decryption functions.$/;"	u	language:Tex
GCM  _TABLES  _SSE2	libtomcrypt/crypt.tex	/^It also increases the initialization time and is not suitable when you are going to use a key a few times only.  $/;"	u	language:Tex
GCM Mode	libtomcrypt/crypt.tex	/^\\end{small}$/;"	u	language:Tex
GCM_DECRYPT	libtomcrypt/src/headers/tomcrypt_mac.h	228;"	d	language:C++
GCM_ENCRYPT	libtomcrypt/src/headers/tomcrypt_mac.h	227;"	d	language:C++
GCM_MODE_AAD	libtomcrypt/src/headers/tomcrypt_mac.h	231;"	d	language:C++
GCM_MODE_IV	libtomcrypt/src/headers/tomcrypt_mac.h	230;"	d	language:C++
GCM_MODE_TEXT	libtomcrypt/src/headers/tomcrypt_mac.h	232;"	d	language:C++
GETPGRP_VOID	sftp-server/config.h	136;"	d	language:C++
GET_32BIT	keyimport.c	46;"	d	language:C	file:
GG	libtomcrypt/src/hashes/md4.c	66;"	d	language:C	file:
GG	libtomcrypt/src/hashes/md5.c	49;"	d	language:C	file:
GG	libtomcrypt/src/hashes/md5.c	88;"	d	language:C	file:
GG	libtomcrypt/src/hashes/rmd128.c	55;"	d	language:C	file:
GG	libtomcrypt/src/hashes/rmd160.c	57;"	d	language:C	file:
GG	libtomcrypt/src/hashes/rmd256.c	49;"	d	language:C	file:
GG	libtomcrypt/src/hashes/rmd320.c	51;"	d	language:C	file:
GGG	libtomcrypt/src/hashes/rmd128.c	71;"	d	language:C	file:
GGG	libtomcrypt/src/hashes/rmd160.c	82;"	d	language:C	file:
GGG	libtomcrypt/src/hashes/rmd256.c	65;"	d	language:C	file:
GGG	libtomcrypt/src/hashes/rmd320.c	76;"	d	language:C	file:
GIGA	sftp-server/openbsd-compat/fmt_scaled.c	/^	NONE = 0, KILO = 1, MEGA = 2, GIGA = 3, TERA = 4, PETA = 5, EXA = 6$/;"	e	language:C	enum:__anon8	file:
GLOB_ABEND	sftp-server/openbsd-compat/glob.h	83;"	d	language:C++
GLOB_ABORTED	sftp-server/openbsd-compat/glob.h	80;"	d	language:C++
GLOB_ALTDIRFUNC	sftp-server/openbsd-compat/glob.h	85;"	d	language:C++
GLOB_APPEND	sftp-server/openbsd-compat/glob.h	70;"	d	language:C++
GLOB_BRACE	sftp-server/openbsd-compat/glob.h	86;"	d	language:C++
GLOB_DOOFFS	sftp-server/openbsd-compat/glob.h	71;"	d	language:C++
GLOB_ERR	sftp-server/openbsd-compat/glob.h	72;"	d	language:C++
GLOB_HAS_ALTDIRFUNC	sftp-server/config.h	142;"	d	language:C++
GLOB_LIMIT	sftp-server/openbsd-compat/glob.h	91;"	d	language:C++
GLOB_MAGCHAR	sftp-server/openbsd-compat/glob.h	87;"	d	language:C++
GLOB_MARK	sftp-server/openbsd-compat/glob.h	73;"	d	language:C++
GLOB_NOCHECK	sftp-server/openbsd-compat/glob.h	74;"	d	language:C++
GLOB_NOESCAPE	sftp-server/openbsd-compat/glob.h	76;"	d	language:C++
GLOB_NOMAGIC	sftp-server/openbsd-compat/glob.h	88;"	d	language:C++
GLOB_NOMATCH	sftp-server/openbsd-compat/glob.h	81;"	d	language:C++
GLOB_NOSORT	sftp-server/openbsd-compat/glob.h	75;"	d	language:C++
GLOB_NOSPACE	sftp-server/openbsd-compat/glob.h	79;"	d	language:C++
GLOB_NOSYS	sftp-server/openbsd-compat/glob.h	82;"	d	language:C++
GLOB_QUOTE	sftp-server/openbsd-compat/glob.h	89;"	d	language:C++
GLOB_TILDE	sftp-server/openbsd-compat/glob.h	90;"	d	language:C++
Gamma0	libtomcrypt/src/hashes/sha2/sha256.c	64;"	d	language:C	file:
Gamma0	libtomcrypt/src/hashes/sha2/sha512.c	89;"	d	language:C	file:
Gamma1	libtomcrypt/src/hashes/sha2/sha256.c	65;"	d	language:C	file:
Gamma1	libtomcrypt/src/hashes/sha2/sha512.c	90;"	d	language:C	file:
Greatest Common Divisor	libtommath/bn.tex	/^Any of the U1\/U2\/U3 paramters can be set to \\textbf{NULL} if they are not desired.  $/;"	s	language:Tex
Gx	libtomcrypt/src/headers/tomcrypt_pk.h	/^   char *Gx;$/;"	m	language:C++	struct:__anon34	access:public
Gy	libtomcrypt/src/headers/tomcrypt_pk.h	/^   char *Gy;$/;"	m	language:C++	struct:__anon34	access:public
H	libtomcrypt/src/hashes/md4.c	54;"	d	language:C	file:
H	libtomcrypt/src/hashes/md5.c	41;"	d	language:C	file:
H	libtomcrypt/src/hashes/rmd128.c	47;"	d	language:C	file:
H	libtomcrypt/src/hashes/rmd160.c	47;"	d	language:C	file:
H	libtomcrypt/src/hashes/rmd256.c	41;"	d	language:C	file:
H	libtomcrypt/src/hashes/rmd320.c	41;"	d	language:C	file:
H	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char       H[16],        \/* multiplier *\/$/;"	m	language:C++	struct:__anon51	access:public
HANDLE_DIR	sftp-server/sftp-server.c	/^	HANDLE_DIR,$/;"	e	language:C	enum:__anon11	file:
HANDLE_FILE	sftp-server/sftp-server.c	/^	HANDLE_FILE$/;"	e	language:C	enum:__anon11	file:
HANDLE_UNUSED	sftp-server/sftp-server.c	/^	HANDLE_UNUSED,$/;"	e	language:C	enum:__anon11	file:
HASH_PROCESS	libtomcrypt/src/headers/tomcrypt_hash.h	341;"	d	language:C++
HAS_SHADOW_EXPIRE	sftp-server/config.h	151;"	d	language:C++
HAS_SHADOW_EXPIRE	sftp-server/defines.h	543;"	d	language:C++
HAVE_ADDR_IN_UTMP	sftp-server/config.h	157;"	d	language:C++
HAVE_ADDR_IN_UTMPX	sftp-server/config.h	160;"	d	language:C++
HAVE_ADDR_V6_IN_UTMP	sftp-server/config.h	163;"	d	language:C++
HAVE_ADDR_V6_IN_UTMPX	sftp-server/config.h	166;"	d	language:C++
HAVE_ASPRINTF	sftp-server/config.h	178;"	d	language:C++
HAVE_ATTRIBUTE__NONNULL__	sftp-server/config.h	184;"	d	language:C++
HAVE_BASENAME	config.h	56;"	d	language:C++
HAVE_BASENAME	sftp-server/config.h	199;"	d	language:C++
HAVE_BCOPY	sftp-server/config.h	202;"	d	language:C++
HAVE_CLOCK	sftp-server/config.h	214;"	d	language:C++
HAVE_CLOCK_T	sftp-server/config.h	217;"	d	language:C++
HAVE_CLOCK_T	sftp-server/defines.h	266;"	d	language:C++
HAVE_CONST_GAI_STRERROR_PROTO	config.h	62;"	d	language:C++
HAVE_CONST_GAI_STRERROR_PROTO	sftp-server/config.h	223;"	d	language:C++
HAVE_CONTROL_IN_MSGHDR	sftp-server/config.h	226;"	d	language:C++
HAVE_DAEMON	config.h	68;"	d	language:C++
HAVE_DAEMON	sftp-server/config.h	238;"	d	language:C++
HAVE_DECL_GLOB_NOMATCH	sftp-server/config.h	246;"	d	language:C++
HAVE_DECL_H_ERRNO	sftp-server/config.h	250;"	d	language:C++
HAVE_DECL_MAXSYMLINKS	sftp-server/config.h	266;"	d	language:C++
HAVE_DECL_OFFSETOF	sftp-server/config.h	270;"	d	language:C++
HAVE_DECL_O_NONBLOCK	sftp-server/config.h	274;"	d	language:C++
HAVE_DECL_SHUT_RD	sftp-server/config.h	286;"	d	language:C++
HAVE_DECL_WRITEV	sftp-server/config.h	290;"	d	language:C++
HAVE_DECL__GETLONG	sftp-server/config.h	294;"	d	language:C++
HAVE_DECL__GETSHORT	sftp-server/config.h	298;"	d	language:C++
HAVE_DEV_PTMX	sshpty.c	30;"	d	language:C	file:
HAVE_DIRENT_H	sftp-server/config.h	307;"	d	language:C++
HAVE_DIRFD	sftp-server/config.h	310;"	d	language:C++
HAVE_DIRNAME	sftp-server/config.h	313;"	d	language:C++
HAVE_DUP2	config.h	74;"	d	language:C++
HAVE_ENDUTENT	config.h	77;"	d	language:C++
HAVE_ENDUTENT	sftp-server/config.h	319;"	d	language:C++
HAVE_ENDUTXENT	config.h	80;"	d	language:C++
HAVE_ENDUTXENT	sftp-server/config.h	322;"	d	language:C++
HAVE_EVP_SHA256	sftp-server/config.h	328;"	d	language:C++
HAVE_EXIT_IN_UTMP	sftp-server/config.h	331;"	d	language:C++
HAVE_FCHMOD	sftp-server/config.h	334;"	d	language:C++
HAVE_FCHOWN	sftp-server/config.h	337;"	d	language:C++
HAVE_FCNTL_H	config.h	83;"	d	language:C++
HAVE_FCNTL_H	sftp-server/config.h	343;"	d	language:C++
HAVE_FEATURES_H	sftp-server/config.h	346;"	d	language:C++
HAVE_FREEADDRINFO	config.h	86;"	d	language:C++
HAVE_FREEADDRINFO	sftp-server/config.h	355;"	d	language:C++
HAVE_FREEADDRINFO	sftp-server/defines.h	532;"	d	language:C++
HAVE_FSBLKCNT_T	sftp-server/config.h	358;"	d	language:C++
HAVE_FSFILCNT_T	sftp-server/config.h	361;"	d	language:C++
HAVE_GAI_STRERROR	config.h	89;"	d	language:C++
HAVE_GAI_STRERROR	sftp-server/config.h	370;"	d	language:C++
HAVE_GAI_STRERROR	sftp-server/defines.h	535;"	d	language:C++
HAVE_GETADDRINFO	config.h	92;"	d	language:C++
HAVE_GETADDRINFO	sftp-server/config.h	373;"	d	language:C++
HAVE_GETADDRINFO	sftp-server/defines.h	510;"	d	language:C++
HAVE_GETADDRINFO	sftp-server/defines.h	529;"	d	language:C++
HAVE_GETCWD	sftp-server/config.h	382;"	d	language:C++
HAVE_GETGROUPLIST	sftp-server/openbsd-compat/port-aix.h	122;"	d	language:C++
HAVE_GETNAMEINFO	config.h	95;"	d	language:C++
HAVE_GETNAMEINFO	sftp-server/config.h	397;"	d	language:C++
HAVE_GETOPT	sftp-server/config.h	400;"	d	language:C++
HAVE_GETOPT_H	sftp-server/config.h	403;"	d	language:C++
HAVE_GETPAGESIZE	sftp-server/config.h	409;"	d	language:C++
HAVE_GETRLIMIT	sftp-server/config.h	421;"	d	language:C++
HAVE_GETSPNAM	config.h	98;"	d	language:C++
HAVE_GETTIMEOFDAY	sftp-server/config.h	433;"	d	language:C++
HAVE_GETUTENT	config.h	104;"	d	language:C++
HAVE_GETUTENT	sftp-server/config.h	439;"	d	language:C++
HAVE_GETUTID	config.h	107;"	d	language:C++
HAVE_GETUTID	sftp-server/config.h	442;"	d	language:C++
HAVE_GETUTLINE	config.h	110;"	d	language:C++
HAVE_GETUTLINE	sftp-server/config.h	445;"	d	language:C++
HAVE_GETUTXENT	config.h	113;"	d	language:C++
HAVE_GETUTXENT	sftp-server/config.h	448;"	d	language:C++
HAVE_GETUTXID	config.h	116;"	d	language:C++
HAVE_GETUTXID	sftp-server/config.h	451;"	d	language:C++
HAVE_GETUTXLINE	config.h	119;"	d	language:C++
HAVE_GETUTXLINE	sftp-server/config.h	454;"	d	language:C++
HAVE_GLOB	sftp-server/config.h	463;"	d	language:C++
HAVE_GLOB_H	sftp-server/config.h	466;"	d	language:C++
HAVE_HEADER_AD	sftp-server/config.h	490;"	d	language:C++
HAVE_HOST_IN_UTMP	sftp-server/config.h	493;"	d	language:C++
HAVE_HOST_IN_UTMPX	sftp-server/config.h	496;"	d	language:C++
HAVE_ID_IN_UTMP	sftp-server/config.h	505;"	d	language:C++
HAVE_ID_IN_UTMPX	sftp-server/config.h	508;"	d	language:C++
HAVE_INET_ATON	sftp-server/config.h	511;"	d	language:C++
HAVE_INET_NTOA	sftp-server/config.h	514;"	d	language:C++
HAVE_INET_NTOP	sftp-server/config.h	517;"	d	language:C++
HAVE_INNETGR	sftp-server/config.h	520;"	d	language:C++
HAVE_INT64_T	sftp-server/config.h	523;"	d	language:C++
HAVE_INTTYPES_H	config.h	122;"	d	language:C++
HAVE_INTTYPES_H	sftp-server/config.h	526;"	d	language:C++
HAVE_INTXX_T	sftp-server/config.h	529;"	d	language:C++
HAVE_IN_ADDR_T	sftp-server/config.h	532;"	d	language:C++
HAVE_LASTLOG_H	config.h	128;"	d	language:C++
HAVE_LASTLOG_H	sftp-server/config.h	538;"	d	language:C++
HAVE_LIBGEN_H	sftp-server/config.h	550;"	d	language:C++
HAVE_LIBNSL	sftp-server/config.h	559;"	d	language:C++
HAVE_LIMITS_H	config.h	143;"	d	language:C++
HAVE_LIMITS_H	sftp-server/config.h	577;"	d	language:C++
HAVE_LINUX_IF_TUN_H	sftp-server/config.h	580;"	d	language:C++
HAVE_LOGIN	sftp-server/config.h	583;"	d	language:C++
HAVE_LOGIN_CAP	sftp-server/defines.h	385;"	d	language:C++
HAVE_LOGOUT	config.h	149;"	d	language:C++
HAVE_LOGOUT	sftp-server/config.h	595;"	d	language:C++
HAVE_LOGWTMP	config.h	152;"	d	language:C++
HAVE_LOGWTMP	sftp-server/config.h	598;"	d	language:C++
HAVE_LONG_DOUBLE	sftp-server/config.h	601;"	d	language:C++
HAVE_LONG_LONG	sftp-server/config.h	604;"	d	language:C++
HAVE_MEMMOVE	sftp-server/config.h	616;"	d	language:C++
HAVE_MEMORY_H	config.h	155;"	d	language:C++
HAVE_MEMORY_H	sftp-server/config.h	619;"	d	language:C++
HAVE_MEMSET	config.h	158;"	d	language:C++
HAVE_MKDTEMP	sftp-server/config.h	622;"	d	language:C++
HAVE_MMAP	sftp-server/config.h	625;"	d	language:C++
HAVE_MMAP	sftp-server/defines.h	731;"	d	language:C++
HAVE_MODE_T	sftp-server/config.h	628;"	d	language:C++
HAVE_MODE_T	sftp-server/defines.h	286;"	d	language:C++
HAVE_NANOSLEEP	sftp-server/config.h	631;"	d	language:C++
HAVE_NETDB_H	config.h	161;"	d	language:C++
HAVE_NETDB_H	sftp-server/config.h	637;"	d	language:C++
HAVE_NETINET_IN_H	config.h	164;"	d	language:C++
HAVE_NETINET_TCP_H	config.h	170;"	d	language:C++
HAVE_OPENPTY	config.h	173;"	d	language:C++
HAVE_OPENPTY	sftp-server/config.h	665;"	d	language:C++
HAVE_PATHS_H	config.h	179;"	d	language:C++
HAVE_PATHS_H	sftp-server/config.h	683;"	d	language:C++
HAVE_PID_IN_UTMP	sftp-server/config.h	686;"	d	language:C++
HAVE_PID_T	sftp-server/config.h	689;"	d	language:C++
HAVE_PID_T	sftp-server/defines.h	276;"	d	language:C++
HAVE_POLL	sftp-server/config.h	692;"	d	language:C++
HAVE_POLL_H	sftp-server/config.h	695;"	d	language:C++
HAVE_PRCTL	sftp-server/config.h	698;"	d	language:C++
HAVE_PROC_PID	sftp-server/config.h	701;"	d	language:C++
HAVE_PTY_H	sftp-server/config.h	707;"	d	language:C++
HAVE_PUTENV	config.h	185;"	d	language:C++
HAVE_PUTUTLINE	config.h	188;"	d	language:C++
HAVE_PUTUTLINE	sftp-server/config.h	710;"	d	language:C++
HAVE_PUTUTXLINE	config.h	191;"	d	language:C++
HAVE_PUTUTXLINE	sftp-server/config.h	713;"	d	language:C++
HAVE_REALPATH	sftp-server/config.h	731;"	d	language:C++
HAVE_RECVMSG	sftp-server/config.h	734;"	d	language:C++
HAVE_RRESVPORT_AF	sftp-server/config.h	740;"	d	language:C++
HAVE_SA_FAMILY_T	sftp-server/config.h	743;"	d	language:C++
HAVE_SA_FAMILY_T	sftp-server/defines.h	271;"	d	language:C++
HAVE_SELECT	config.h	197;"	d	language:C++
HAVE_SENDMSG	sftp-server/config.h	752;"	d	language:C++
HAVE_SETEGID	sftp-server/config.h	761;"	d	language:C++
HAVE_SETENV	sftp-server/config.h	764;"	d	language:C++
HAVE_SETEUID	sftp-server/config.h	767;"	d	language:C++
HAVE_SETGROUPS	sftp-server/config.h	773;"	d	language:C++
HAVE_SETREGID	sftp-server/config.h	791;"	d	language:C++
HAVE_SETRESGID	sftp-server/config.h	794;"	d	language:C++
HAVE_SETRESUID	sftp-server/config.h	797;"	d	language:C++
HAVE_SETREUID	sftp-server/config.h	800;"	d	language:C++
HAVE_SETRLIMIT	sftp-server/config.h	803;"	d	language:C++
HAVE_SETSID	sftp-server/config.h	806;"	d	language:C++
HAVE_SETUTENT	sftp-server/config.h	809;"	d	language:C++
HAVE_SETUTXENT	config.h	203;"	d	language:C++
HAVE_SETUTXENT	sftp-server/config.h	815;"	d	language:C++
HAVE_SETVBUF	sftp-server/config.h	818;"	d	language:C++
HAVE_SHA256_UPDATE	sftp-server/config.h	824;"	d	language:C++
HAVE_SHADOW_H	sftp-server/config.h	830;"	d	language:C++
HAVE_SIGACTION	sftp-server/config.h	833;"	d	language:C++
HAVE_SIGVEC	sftp-server/config.h	836;"	d	language:C++
HAVE_SIG_ATOMIC_T	sftp-server/config.h	839;"	d	language:C++
HAVE_SIG_ATOMIC_T	sftp-server/defines.h	281;"	d	language:C++
HAVE_SIZE_T	sftp-server/config.h	842;"	d	language:C++
HAVE_SIZE_T	sftp-server/defines.h	255;"	d	language:C++
HAVE_SNPRINTF	sftp-server/config.h	845;"	d	language:C++
HAVE_SOCKET	config.h	209;"	d	language:C++
HAVE_SOCKETPAIR	sftp-server/config.h	848;"	d	language:C++
HAVE_SO_PEERCRED	sftp-server/config.h	851;"	d	language:C++
HAVE_SSIZE_T	sftp-server/config.h	854;"	d	language:C++
HAVE_SSIZE_T	sftp-server/defines.h	261;"	d	language:C++
HAVE_SS_FAMILY_IN_SS	sftp-server/config.h	857;"	d	language:C++
HAVE_STATFS	sftp-server/config.h	860;"	d	language:C++
HAVE_STDDEF_H	sftp-server/config.h	866;"	d	language:C++
HAVE_STDINT_H	config.h	212;"	d	language:C++
HAVE_STDINT_H	sftp-server/config.h	869;"	d	language:C++
HAVE_STDLIB_H	config.h	215;"	d	language:C++
HAVE_STDLIB_H	sftp-server/config.h	872;"	d	language:C++
HAVE_STRDUP	config.h	218;"	d	language:C++
HAVE_STRDUP	sftp-server/config.h	875;"	d	language:C++
HAVE_STRERROR	sftp-server/config.h	878;"	d	language:C++
HAVE_STRFTIME	sftp-server/config.h	881;"	d	language:C++
HAVE_STRICT_MKSTEMP	sftp-server/config.h	884;"	d	language:C++
HAVE_STRINGS_H	config.h	221;"	d	language:C++
HAVE_STRINGS_H	sftp-server/config.h	887;"	d	language:C++
HAVE_STRING_H	config.h	224;"	d	language:C++
HAVE_STRING_H	sftp-server/config.h	890;"	d	language:C++
HAVE_STROPTS_H	config.h	233;"	d	language:C++
HAVE_STRSEP	sftp-server/config.h	905;"	d	language:C++
HAVE_STRTOLL	sftp-server/config.h	908;"	d	language:C++
HAVE_STRTOUL	sftp-server/config.h	914;"	d	language:C++
HAVE_STRUCT_ADDRINFO	config.h	236;"	d	language:C++
HAVE_STRUCT_ADDRINFO	sftp-server/config.h	917;"	d	language:C++
HAVE_STRUCT_IN6_ADDR	config.h	239;"	d	language:C++
HAVE_STRUCT_IN6_ADDR	sftp-server/config.h	920;"	d	language:C++
HAVE_STRUCT_SOCKADDR_IN6	config.h	242;"	d	language:C++
HAVE_STRUCT_SOCKADDR_IN6	sftp-server/config.h	923;"	d	language:C++
HAVE_STRUCT_SOCKADDR_IN6_SIN6_SCOPE_ID	sftp-server/config.h	926;"	d	language:C++
HAVE_STRUCT_SOCKADDR_STORAGE	config.h	245;"	d	language:C++
HAVE_STRUCT_SOCKADDR_STORAGE	sftp-server/config.h	929;"	d	language:C++
HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY	config.h	248;"	d	language:C++
HAVE_STRUCT_STAT_ST_BLKSIZE	sftp-server/config.h	932;"	d	language:C++
HAVE_STRUCT_TIMESPEC	sftp-server/config.h	935;"	d	language:C++
HAVE_STRUCT_TIMEVAL	sftp-server/config.h	938;"	d	language:C++
HAVE_STRUCT_UTMPX_UT_ADDR_V6	config.h	254;"	d	language:C++
HAVE_STRUCT_UTMPX_UT_HOST	config.h	257;"	d	language:C++
HAVE_STRUCT_UTMPX_UT_ID	config.h	260;"	d	language:C++
HAVE_STRUCT_UTMPX_UT_TV	config.h	269;"	d	language:C++
HAVE_STRUCT_UTMPX_UT_TYPE	config.h	272;"	d	language:C++
HAVE_STRUCT_UTMP_UT_ADDR	config.h	275;"	d	language:C++
HAVE_STRUCT_UTMP_UT_ADDR_V6	config.h	278;"	d	language:C++
HAVE_STRUCT_UTMP_UT_EXIT	config.h	281;"	d	language:C++
HAVE_STRUCT_UTMP_UT_HOST	config.h	284;"	d	language:C++
HAVE_STRUCT_UTMP_UT_ID	config.h	287;"	d	language:C++
HAVE_STRUCT_UTMP_UT_PID	config.h	290;"	d	language:C++
HAVE_STRUCT_UTMP_UT_TIME	config.h	293;"	d	language:C++
HAVE_STRUCT_UTMP_UT_TV	config.h	296;"	d	language:C++
HAVE_STRUCT_UTMP_UT_TYPE	config.h	299;"	d	language:C++
HAVE_SYSCONF	sftp-server/config.h	944;"	d	language:C++
HAVE_SYS_CDEFS_H	sftp-server/config.h	959;"	d	language:C++
HAVE_SYS_DIR_H	sftp-server/config.h	962;"	d	language:C++
HAVE_SYS_ERRLIST	sftp-server/config.h	965;"	d	language:C++
HAVE_SYS_MMAN_H	sftp-server/config.h	968;"	d	language:C++
HAVE_SYS_MOUNT_H	sftp-server/config.h	971;"	d	language:C++
HAVE_SYS_NERR	sftp-server/config.h	977;"	d	language:C++
HAVE_SYS_POLL_H	sftp-server/config.h	980;"	d	language:C++
HAVE_SYS_PRCTL_H	sftp-server/config.h	983;"	d	language:C++
HAVE_SYS_SELECT_H	config.h	302;"	d	language:C++
HAVE_SYS_SELECT_H	sftp-server/config.h	992;"	d	language:C++
HAVE_SYS_SOCKET_H	config.h	305;"	d	language:C++
HAVE_SYS_STAT_H	config.h	308;"	d	language:C++
HAVE_SYS_STAT_H	sftp-server/config.h	998;"	d	language:C++
HAVE_SYS_STROPTS_H	sftp-server/config.h	1004;"	d	language:C++
HAVE_SYS_SYSMACROS_H	sftp-server/config.h	1013;"	d	language:C++
HAVE_SYS_TIME_H	config.h	311;"	d	language:C++
HAVE_SYS_TIME_H	sftp-server/config.h	1019;"	d	language:C++
HAVE_SYS_TYPES_H	config.h	314;"	d	language:C++
HAVE_SYS_TYPES_H	sftp-server/config.h	1022;"	d	language:C++
HAVE_SYS_UN_H	sftp-server/config.h	1025;"	d	language:C++
HAVE_SYS_WAIT_H	config.h	317;"	d	language:C++
HAVE_TCGETPGRP	sftp-server/config.h	1028;"	d	language:C++
HAVE_TCSENDBREAK	sftp-server/config.h	1031;"	d	language:C++
HAVE_TERMIOS_H	config.h	320;"	d	language:C++
HAVE_TIME	sftp-server/config.h	1034;"	d	language:C++
HAVE_TIME_H	sftp-server/config.h	1037;"	d	language:C++
HAVE_UINT16_T	config.h	323;"	d	language:C++
HAVE_UINTXX_T	sftp-server/config.h	1070;"	d	language:C++
HAVE_UNISTD_H	config.h	326;"	d	language:C++
HAVE_UNISTD_H	sftp-server/config.h	1073;"	d	language:C++
HAVE_UNSETENV	sftp-server/config.h	1076;"	d	language:C++
HAVE_UNSIGNED_LONG_LONG	sftp-server/config.h	1079;"	d	language:C++
HAVE_UPDWTMP	config.h	329;"	d	language:C++
HAVE_UPDWTMP	sftp-server/config.h	1082;"	d	language:C++
HAVE_UPDWTMPX	sftp-server/config.h	1085;"	d	language:C++
HAVE_UPDWTMPX	sftp-server/defines.h	539;"	d	language:C++
HAVE_UTIMES	sftp-server/config.h	1097;"	d	language:C++
HAVE_UTIME_H	sftp-server/config.h	1100;"	d	language:C++
HAVE_UTMP_H	config.h	344;"	d	language:C++
HAVE_U_CHAR	sftp-server/config.h	1115;"	d	language:C++
HAVE_U_CHAR	sftp-server/defines.h	246;"	d	language:C++
HAVE_U_INT	sftp-server/config.h	1118;"	d	language:C++
HAVE_U_INT16_T	config.h	347;"	d	language:C++
HAVE_U_INT64_T	sftp-server/config.h	1121;"	d	language:C++
HAVE_U_INTXX_T	sftp-server/config.h	1124;"	d	language:C++
HAVE_U_INTXX_T	sftp-server/defines.h	191;"	d	language:C++
HAVE_VASPRINTF	sftp-server/config.h	1127;"	d	language:C++
HAVE_VA_COPY	sftp-server/config.h	1130;"	d	language:C++
HAVE_VHANGUP	sftp-server/config.h	1133;"	d	language:C++
HAVE_VSNPRINTF	sftp-server/config.h	1139;"	d	language:C++
HAVE_WAITPID	sftp-server/config.h	1142;"	d	language:C++
HAVE__GETLONG	sftp-server/config.h	1145;"	d	language:C++
HAVE__GETSHORT	sftp-server/config.h	1151;"	d	language:C++
HAVE__RES_EXTERN	sftp-server/config.h	1154;"	d	language:C++
HAVE___FUNCTION__	sftp-server/config.h	1163;"	d	language:C++
HAVE___PROGNAME	sftp-server/config.h	1166;"	d	language:C++
HAVE___VA_COPY	sftp-server/config.h	1172;"	d	language:C++
HAVE___func__	sftp-server/config.h	1175;"	d	language:C++
HFIXEDSZ	sftp-server/openbsd-compat/getrrsetbyname.h	62;"	d	language:C++
HH	libtomcrypt/src/hashes/md4.c	70;"	d	language:C	file:
HH	libtomcrypt/src/hashes/md5.c	52;"	d	language:C	file:
HH	libtomcrypt/src/hashes/md5.c	91;"	d	language:C	file:
HH	libtomcrypt/src/hashes/rmd128.c	59;"	d	language:C	file:
HH	libtomcrypt/src/hashes/rmd160.c	62;"	d	language:C	file:
HH	libtomcrypt/src/hashes/rmd256.c	53;"	d	language:C	file:
HH	libtomcrypt/src/hashes/rmd320.c	56;"	d	language:C	file:
HHH	libtomcrypt/src/hashes/rmd128.c	75;"	d	language:C	file:
HHH	libtomcrypt/src/hashes/rmd160.c	87;"	d	language:C	file:
HHH	libtomcrypt/src/hashes/rmd256.c	69;"	d	language:C	file:
HHH	libtomcrypt/src/hashes/rmd320.c	81;"	d	language:C	file:
HMAC Acceleration	libtomcrypt/crypt.tex	/^A compatible accelerator must allow processing data in any granularity which may require internal padding on the driver side.$/;"	u	language:Tex
HMAC_BLOCKSIZE	libtomcrypt/src/mac/hmac/hmac_done.c	20;"	d	language:C	file:
HMAC_BLOCKSIZE	libtomcrypt/src/mac/hmac/hmac_init.c	20;"	d	language:C	file:
HMAC_BLOCKSIZE	libtomcrypt/src/mac/hmac/hmac_test.c	20;"	d	language:C	file:
HOURS	sftp-server/misc.c	274;"	d	language:C	file:
Handle	sftp-server/sftp-server.c	/^struct Handle {$/;"	s	language:C	file:
Handle	sftp-server/sftp-server.c	/^typedef struct Handle Handle;$/;"	t	language:C	typeref:struct:Handle	file:
Handle::bytes_read	sftp-server/sftp-server.c	/^	u_int64_t bytes_read, bytes_write;$/;"	m	language:C	struct:Handle	file:	access:public
Handle::bytes_write	sftp-server/sftp-server.c	/^	u_int64_t bytes_read, bytes_write;$/;"	m	language:C	struct:Handle	file:	access:public
Handle::dirp	sftp-server/sftp-server.c	/^	DIR *dirp;$/;"	m	language:C	struct:Handle	file:	access:public
Handle::fd	sftp-server/sftp-server.c	/^	int fd;$/;"	m	language:C	struct:Handle	file:	access:public
Handle::name	sftp-server/sftp-server.c	/^	char *name;$/;"	m	language:C	struct:Handle	file:	access:public
Handle::next_unused	sftp-server/sftp-server.c	/^	int next_unused;$/;"	m	language:C	struct:Handle	file:	access:public
Handle::use	sftp-server/sftp-server.c	/^	int use;$/;"	m	language:C	struct:Handle	file:	access:public
Hash Registration	libtomcrypt/crypt.tex	/^\\end{small}$/;"	u	language:Tex
Hash_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^typedef union Hash_state {$/;"	u	language:C++
Hash_state::chc	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct chc_state chc;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::chc_state	access:public
Hash_state::data	libtomcrypt/src/headers/tomcrypt_hash.h	/^    void *data;$/;"	m	language:C++	union:Hash_state	access:public
Hash_state::dummy	libtomcrypt/src/headers/tomcrypt_hash.h	/^    char dummy[1];$/;"	m	language:C++	union:Hash_state	access:public
Hash_state::md2	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct md2_state    md2;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::md2_state	access:public
Hash_state::md4	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct md4_state    md4;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::md4_state	access:public
Hash_state::md5	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct md5_state    md5;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::md5_state	access:public
Hash_state::rmd128	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct rmd128_state rmd128;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::rmd128_state	access:public
Hash_state::rmd160	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct rmd160_state rmd160;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::rmd160_state	access:public
Hash_state::rmd256	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct rmd256_state rmd256;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::rmd256_state	access:public
Hash_state::rmd320	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct rmd320_state rmd320;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::rmd320_state	access:public
Hash_state::sha1	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct sha1_state   sha1;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::sha1_state	access:public
Hash_state::sha256	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct sha256_state sha256;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::sha256_state	access:public
Hash_state::sha512	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct sha512_state sha512;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::sha512_state	access:public
Hash_state::tiger	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct tiger_state  tiger;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::tiger_state	access:public
Hash_state::whirlpool	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct whirlpool_state whirlpool;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::whirlpool_state	access:public
Hmac_state	libtomcrypt/src/headers/tomcrypt_mac.h	/^typedef struct Hmac_state {$/;"	s	language:C++
Hmac_state::hash	libtomcrypt/src/headers/tomcrypt_mac.h	/^     int            hash;$/;"	m	language:C++	struct:Hmac_state	access:public
Hmac_state::hashstate	libtomcrypt/src/headers/tomcrypt_mac.h	/^     hash_state     hashstate;$/;"	m	language:C++	struct:Hmac_state	access:public
Hmac_state::key	libtomcrypt/src/headers/tomcrypt_mac.h	/^     unsigned char  *key;$/;"	m	language:C++	struct:Hmac_state	access:public
Hmac_state::md	libtomcrypt/src/headers/tomcrypt_mac.h	/^     hash_state     md;$/;"	m	language:C++	struct:Hmac_state	access:public
I	libtomcrypt/src/hashes/md5.c	42;"	d	language:C	file:
I	libtomcrypt/src/hashes/rmd128.c	48;"	d	language:C	file:
I	libtomcrypt/src/hashes/rmd160.c	48;"	d	language:C	file:
I	libtomcrypt/src/hashes/rmd256.c	42;"	d	language:C	file:
I	libtomcrypt/src/hashes/rmd320.c	42;"	d	language:C	file:
IA_SSHD	sftp-server/openbsd-compat/bsd-cray.h	50;"	d	language:C++
ID	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned char ID;$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ID	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char ID;$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
II	libtomcrypt/src/hashes/md5.c	55;"	d	language:C	file:
II	libtomcrypt/src/hashes/md5.c	94;"	d	language:C	file:
II	libtomcrypt/src/hashes/rmd128.c	63;"	d	language:C	file:
II	libtomcrypt/src/hashes/rmd160.c	67;"	d	language:C	file:
II	libtomcrypt/src/hashes/rmd256.c	57;"	d	language:C	file:
II	libtomcrypt/src/hashes/rmd320.c	61;"	d	language:C	file:
III	libtomcrypt/src/hashes/rmd128.c	79;"	d	language:C	file:
III	libtomcrypt/src/hashes/rmd160.c	92;"	d	language:C	file:
III	libtomcrypt/src/hashes/rmd256.c	73;"	d	language:C	file:
III	libtomcrypt/src/hashes/rmd320.c	86;"	d	language:C	file:
IN6_IS_ADDR_LOOPBACK	fake-rfc2553.h	65;"	d	language:C++
IN6_IS_ADDR_LOOPBACK	sftp-server/openbsd-compat/fake-rfc2553.h	63;"	d	language:C++
IN6_IS_ADDR_V4MAPPED	sftp-server/defines.h	428;"	d	language:C++
INADDR_LOOPBACK	sftp-server/defines.h	143;"	d	language:C++
INCLUDES_H	sftp-server/includes.h	17;"	d	language:C++
INET6_ADDRSTRLEN	sftp-server/defines.h	749;"	d	language:C++
INETD_MODE	options.h	45;"	d	language:C++
INFTIM	sftp-server/openbsd-compat/bsd-poll.h	57;"	d	language:C++
INITKONST	libtomcrypt/src/prngs/sober128.c	39;"	d	language:C	file:
INIT_READBUF	packet.h	47;"	d	language:C++
INIT_SEED_SIZE	random.c	39;"	d	language:C	file:
INLINE	libtomcrypt/src/ciphers/cast5.c	503;"	d	language:C	file:
INLINE	libtomcrypt/src/ciphers/cast5.c	505;"	d	language:C	file:
INLINE	libtomcrypt/src/hashes/tiger.c	559;"	d	language:C	file:
INLINE	libtomcrypt/src/hashes/tiger.c	561;"	d	language:C	file:
INVALID	sftp-server/openbsd-compat/strtonum.c	29;"	d	language:C	file:
IOV_MAX	sftp-server/defines.h	736;"	d	language:C++
IOV_MAX	sftp-server/defines.h	738;"	d	language:C++
IOV_MAX	sftp-server/defines.h	740;"	d	language:C++
IPHT	libtomcrypt/src/ciphers/safer/safer.c	95;"	d	language:C	file:
IPTOS_LOWCOST	sftp-server/defines.h	49;"	d	language:C++
IPTOS_LOWDELAY	sftp-server/defines.h	46;"	d	language:C++
IPTOS_MINCOST	sftp-server/defines.h	50;"	d	language:C++
IPTOS_RELIABILITY	sftp-server/defines.h	48;"	d	language:C++
IPTOS_THROUGHPUT	sftp-server/defines.h	47;"	d	language:C++
IPV4_IN_IPV6	sftp-server/config.h	1184;"	d	language:C++
IS_DROPBEAR_CLIENT	sysoptions.h	202;"	d	language:C++
IS_DROPBEAR_CLIENT	sysoptions.h	207;"	d	language:C++
IS_DROPBEAR_CLIENT	sysoptions.h	212;"	d	language:C++
IS_DROPBEAR_CLIENT	sysoptions.h	217;"	d	language:C++
IS_DROPBEAR_SERVER	sysoptions.h	201;"	d	language:C++
IS_DROPBEAR_SERVER	sysoptions.h	206;"	d	language:C++
IS_DROPBEAR_SERVER	sysoptions.h	211;"	d	language:C++
IS_DROPBEAR_SERVER	sysoptions.h	216;"	d	language:C++
IV	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    unsigned char     IV[16],$/;"	m	language:C++	struct:__anon45	access:public
IV	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned char       IV[MAXBLOCKSIZE], $/;"	m	language:C++	struct:__anon41	access:public
IV	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned char       IV[MAXBLOCKSIZE],$/;"	m	language:C++	struct:__anon46	access:public
IV	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned char       IV[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon42	access:public
IV	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned char       IV[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon43	access:public
IV	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 IV[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon52	access:public
IV	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 IV[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon53	access:public
IV	libtomcrypt/src/headers/tomcrypt_prng.h	/^                  IV[16];     \/* IV for CTR mode *\/$/;"	m	language:C++	struct:fortuna_prng	access:public
In order to securely handle user passwords for the purposes of creating session keys and chaining IVs the PKCS #5 was drafted.   PKCS #5
Initial Vector	libtomcrypt/crypt.tex	/^chosen must have a 16--byte block size (e.g., AES).  $/;"	b	language:Tex
Initialization	libtomcrypt/crypt.tex	/^The more sane way to deal with partial blocks is to pad them with zeroes, and then use CBC normally.  $/;"	u	language:Tex
Initialization	libtomcrypt/crypt.tex	/^This is the universal ASN.1 Object Identifier for the hash.$/;"	u	language:Tex
Initialization	libtomcrypt/crypt.tex	/^unique to every session.  Next, the the optional additional authentication data is processed, and finally the plaintext (or ciphertext depending on the direction).  $/;"	b	language:Tex
Input and Output	libtommath/bn.tex	/^\\end{figure}$/;"	c	language:Tex
Installation Directories	libtomcrypt/crypt.tex	/^static and \\textit{libtomcrypt\\_prof.la} for shared.$/;"	u	language:Tex
Integer Division and Remainder	libtommath/bn.tex	/^Which assigns $\\vert a \\vert$ to $b$.  $/;"	s	language:Tex
Internal ID	libtomcrypt/crypt.tex	/^This is the name the hash is known by and what find\\_hash() will look for.$/;"	u	language:Tex
Introduction	libtomcrypt/crypt.tex	/^\\mainmatter$/;"	c	language:Tex
J	libtomcrypt/src/hashes/rmd160.c	49;"	d	language:C	file:
J	libtomcrypt/src/hashes/rmd320.c	43;"	d	language:C	file:
JJ	libtomcrypt/src/hashes/rmd160.c	72;"	d	language:C	file:
JJ	libtomcrypt/src/hashes/rmd320.c	66;"	d	language:C	file:
JJJ	libtomcrypt/src/hashes/rmd160.c	97;"	d	language:C	file:
JJJ	libtomcrypt/src/hashes/rmd320.c	91;"	d	language:C	file:
Jacobi Symbol	libtommath/bn.tex	/^This will compute the least common multiple of $a$ and $b$ and store it in $c$.$/;"	s	language:Tex
K	libtomcrypt/src/hashes/sha2/sha256.c	/^static const ulong32 K[64] = {$/;"	v	language:C	file:
K	libtomcrypt/src/hashes/sha2/sha512.c	/^static const ulong64 K[80] = {$/;"	v	language:C	file:
K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^      ulong32 K[40];$/;"	m	language:C++	struct:twofish_key	access:public
K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^      ulong32 S[4][256], K[40];$/;"	m	language:C++	struct:twofish_key	access:public
K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 K[32], dK[32];$/;"	m	language:C++	struct:kseed_key	access:public
K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 K[32], keylen;$/;"	m	language:C++	struct:cast5_key	access:public
K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 K[4], dK[4];$/;"	m	language:C++	struct:noekeon_key	access:public
K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 K[18];$/;"	m	language:C++	struct:blowfish_key	access:public
K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 K[44];$/;"	m	language:C++	struct:rc6_key	access:public
K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 K[50];$/;"	m	language:C++	struct:rc5_key	access:public
K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned char K[33][16];$/;"	m	language:C++	struct:saferp_key	access:public
K	libtomcrypt/src/headers/tomcrypt_mac.h	/^    symmetric_key K;$/;"	m	language:C++	struct:pelican_state	access:public
K	libtomcrypt/src/headers/tomcrypt_mac.h	/^   symmetric_key       K;$/;"	m	language:C++	struct:__anon51	access:public
K	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char K[3][MAXBLOCKSIZE],$/;"	m	language:C++	struct:__anon52	access:public
K	libtomcrypt/src/headers/tomcrypt_prng.h	/^    unsigned char K[32],      \/* the current key *\/$/;"	m	language:C++	struct:fortuna_prng	access:public
KARATSUBA_MUL_CUTOFF	libtommath/bncore.c	/^int     KARATSUBA_MUL_CUTOFF = 80,      \/* Min. number of digits before Karatsuba multiplication is used. *\/$/;"	v	language:C
KARATSUBA_MUL_CUTOFF	libtommath/pre_gen/mpi.c	/^int     KARATSUBA_MUL_CUTOFF = 80,      \/* Min. number of digits before Karatsuba multiplication is used. *\/$/;"	v	language:C
KARATSUBA_SQR_CUTOFF	libtommath/bncore.c	/^        KARATSUBA_SQR_CUTOFF = 120,     \/* Min. number of digits before Karatsuba squaring is used. *\/$/;"	v	language:C
KARATSUBA_SQR_CUTOFF	libtommath/pre_gen/mpi.c	/^        KARATSUBA_SQR_CUTOFF = 120,     \/* Min. number of digits before Karatsuba squaring is used. *\/$/;"	v	language:C
KAT_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^typedef struct KAT_key {$/;"	s	language:C++
KAT_key::N	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *N; $/;"	m	language:C++	struct:KAT_key	access:public
KAT_key::d	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *d; $/;"	m	language:C++	struct:KAT_key	access:public
KAT_key::dP	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *dP; $/;"	m	language:C++	struct:KAT_key	access:public
KAT_key::dQ	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *dQ;$/;"	m	language:C++	struct:KAT_key	access:public
KAT_key::p	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *p; $/;"	m	language:C++	struct:KAT_key	access:public
KAT_key::pq	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *pq;$/;"	m	language:C++	struct:KAT_key	access:public
KAT_key::q	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *q; $/;"	m	language:C++	struct:KAT_key	access:public
KAT_key::qP	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *qP; $/;"	m	language:C++	struct:KAT_key	access:public
KAT_key::type	libtomcrypt/src/headers/tomcrypt_pk.h	/^    int type;$/;"	m	language:C++	struct:KAT_key	access:public
KCi	libtomcrypt/src/ciphers/kseed.c	/^static const ulong32 KCi[16] = {$/;"	v	language:C	file:
KEXDH_INIT_SENT	session.h	/^	KEXDH_INIT_SENT,$/;"	e	language:C++	enum:__anon13
KEXDONE	session.h	/^	KEXDONE$/;"	e	language:C++	enum:__anon13
KEXHASHBUF_MAX_INTS	sysoptions.h	128;"	d	language:C++
KEXINIT_RCVD	session.h	/^	KEXINIT_RCVD,$/;"	e	language:C++	enum:__anon13
KEXState	kex.h	/^struct KEXState {$/;"	s	language:C++
KEXState::datarecv	kex.h	/^	unsigned int datarecv; \/* data received since last kex *\/$/;"	m	language:C++	struct:KEXState	access:public
KEXState::datatrans	kex.h	/^	unsigned int datatrans; \/* data transmitted since last kex *\/$/;"	m	language:C++	struct:KEXState	access:public
KEXState::donefirstkex	kex.h	/^	unsigned donefirstkex : 1; \/* Set to 1 after the first kex has completed,$/;"	m	language:C++	struct:KEXState	access:public
KEXState::firstfollows	kex.h	/^	unsigned firstfollows : 1; \/* true when first_kex_packet_follows is set *\/$/;"	m	language:C++	struct:KEXState	access:public
KEXState::lastkextime	kex.h	/^	time_t lastkextime; \/* time of the last kex *\/$/;"	m	language:C++	struct:KEXState	access:public
KEXState::recvkexinit	kex.h	/^	unsigned recvkexinit : 1;$/;"	m	language:C++	struct:KEXState	access:public
KEXState::recvnewkeys	kex.h	/^	unsigned recvnewkeys : 1;$/;"	m	language:C++	struct:KEXState	access:public
KEXState::sentkexinit	kex.h	/^	unsigned sentkexinit : 1; \/*set when we've sent\/recv kexinit packet *\/$/;"	m	language:C++	struct:KEXState	access:public
KEXState::sentnewkeys	kex.h	/^	unsigned sentnewkeys : 1; \/* set once we've send\/recv'ed MSG_NEWKEYS*\/$/;"	m	language:C++	struct:KEXState	access:public
KEX_NOTHING	session.h	/^	KEX_NOTHING,$/;"	e	language:C++	enum:__anon13
KEX_REKEY_DATA	sysoptions.h	19;"	d	language:C++
KEX_REKEY_TIMEOUT	sysoptions.h	16;"	d	language:C++
KEYFILE_DROPBEAR	keyimport.h	/^	KEYFILE_DROPBEAR,$/;"	e	language:C++	enum:__anon58
KEYFILE_OPENSSH	keyimport.h	/^	KEYFILE_OPENSSH,$/;"	e	language:C++	enum:__anon58
KEYFILE_SSHCOM	keyimport.h	/^	KEYFILE_SSHCOM$/;"	e	language:C++	enum:__anon58
KEYP	libtomcrypt/src/prngs/sober128.c	40;"	d	language:C	file:
KEYSIZE	libtomcrypt/src/ciphers/khazad.c	35;"	d	language:C	file:
KEYSIZEB	libtomcrypt/src/ciphers/khazad.c	36;"	d	language:C	file:
KILO	sftp-server/openbsd-compat/fmt_scaled.c	/^	NONE = 0, KILO = 1, MEGA = 2, GIGA = 3, TERA = 4, PETA = 5, EXA = 6$/;"	e	language:C	enum:__anon8	file:
KIi1	libtomcrypt/src/headers/tomcrypt_cipher.h	/^            KIi1[8], KIi2[8], KIi3[8];$/;"	m	language:C++	struct:kasumi_key	access:public
KIi2	libtomcrypt/src/headers/tomcrypt_cipher.h	/^            KIi1[8], KIi2[8], KIi3[8];$/;"	m	language:C++	struct:kasumi_key	access:public
KIi3	libtomcrypt/src/headers/tomcrypt_cipher.h	/^            KIi1[8], KIi2[8], KIi3[8];$/;"	m	language:C++	struct:kasumi_key	access:public
KLi1	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 KLi1[8], KLi2[8],$/;"	m	language:C++	struct:kasumi_key	access:public
KLi2	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 KLi1[8], KLi2[8],$/;"	m	language:C++	struct:kasumi_key	access:public
KOi1	libtomcrypt/src/headers/tomcrypt_cipher.h	/^            KOi1[8], KOi2[8], KOi3[8],$/;"	m	language:C++	struct:kasumi_key	access:public
KOi2	libtomcrypt/src/headers/tomcrypt_cipher.h	/^            KOi1[8], KOi2[8], KOi3[8],$/;"	m	language:C++	struct:kasumi_key	access:public
KOi3	libtomcrypt/src/headers/tomcrypt_cipher.h	/^            KOi1[8], KOi2[8], KOi3[8],$/;"	m	language:C++	struct:kasumi_key	access:public
KTIMES	libtomcrypt/testprof/tomcrypt_test.h	41;"	d	language:C++
Key Scheduling	libtomcrypt/crypt.tex	/^the API to grow in a modular fashion.$/;"	u	language:Tex
Key Sizing	libtomcrypt/crypt.tex	/^based upon.  $/;"	u	language:Tex
Korder	libtomcrypt/src/hashes/md5.c	/^static const ulong32 Korder[64] = {$/;"	v	language:C	file:
L	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char     L[MAXBLOCKSIZE],         \/* L value *\/$/;"	m	language:C++	struct:__anon50	access:public
LASTLOG_FILE	loginrec.h	60;"	d	language:C++
LASTLOG_FILE	loginrec.h	63;"	d	language:C++
LASTLOG_FILE	sftp-server/defines.h	658;"	d	language:C++
LASTLOG_FILE	sftp-server/defines.h	661;"	d	language:C++
LBL_T	libtommath/etc/tune.c	/^ulong64 LBL_T;$/;"	v	language:C
LDFLAGS	sftp-server/Makefile	/^LDFLAGS  = -s$/;"	m	language:Make
LIBNAME	libtommath/etc/makefile	/^LIBNAME=..\/libtommath.a$/;"	m	language:Make
LIBTEST_S	libtomcrypt/testprof/makefile	/^   LIBTEST_S=libtomcrypt_prof.a$/;"	m	language:Make
LINFO_HOSTSIZE	loginrec.h	125;"	d	language:C++
LINFO_LINESIZE	loginrec.h	123;"	d	language:C++
LINFO_NAMESIZE	loginrec.h	124;"	d	language:C++
LINFO_PROGSIZE	loginrec.h	122;"	d	language:C++
LINK_OPNOTSUPP_ERRNO	sftp-server/config.h	1200;"	d	language:C++
LINUX_OOM_ADJUST	sftp-server/config.h	1203;"	d	language:C++
LISTENER_EXTEND_SIZE	listener.h	29;"	d	language:C++
LIST_EMPTY	sftp-server/openbsd-compat/sys-queue.h	271;"	d	language:C++
LIST_EMPTY	sftp-server/openbsd-compat/sys-queue.h	64;"	d	language:C++
LIST_END	sftp-server/openbsd-compat/sys-queue.h	270;"	d	language:C++
LIST_END	sftp-server/openbsd-compat/sys-queue.h	63;"	d	language:C++
LIST_ENTRY	sftp-server/openbsd-compat/sys-queue.h	260;"	d	language:C++
LIST_ENTRY	sftp-server/openbsd-compat/sys-queue.h	61;"	d	language:C++
LIST_FIRST	sftp-server/openbsd-compat/sys-queue.h	269;"	d	language:C++
LIST_FIRST	sftp-server/openbsd-compat/sys-queue.h	62;"	d	language:C++
LIST_FOREACH	sftp-server/openbsd-compat/sys-queue.h	274;"	d	language:C++
LIST_FOREACH	sftp-server/openbsd-compat/sys-queue.h	66;"	d	language:C++
LIST_HEAD	sftp-server/openbsd-compat/sys-queue.h	252;"	d	language:C++
LIST_HEAD	sftp-server/openbsd-compat/sys-queue.h	59;"	d	language:C++
LIST_HEAD_INITIALIZER	sftp-server/openbsd-compat/sys-queue.h	257;"	d	language:C++
LIST_HEAD_INITIALIZER	sftp-server/openbsd-compat/sys-queue.h	60;"	d	language:C++
LIST_INIT	sftp-server/openbsd-compat/sys-queue.h	282;"	d	language:C++
LIST_INIT	sftp-server/openbsd-compat/sys-queue.h	67;"	d	language:C++
LIST_INSERT_AFTER	sftp-server/openbsd-compat/sys-queue.h	286;"	d	language:C++
LIST_INSERT_AFTER	sftp-server/openbsd-compat/sys-queue.h	68;"	d	language:C++
LIST_INSERT_BEFORE	sftp-server/openbsd-compat/sys-queue.h	294;"	d	language:C++
LIST_INSERT_BEFORE	sftp-server/openbsd-compat/sys-queue.h	69;"	d	language:C++
LIST_INSERT_HEAD	sftp-server/openbsd-compat/sys-queue.h	301;"	d	language:C++
LIST_INSERT_HEAD	sftp-server/openbsd-compat/sys-queue.h	70;"	d	language:C++
LIST_NEXT	sftp-server/openbsd-compat/sys-queue.h	272;"	d	language:C++
LIST_NEXT	sftp-server/openbsd-compat/sys-queue.h	65;"	d	language:C++
LIST_REMOVE	sftp-server/openbsd-compat/sys-queue.h	308;"	d	language:C++
LIST_REMOVE	sftp-server/openbsd-compat/sys-queue.h	71;"	d	language:C++
LIST_REPLACE	sftp-server/openbsd-compat/sys-queue.h	317;"	d	language:C++
LIST_REPLACE	sftp-server/openbsd-compat/sys-queue.h	72;"	d	language:C++
LITTLE_ENDIAN	sftp-server/defines.h	495;"	d	language:C++
LL_DIR	loginrec.c	1284;"	d	language:C	file:
LL_FILE	loginrec.c	1283;"	d	language:C	file:
LL_OTHER	loginrec.c	1285;"	d	language:C	file:
LOAD32H	libtomcrypt/src/headers/tomcrypt_macros.h	198;"	d	language:C++
LOAD32H	libtomcrypt/src/headers/tomcrypt_macros.h	218;"	d	language:C++
LOAD32H	libtomcrypt/src/headers/tomcrypt_macros.h	48;"	d	language:C++
LOAD32H	libtomcrypt/src/headers/tomcrypt_macros.h	79;"	d	language:C++
LOAD32H	libtomcrypt/src/headers/tomcrypt_macros.h	91;"	d	language:C++
LOAD32L	libtomcrypt/src/headers/tomcrypt_macros.h	137;"	d	language:C++
LOAD32L	libtomcrypt/src/headers/tomcrypt_macros.h	157;"	d	language:C++
LOAD32L	libtomcrypt/src/headers/tomcrypt_macros.h	175;"	d	language:C++
LOAD32L	libtomcrypt/src/headers/tomcrypt_macros.h	26;"	d	language:C++
LOAD64H	libtomcrypt/src/headers/tomcrypt_macros.h	110;"	d	language:C++
LOAD64H	libtomcrypt/src/headers/tomcrypt_macros.h	124;"	d	language:C++
LOAD64H	libtomcrypt/src/headers/tomcrypt_macros.h	207;"	d	language:C++
LOAD64H	libtomcrypt/src/headers/tomcrypt_macros.h	224;"	d	language:C++
LOAD64H	libtomcrypt/src/headers/tomcrypt_macros.h	60;"	d	language:C++
LOAD64L	libtomcrypt/src/headers/tomcrypt_macros.h	146;"	d	language:C++
LOAD64L	libtomcrypt/src/headers/tomcrypt_macros.h	163;"	d	language:C++
LOAD64L	libtomcrypt/src/headers/tomcrypt_macros.h	187;"	d	language:C++
LOAD64L	libtomcrypt/src/headers/tomcrypt_macros.h	38;"	d	language:C++
LOCAL_C_INCLUDES	libtomcrypt/Android.mk	/^LOCAL_C_INCLUDES := $(LOCAL_PATH)\/src\/headers $(LOCAL_PATH)\/..$/;"	m	language:Make
LOCAL_IDENT	sysoptions.h	10;"	d	language:C++
LOCAL_MODULE	Android.mk	/^LOCAL_MODULE := dropbear$/;"	m	language:Make
LOCAL_MODULE	Android.mk	/^LOCAL_MODULE := dropbearkey$/;"	m	language:Make
LOCAL_MODULE	Android.mk	/^LOCAL_MODULE := scp$/;"	m	language:Make
LOCAL_MODULE	Android.mk	/^LOCAL_MODULE := ssh$/;"	m	language:Make
LOCAL_MODULE	libtomcrypt/Android.mk	/^LOCAL_MODULE := libtomcrypt$/;"	m	language:Make
LOCAL_MODULE	libtommath/Android.mk	/^LOCAL_MODULE := libtommath$/;"	m	language:Make
LOCAL_MODULE	sftp-server/Android.mk	/^LOCAL_MODULE := sftp-server$/;"	m	language:Make
LOCAL_MODULE_PATH	Android.mk	/^LOCAL_MODULE_PATH := $(TARGET_OUT_OPTIONAL_EXECUTABLES)$/;"	m	language:Make
LOCAL_MODULE_PATH	sftp-server/Android.mk	/^LOCAL_MODULE_PATH := $(TARGET_OUT_OPTIONAL_EXECUTABLES)$/;"	m	language:Make
LOCAL_MODULE_TAGS	Android.mk	/^LOCAL_MODULE_TAGS := debug$/;"	m	language:Make
LOCAL_MODULE_TAGS	Android.mk	/^LOCAL_MODULE_TAGS := eng$/;"	m	language:Make
LOCAL_MODULE_TAGS	sftp-server/Android.mk	/^LOCAL_MODULE_TAGS := eng$/;"	m	language:Make
LOCAL_PATH	Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m	language:Make
LOCAL_PATH	libtomcrypt/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m	language:Make
LOCAL_PATH	libtommath/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m	language:Make
LOCAL_PATH	sftp-server/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m	language:Make
LOCAL_SHARED_LIBRARIES	Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m	language:Make
LOCAL_SRC_FILES	Android.mk	/^LOCAL_SRC_FILES:=\\$/;"	m	language:Make
LOCAL_SRC_FILES	libtomcrypt/Android.mk	/^LOCAL_SRC_FILES := \\$/;"	m	language:Make
LOCAL_SRC_FILES	libtommath/Android.mk	/^LOCAL_SRC_FILES := \\$/;"	m	language:Make
LOCAL_SRC_FILES	sftp-server/Android.mk	/^LOCAL_SRC_FILES:=\\$/;"	m	language:Make
LOCAL_STATIC_LIBRARIES	Android.mk	/^LOCAL_STATIC_LIBRARIES := libtommath libtomcrypt$/;"	m	language:Make
LOCKED_PASSWD_PREFIX	sftp-server/config.h	1212;"	d	language:C++
LOG	libtomcrypt/src/ciphers/safer/safer.c	93;"	d	language:C	file:
LOGIN_PROGRAM_FALLBACK	sftp-server/config.h	1231;"	d	language:C++
LOG_AUTHPRIV	includes.h	143;"	d	language:C++
LOG_STDERR_VIS	sftp-server/log.c	63;"	d	language:C	file:
LOG_SYSLOG_VIS	sftp-server/log.c	62;"	d	language:C	file:
LOG_V_2	libtommath/mtest/mpi.c	52;"	d	language:C	file:
LOG_V_2	libtommath/mtest/mpi.c	57;"	d	language:C	file:
LRW Mode	libtomcrypt/crypt.tex	/^\\end{small}$/;"	u	language:Tex
LRW_DECRYPT	libtomcrypt/src/headers/tomcrypt_cipher.h	795;"	d	language:C++
LRW_ENCRYPT	libtomcrypt/src/headers/tomcrypt_cipher.h	794;"	d	language:C++
LT	libtomcrypt/src/ciphers/safer/saferp.c	124;"	d	language:C	file:
LT	libtomcrypt/src/ciphers/safer/saferp.c	165;"	d	language:C	file:
LT	libtomcrypt/src/ciphers/safer/saferp.c	166;"	d	language:C	file:
LTC  _CLEAN  _STACK	libtomcrypt/crypt.tex	/^file I\/O on embedded platforms.$/;"	u	language:Tex
LTC  _EASY	libtomcrypt/crypt.tex	/^Also see technical note number five for more details.$/;"	u	language:Tex
LTC  _FAST	libtomcrypt/crypt.tex	/^which can be auto-detected.  This macro ensures that they are never enabled.$/;"	u	language:Tex
LTC  _NO  _ASM	libtomcrypt/crypt.tex	/^use this mode.  So sad.$/;"	u	language:Tex
LTC  _NO  _FAST	libtomcrypt/crypt.tex	/^If LTC\\_NO\\_TEST has been defined, the testing routines will be compacted and only return CRYPT\\_NOP.$/;"	u	language:Tex
LTC  _NO  _FILE	libtomcrypt/crypt.tex	/^the default clock() used with a replacement.  By default the standard C library clock() function is used.$/;"	u	language:Tex
LTC  _PTHREAD	libtomcrypt/crypt.tex	/^These variants are slower but can save quite a bit of code space.$/;"	u	language:Tex
LTC  _SMALL  _CODE	libtomcrypt/crypt.tex	/^of GCM output on both the AMD64 and Intel Pentium 4 platforms.  Requires GCC and an SSE2 equipped platform.$/;"	u	language:Tex
LTC  _TEST	libtomcrypt/crypt.tex	/^Assumes that you have no memory paging with the stack.$/;"	u	language:Tex
LTC_ARGCHK	libtomcrypt/src/headers/tomcrypt_argchk.h	15;"	d	language:C++
LTC_ARGCHK	libtomcrypt/src/headers/tomcrypt_argchk.h	20;"	d	language:C++
LTC_ARGCHK	libtomcrypt/src/headers/tomcrypt_argchk.h	25;"	d	language:C++
LTC_ARGCHK	libtomcrypt/src/headers/tomcrypt_argchk.h	30;"	d	language:C++
LTC_ARGCHK	libtomcrypt/src/headers/tomcrypt_argchk.h	9;"	d	language:C++
LTC_ARGCHKVD	libtomcrypt/src/headers/tomcrypt_argchk.h	10;"	d	language:C++
LTC_ARGCHKVD	libtomcrypt/src/headers/tomcrypt_argchk.h	16;"	d	language:C++
LTC_ARGCHKVD	libtomcrypt/src/headers/tomcrypt_argchk.h	21;"	d	language:C++
LTC_ARGCHKVD	libtomcrypt/src/headers/tomcrypt_argchk.h	26;"	d	language:C++
LTC_ARGCHKVD	libtomcrypt/src/headers/tomcrypt_argchk.h	31;"	d	language:C++
LTC_ASN1_BIT_STRING	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_BIT_STRING,$/;"	e	language:C++	enum:__anon38
LTC_ASN1_BOOLEAN	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_BOOLEAN,$/;"	e	language:C++	enum:__anon38
LTC_ASN1_CHOICE	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_CHOICE,$/;"	e	language:C++	enum:__anon38
LTC_ASN1_EOL	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_EOL,$/;"	e	language:C++	enum:__anon38
LTC_ASN1_IA5_STRING	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_IA5_STRING,$/;"	e	language:C++	enum:__anon38
LTC_ASN1_INTEGER	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_INTEGER,$/;"	e	language:C++	enum:__anon38
LTC_ASN1_NULL	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_NULL,$/;"	e	language:C++	enum:__anon38
LTC_ASN1_OBJECT_IDENTIFIER	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_OBJECT_IDENTIFIER,$/;"	e	language:C++	enum:__anon38
LTC_ASN1_OCTET_STRING	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_OCTET_STRING,$/;"	e	language:C++	enum:__anon38
LTC_ASN1_PRINTABLE_STRING	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_PRINTABLE_STRING,$/;"	e	language:C++	enum:__anon38
LTC_ASN1_SEQUENCE	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_SEQUENCE,$/;"	e	language:C++	enum:__anon38
LTC_ASN1_SET	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_SET,$/;"	e	language:C++	enum:__anon38
LTC_ASN1_SETOF	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_SETOF$/;"	e	language:C++	enum:__anon38
LTC_ASN1_SHORT_INTEGER	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_SHORT_INTEGER,$/;"	e	language:C++	enum:__anon38
LTC_ASN1_UTCTIME	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_UTCTIME,$/;"	e	language:C++	enum:__anon38
LTC_ASN1_UTF8_STRING	libtomcrypt/src/headers/tomcrypt_pk.h	/^ LTC_ASN1_UTF8_STRING,$/;"	e	language:C++	enum:__anon38
LTC_CALL	libtomcrypt/src/headers/tomcrypt_cfg.h	11;"	d	language:C++
LTC_CALL	libtomcrypt/src/headers/tomcrypt_cfg.h	14;"	d	language:C++
LTC_CBC_MODE	libtomcrypt/src/headers/tomcrypt_custom.h	115;"	d	language:C++
LTC_CTR_MODE	libtomcrypt/src/headers/tomcrypt_custom.h	118;"	d	language:C++
LTC_CTR_RFC3686	libtomcrypt/src/headers/tomcrypt_cipher.h	777;"	d	language:C++
LTC_EXPORT	libtomcrypt/src/headers/tomcrypt_cfg.h	19;"	d	language:C++
LTC_FAST	libtomcrypt/src/headers/tomcrypt_cfg.h	101;"	d	language:C++
LTC_FAST	libtomcrypt/src/headers/tomcrypt_cfg.h	111;"	d	language:C++
LTC_FAST	libtomcrypt/src/headers/tomcrypt_cfg.h	62;"	d	language:C++
LTC_FAST	libtomcrypt/src/headers/tomcrypt_cfg.h	76;"	d	language:C++
LTC_FAST	libtomcrypt/src/headers/tomcrypt_cfg.h	84;"	d	language:C++
LTC_FAST_TYPE	libtomcrypt/src/headers/tomcrypt_cfg.h	112;"	d	language:C++
LTC_FAST_TYPE	libtomcrypt/src/headers/tomcrypt_cfg.h	63;"	d	language:C++
LTC_FAST_TYPE	libtomcrypt/src/headers/tomcrypt_cfg.h	77;"	d	language:C++
LTC_FAST_TYPE	libtomcrypt/src/headers/tomcrypt_cfg.h	85;"	d	language:C++
LTC_HMAC	libtomcrypt/src/headers/tomcrypt_custom.h	131;"	d	language:C++
LTC_MP_EQ	libtomcrypt/src/headers/tomcrypt_math.h	4;"	d	language:C++
LTC_MP_GT	libtomcrypt/src/headers/tomcrypt_math.h	5;"	d	language:C++
LTC_MP_LT	libtomcrypt/src/headers/tomcrypt_math.h	3;"	d	language:C++
LTC_MP_NO	libtomcrypt/src/headers/tomcrypt_math.h	7;"	d	language:C++
LTC_MP_YES	libtomcrypt/src/headers/tomcrypt_math.h	8;"	d	language:C++
LTC_MUTEX_GLOBAL	libtomcrypt/src/headers/tomcrypt_custom.h	137;"	d	language:C++
LTC_MUTEX_INIT	libtomcrypt/src/headers/tomcrypt_custom.h	140;"	d	language:C++
LTC_MUTEX_LOCK	libtomcrypt/src/headers/tomcrypt_custom.h	141;"	d	language:C++
LTC_MUTEX_PROTO	libtomcrypt/src/headers/tomcrypt_custom.h	138;"	d	language:C++
LTC_MUTEX_TYPE	libtomcrypt/src/headers/tomcrypt_custom.h	139;"	d	language:C++
LTC_MUTEX_UNLOCK	libtomcrypt/src/headers/tomcrypt_custom.h	142;"	d	language:C++
LTC_NO_BSWAP	libtomcrypt/src/headers/tomcrypt_cfg.h	114;"	d	language:C++
LTC_NO_PK	libtomcrypt/src/headers/tomcrypt_custom.h	66;"	d	language:C++
LTC_NO_PRNGS	libtomcrypt/src/headers/tomcrypt_custom.h	65;"	d	language:C++
LTC_NO_PROTOTYPES	libtomcrypt/src/headers/tomcrypt_custom.h	10;"	d	language:C++
LTC_NO_PROTOTYPES	libtomcrypt/src/headers/tomcrypt_custom.h	16;"	d	language:C++
LTC_NO_PROTOTYPES	libtomcrypt/src/headers/tomcrypt_custom.h	22;"	d	language:C++
LTC_NO_PROTOTYPES	libtomcrypt/src/headers/tomcrypt_custom.h	28;"	d	language:C++
LTC_NO_PROTOTYPES	libtomcrypt/src/headers/tomcrypt_custom.h	35;"	d	language:C++
LTC_NO_PROTOTYPES	libtomcrypt/src/headers/tomcrypt_custom.h	41;"	d	language:C++
LTC_NO_PROTOTYPES	libtomcrypt/src/headers/tomcrypt_custom.h	47;"	d	language:C++
LTC_NO_PROTOTYPES	libtomcrypt/src/headers/tomcrypt_custom.h	53;"	d	language:C++
LTC_NO_ROLC	libtomcrypt/src/headers/tomcrypt_cfg.h	113;"	d	language:C++
LTC_NO_ROLC	libtomcrypt/src/headers/tomcrypt_custom.h	71;"	d	language:C++
LTC_PKCS_1_EME	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^  LTC_PKCS_1_EME    = 2         \/* Block type 2 (PKCS #1 v1.5 encryption padding) *\/$/;"	e	language:C++	enum:ltc_pkcs_1_v1_5_blocks
LTC_PKCS_1_EMSA	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^  LTC_PKCS_1_EMSA   = 1,        \/* Block type 1 (PKCS #1 v1.5 signature padding) *\/$/;"	e	language:C++	enum:ltc_pkcs_1_v1_5_blocks
LTC_PKCS_1_OAEP	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^  LTC_PKCS_1_OAEP   = 2,        \/* PKCS #1 v2.0 encryption padding *\/$/;"	e	language:C++	enum:ltc_pkcs_1_paddings
LTC_PKCS_1_PSS	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^  LTC_PKCS_1_PSS    = 3         \/* PKCS #1 v2.1 signature padding *\/$/;"	e	language:C++	enum:ltc_pkcs_1_paddings
LTC_PKCS_1_V1_5	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^  LTC_PKCS_1_V1_5   = 1,        \/* PKCS #1 v1.5 padding (\\sa ltc_pkcs_1_v1_5_blocks) *\/$/;"	e	language:C++	enum:ltc_pkcs_1_paddings
LTC_SET_ASN1	libtomcrypt/src/headers/tomcrypt_pk.h	398;"	d	language:C++
LTC_SMALL_CODE	libtomcrypt/src/headers/tomcrypt_custom.h	68;"	d	language:C++
LTM1	libtommath/tommath_class.h	8;"	d	language:C++
LTM2	libtommath/tommath_class.h	6;"	d	language:C++
LTM3	libtommath/tommath_class.h	3;"	d	language:C++
LTM_ALL	libtommath/tommath_superclass.h	4;"	d	language:C++
LTM_LAST	libtommath/tommath_class.h	989;"	d	language:C++
LTM_LAST	libtommath/tommath_class.h	994;"	d	language:C++
LTM_PRIME_2MSB_ON	libtommath/tommath.h	153;"	d	language:C++
LTM_PRIME_BBS	libtommath/tommath.h	151;"	d	language:C++
LTM_PRIME_SAFE	libtommath/tommath.h	152;"	d	language:C++
LTYPE_LOGIN	loginrec.h	118;"	d	language:C++
LTYPE_LOGOUT	loginrec.h	119;"	d	language:C++
LUT	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^             *LUT[1U<<FP_LUT]; \/* fixed point lookup *\/ $/;"	m	language:C	struct:__anon30	file:	access:public
Least Common Multiple	libtommath/bn.tex	/^This will compute the greatest common divisor of $a$ and $b$ and store it in $c$.$/;"	s	language:Tex
Li	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     Li[MAXBLOCKSIZE],        \/* value of Li [current value, we calc from previous recall] *\/$/;"	m	language:C++	struct:__anon48	access:public
Li	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     Li[MAXBLOCKSIZE],        \/* value of Li [current value, we calc from previous recall] *\/$/;"	m	language:C++	struct:__anon50	access:public
Link	queue.h	/^struct Link {$/;"	s	language:C++
Link::item	queue.h	/^	void* item;$/;"	m	language:C++	struct:Link	access:public
Link::link	queue.h	/^	struct Link* link;$/;"	m	language:C++	struct:Link	typeref:struct:Link::Link	access:public
Listener	listener.h	/^struct Listener {$/;"	s	language:C++
Listener::acceptor	listener.h	/^	void (*acceptor)(struct Listener*, int sock);$/;"	m	language:C++	struct:Listener	access:public
Listener::cleanup	listener.h	/^	void (*cleanup)(struct Listener*);$/;"	m	language:C++	struct:Listener	access:public
Listener::index	listener.h	/^	int index; \/* index in the array of listeners *\/$/;"	m	language:C++	struct:Listener	access:public
Listener::nsocks	listener.h	/^	unsigned int nsocks;$/;"	m	language:C++	struct:Listener	access:public
Listener::socks	listener.h	/^	int socks[DROPBEAR_MAX_SOCKS];$/;"	m	language:C++	struct:Listener	access:public
Listener::type	listener.h	/^	int type; \/* CHANNEL_ID_X11, CHANNEL_ID_AGENT, $/;"	m	language:C++	struct:Listener	access:public
Listener::typedata	listener.h	/^	void *typedata;$/;"	m	language:C++	struct:Listener	access:public
LogLevel	sftp-server/log.h	/^}       LogLevel;$/;"	t	language:C++	typeref:enum:__anon7
Logical Operations	libtommath/bn.tex	/^\\end{alltt}$/;"	s	language:Tex
Long Constants	libtommath/bn.tex	/^\\end{alltt} \\end{small}$/;"	u	language:Tex
Lr	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     Lr[MAXBLOCKSIZE],        \/* L * x^-1 *\/$/;"	m	language:C++	struct:__anon48	access:public
Lr	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     Lr[MAXBLOCKSIZE],        \/* L * x^-1 *\/$/;"	m	language:C++	struct:__anon50	access:public
Ls	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     Ls[32][MAXBLOCKSIZE],    \/* L shifted by i bits to the left *\/$/;"	m	language:C++	struct:__anon50	access:public
Ls	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char     Ls[32][MAXBLOCKSIZE],    \/* L shifted by i bits to the left *\/$/;"	m	language:C++	struct:__anon48	access:public
Lu	libtomcrypt/src/headers/tomcrypt_mac.h	/^                   Lu[2][MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon47	access:public
M	libtomcrypt/src/encauth/gcm/gcm_gf_mult.c	106;"	d	language:C	file:
MAILDIR	sftp-server/defines.h	352;"	d	language:C++
MAIL_DIRECTORY	sftp-server/defines.h	348;"	d	language:C++
MAP_ANON	sftp-server/defines.h	126;"	d	language:C++
MAP_FAILED	sftp-server/defines.h	130;"	d	language:C++
MASK	sftp-server/openbsd-compat/pwcache.c	44;"	d	language:C	file:
MATCH_H	sftp-server/match.h	15;"	d	language:C++
MAX	libtomcrypt/src/headers/tomcrypt_macros.h	408;"	d	language:C++
MAX	libtommath/tommath.h	31;"	d	language:C++
MAX	sftp-server/defines.h	389;"	d	language:C++
MAXBLOCKSIZE	libtomcrypt/src/headers/tomcrypt.h	23;"	d	language:C++
MAXHOSTNAMELEN	sftp-server/openbsd-compat/bsd-cray.h	53;"	d	language:C++
MAXPATHLEN	sftp-server/defines.h	55;"	d	language:C++
MAXPATHLEN	sftp-server/defines.h	57;"	d	language:C++
MAXSYMLINKS	sftp-server/defines.h	72;"	d	language:C++
MAX_AGENT_REPLY	agentfwd.h	36;"	d	language:C++
MAX_AUTHKEYS_LINE	svr-authpubkey.c	71;"	d	language:C	file:
MAX_AUTH_TRIES	options.h	234;"	d	language:C++
MAX_BANNER_LINES	sysoptions.h	35;"	d	language:C++
MAX_BANNER_SIZE	sysoptions.h	34;"	d	language:C++
MAX_CBUF_SIZE	circbuffer.c	29;"	d	language:C	file:
MAX_CHANNELS	sysoptions.h	115;"	d	language:C++
MAX_CMD_LEN	sysoptions.h	41;"	d	language:C++
MAX_COUNTER	random.c	35;"	d	language:C	file:
MAX_DIGITS	sftp-server/openbsd-compat/fmt_scaled.c	70;"	d	language:C	file:
MAX_FMT	dbutil.c	57;"	d	language:C	file:
MAX_HOST_LEN	sysoptions.h	44;"	d	language:C++
MAX_IP_LEN	sysoptions.h	45;"	d	language:C++
MAX_IV_LEN	sysoptions.h	91;"	d	language:C++
MAX_KAT_SIZE	libtomcrypt/src/headers/tomcrypt_pk.h	96;"	d	language:C++
MAX_KEXHASHBUF	kex.h	67;"	d	language:C++
MAX_KEYSIZEB	libtomcrypt/src/ciphers/anubis.c	40;"	d	language:C	file:
MAX_KEY_LEN	sysoptions.h	90;"	d	language:C++
MAX_KNOWNHOSTS_LINE	cli-kex.c	42;"	d	language:C	file:
MAX_LISTENERS	listener.h	28;"	d	language:C++
MAX_LISTEN_ADDR	sysoptions.h	51;"	d	language:C++
MAX_MAC_KEY	sysoptions.h	93;"	d	language:C++
MAX_MAC_LEN	sysoptions.h	87;"	d	language:C++
MAX_N	libtomcrypt/src/ciphers/anubis.c	36;"	d	language:C	file:
MAX_NAME_LEN	sysoptions.h	95;"	d	language:C++
MAX_PRIVKEY_SIZE	sysoptions.h	124;"	d	language:C++
MAX_PROP	sftp-server/match.c	238;"	d	language:C	file:
MAX_PROPOSED_ALGO	sysoptions.h	99;"	d	language:C++
MAX_PUBKEY_SIZE	sysoptions.h	122;"	d	language:C++
MAX_RADIX	libtommath/mtest/mpi.h	72;"	d	language:C++
MAX_RECV_WINDOW	sysoptions.h	113;"	d	language:C++
MAX_ROUNDS	libtomcrypt/src/ciphers/anubis.c	38;"	d	language:C	file:
MAX_RSA_SIZE	libtomcrypt/src/headers/tomcrypt_pk.h	15;"	d	language:C++
MAX_STRING_LEN	sysoptions.h	118;"	d	language:C++
MAX_TERMCODE	termcodes.h	35;"	d	language:C++
MAX_TERM_LEN	sysoptions.h	42;"	d	language:C++
MAX_UNAUTH_CLIENTS	options.h	229;"	d	language:C++
MAX_UNAUTH_PACKET_TYPE	process-packet.c	38;"	d	language:C	file:
MAX_UNAUTH_PER_IP	options.h	223;"	d	language:C++
MAX_USERNAME_LEN	auth.h	80;"	d	language:C++
MAX_WINSIZE	progressmeter.c	34;"	d	language:C	file:
MD5	libtomcrypt/src/headers/tomcrypt_custom.h	128;"	d	language:C++
MD5_HASH_SIZE	sysoptions.h	84;"	d	language:C++
MDSA_DELTA	libtomcrypt/src/headers/tomcrypt_pk.h	296;"	d	language:C++
MDSA_MAX_GROUP	libtomcrypt/src/headers/tomcrypt_pk.h	299;"	d	language:C++
MDS_POLY	libtomcrypt/src/ciphers/twofish/twofish.c	42;"	d	language:C	file:
MEGA	sftp-server/openbsd-compat/fmt_scaled.c	/^	NONE = 0, KILO = 1, MEGA = 2, GIGA = 3, TERA = 4, PETA = 5, EXA = 6$/;"	e	language:C	enum:__anon8	file:
MIN	libtomcrypt/src/headers/tomcrypt_macros.h	412;"	d	language:C++
MIN	libtommath/tommath.h	27;"	d	language:C++
MIN	sftp-server/defines.h	390;"	d	language:C++
MINUTES	sftp-server/misc.c	273;"	d	language:C	file:
MIN_AUTHKEYS_LINE	svr-authpubkey.c	70;"	d	language:C	file:
MIN_DSS_KEYLEN	sysoptions.h	28;"	d	language:C++
MIN_KAT_SIZE	libtomcrypt/src/headers/tomcrypt_pk.h	95;"	d	language:C++
MIN_KEYSIZEB	libtomcrypt/src/ciphers/anubis.c	39;"	d	language:C	file:
MIN_N	libtomcrypt/src/ciphers/anubis.c	35;"	d	language:C	file:
MIN_PACKET_LEN	sysoptions.h	103;"	d	language:C++
MIN_ROUNDS	libtomcrypt/src/ciphers/anubis.c	37;"	d	language:C	file:
MIN_RSA_KEYLEN	sysoptions.h	31;"	d	language:C++
MIN_RSA_SIZE	libtomcrypt/src/headers/tomcrypt_pk.h	14;"	d	language:C++
MIN_SIZEOF	loginrec.c	187;"	d	language:C	file:
MISSING_FD_MASK	sftp-server/config.h	1237;"	d	language:C++
MISSING_HOWMANY	sftp-server/config.h	1240;"	d	language:C++
MIV	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       MIV[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon46	access:public
MM	libtomcrypt/src/headers/tomcrypt_pk.h	/^            MM, \/* month *\/$/;"	m	language:C++	struct:__anon39	access:public
MOTD_FILENAME	options.h	161;"	d	language:C++
MPI	libtomcrypt/testprof/x86_prof.c	641;"	d	language:C	file:
MPI_CONFIG_H_	libtommath/mtest/mpi-config.h	5;"	d	language:C++
MP_28BIT	libtommath/tommath.h	103;"	d	language:C++
MP_64BIT	libtommath/tommath.h	51;"	d	language:C++
MP_ARGCHK	libtommath/mtest/mpi-config.h	50;"	d	language:C++
MP_BADARG	libtommath/mtest/mpi.h	45;"	d	language:C++
MP_COMPAT_MACROS	libtommath/mtest/mpi-config.h	80;"	d	language:C++
MP_CRYPTO	libtommath/mtest/mpi-config.h	41;"	d	language:C++
MP_DEBUG	libtommath/mtest/mpi-config.h	54;"	d	language:C++
MP_DEFPREC	libtommath/mtest/mpi-config.h	58;"	d	language:C++
MP_DIGIT_BIT	libtomcrypt/src/headers/tomcrypt_math.h	441;"	d	language:C++
MP_DIGIT_BIT	libtommath/mtest/mpi-types.h	8;"	d	language:C++
MP_DIGIT_BIT	libtommath/tommath.h	130;"	d	language:C++
MP_DIGIT_MAX	libtommath/mtest/mpi-types.h	9;"	d	language:C++
MP_DIGIT_MAX	libtommath/tommath.h	132;"	d	language:C++
MP_DIGIT_SIZE	libtommath/mtest/mpi-types.h	13;"	d	language:C++
MP_EQ	libtommath/mtest/mpi.c	86;"	d	language:C	file:
MP_EQ	libtommath/mtest/mpi.h	18;"	d	language:C++
MP_EQ	libtommath/tommath.h	136;"	d	language:C++
MP_GT	libtommath/mtest/mpi.c	87;"	d	language:C	file:
MP_GT	libtommath/mtest/mpi.h	19;"	d	language:C++
MP_GT	libtommath/tommath.h	137;"	d	language:C++
MP_IOFUNC	libtommath/mtest/mpi-config.h	17;"	d	language:C++
MP_IOFUNC	libtommath/mtest/mpi.h	22;"	d	language:C++
MP_IOFUNC	libtommath/mtest/mpi.h	23;"	d	language:C++
MP_LAST_CODE	libtommath/mtest/mpi.h	47;"	d	language:C++
MP_LOGTAB	libtommath/mtest/mpi-config.h	29;"	d	language:C++
MP_LT	libtommath/mtest/mpi.c	85;"	d	language:C	file:
MP_LT	libtommath/mtest/mpi.h	17;"	d	language:C++
MP_LT	libtommath/tommath.h	135;"	d	language:C++
MP_MACRO	libtommath/mtest/mpi-config.h	62;"	d	language:C++
MP_MASK	libtommath/tommath.h	131;"	d	language:C++
MP_MEM	libtommath/mtest/mpi.h	43;"	d	language:C++
MP_MEM	libtommath/tommath.h	143;"	d	language:C++
MP_MEMCPY	libtommath/mtest/mpi-config.h	37;"	d	language:C++
MP_MEMSET	libtommath/mtest/mpi-config.h	33;"	d	language:C++
MP_MODARITH	libtommath/mtest/mpi-config.h	21;"	d	language:C++
MP_NEG	libtommath/mtest/mpi.h	33;"	d	language:C++
MP_NEG	libtommath/tommath.h	140;"	d	language:C++
MP_NO	libtommath/mtest/mpi.h	42;"	d	language:C++
MP_NO	libtommath/tommath.h	148;"	d	language:C++
MP_NUMTH	libtommath/mtest/mpi-config.h	25;"	d	language:C++
MP_OKAY	libtommath/mtest/mpi.h	40;"	d	language:C++
MP_OKAY	libtommath/tommath.h	142;"	d	language:C++
MP_PREC	libtommath/tommath.h	169;"	d	language:C++
MP_PREC	libtommath/tommath.h	171;"	d	language:C++
MP_PTAB_SIZE	libtommath/mtest/mpi-config.h	76;"	d	language:C++
MP_RANGE	libtommath/mtest/mpi.h	44;"	d	language:C++
MP_RANGE	libtommath/tommath.h	145;"	d	language:C++
MP_SQUARE	libtommath/mtest/mpi-config.h	66;"	d	language:C++
MP_UNDEF	libtommath/mtest/mpi.h	46;"	d	language:C++
MP_VAL	libtommath/tommath.h	144;"	d	language:C++
MP_WARRAY	libtommath/tommath.h	176;"	d	language:C++
MP_WORD_BIT	libtommath/mtest/mpi-types.h	10;"	d	language:C++
MP_WORD_MAX	libtommath/mtest/mpi-types.h	11;"	d	language:C++
MP_YES	libtommath/mtest/mpi.h	41;"	d	language:C++
MP_YES	libtommath/tommath.h	147;"	d	language:C++
MP_ZPOS	libtommath/mtest/mpi.h	34;"	d	language:C++
MP_ZPOS	libtommath/tommath.h	139;"	d	language:C++
MSGBUFSIZ	sftp-server/log.c	327;"	d	language:C	file:
Maintenance Functions	libtommath/bn.tex	/^\\end{alltt} \\end{small}$/;"	s	language:Tex
Maj	libtomcrypt/src/hashes/sha2/sha256.c	59;"	d	language:C	file:
Maj	libtomcrypt/src/hashes/sha2/sha512.c	84;"	d	language:C	file:
Message Authentication Codes	libtomcrypt/crypt.tex	/^for all purposes you would normally use a hash for.$/;"	c	language:Tex
Modular Exponentiation	libtommath/bn.tex	/^$a$ for all values of $b$ greater than three.  $/;"	s	language:Tex
Modular Inverse	libtommath/bn.tex	/^and the result will be $1$ if $a$ is a quadratic residue modulo $p$.  $/;"	s	language:Tex
Modular Reduction	libtommath/bn.tex	/^tuning takes a very long time as the cutoff points are likely to be very high.$/;"	c	language:Tex
Montgomery Reduction	libtommath/bn.tex	/^This program will calculate $a^3 \\mbox{ mod }b$ if all the functions succeed.  $/;"	s	language:Tex
Multab	libtomcrypt/src/prngs/sober128tab.c	/^static const ulong32 Multab[256] = {$/;"	v	language:C	file:
Multiplication	libtommath/bn.tex	/^\\chapter{Multiplication and Squaring}$/;"	s	language:Tex
Multiplication and Squaring	libtommath/bn.tex	/^$b$ is zero the function returns \\textbf{MP\\_VAL}.  $/;"	c	language:Tex
Multiplication by two	libtommath/bn.tex	/^AND, XOR and OR directly.  These operations are very quick.$/;"	u	language:Tex
N	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char N[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon49	access:public
N	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *N; $/;"	m	language:C++	struct:KAT_key	access:public
N	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *N; $/;"	m	language:C++	struct:Rsa_key	access:public
N	libtomcrypt/src/prngs/sober128.c	37;"	d	language:C	file:
NCACHE	sftp-server/openbsd-compat/pwcache.c	43;"	d	language:C	file:
NEG	libtommath/mtest/mpi.h	37;"	d	language:C++
NFDBITS	sftp-server/defines.h	135;"	d	language:C++
NGROUPS_MAX	sftp-server/defines.h	87;"	d	language:C++
NGROUPS_MAX	sftp-server/defines.h	89;"	d	language:C++
NGROUPS_MAX	sftp-server/openbsd-compat/bsd-nextstep.h	35;"	d	language:C++
NGROUPS_MAX	sftp-server/openbsd-compat/bsd-nextstep.h	36;"	d	language:C++
NI_MAXHOST	fake-rfc2553.h	119;"	d	language:C++
NI_MAXHOST	sftp-server/openbsd-compat/fake-rfc2553.h	117;"	d	language:C++
NI_MAXSERV	fake-rfc2553.h	116;"	d	language:C++
NI_MAXSERV	sftp-server/openbsd-compat/fake-rfc2553.h	114;"	d	language:C++
NI_NAMEREQD	fake-rfc2553.h	99;"	d	language:C++
NI_NAMEREQD	sftp-server/openbsd-compat/fake-rfc2553.h	97;"	d	language:C++
NI_NUMERICHOST	fake-rfc2553.h	96;"	d	language:C++
NI_NUMERICHOST	sftp-server/openbsd-compat/fake-rfc2553.h	94;"	d	language:C++
NI_NUMERICSERV	fake-rfc2553.h	102;"	d	language:C++
NI_NUMERICSERV	sftp-server/openbsd-compat/fake-rfc2553.h	100;"	d	language:C++
NLFUNC	libtomcrypt/src/prngs/sober128.c	87;"	d	language:C	file:
NONE	sftp-server/openbsd-compat/fmt_scaled.c	/^	NONE = 0, KILO = 1, MEGA = 2, GIGA = 3, TERA = 4, PETA = 5, EXA = 6$/;"	e	language:C	enum:__anon8	file:
NON_INETD_MODE	options.h	44;"	d	language:C++
Name	libtomcrypt/crypt.tex	/^\\end{small}$/;"	u	language:Tex
Negation	libtommath/bn.tex	/^\\section{Sign Manipulation}$/;"	u	language:Tex
Notes	libtomcrypt/crypt.tex	/^\\end{figure}$/;"	u	language:Tex
Nr	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int Nr;$/;"	m	language:C++	struct:rijndael_key	access:public
OAEP Decoding	libtomcrypt/crypt.tex	/^rsa\\_exptmod() to encrypt it. $/;"	u	language:Tex
OAEP Encoding	libtomcrypt/crypt.tex	/^the library is concerned we are only dealing with th OAEP padding of the message.$/;"	u	language:Tex
OBJECTS	libtomcrypt/testprof/makefile	/^OBJECTS = base64_test.o cipher_hash_test.o der_tests.o                                   \\$/;"	m	language:Make
OBJS	sftp-server/Makefile	/^OBJS     = sftp-server.o sftp-common.o sftp-server-main.o \\$/;"	m	language:Make
OCB Mode	libtomcrypt/crypt.tex	/^the tag it computed while decrypting the message.  If the tags match then it stores a $1$ in \\textit{res}, otherwise it stores a $0$.$/;"	u	language:Tex
OFB Mode	libtomcrypt/crypt.tex	/^blocks without a delay.  When this mode is first setup it will initially encrypt the initial vector as required.$/;"	b	language:Tex
OFF	libtomcrypt/src/prngs/sober128.c	65;"	d	language:C	file:
OID	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned long OID[16];$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
OID Identifier	libtomcrypt/crypt.tex	/^invocation.$/;"	u	language:Tex
OIDlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned long OIDlen;$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
OPENBSD_AF_INET	sftp-server/openbsd-compat/port-tun.c	199;"	d	language:C	file:
OPENBSD_AF_INET6	sftp-server/openbsd-compat/port-tun.c	200;"	d	language:C	file:
OPT_CAST	libtommath/tommath.h	38;"	d	language:C++
OPT_CAST	libtommath/tommath.h	43;"	d	language:C++
ORIG_P	libtomcrypt/src/ciphers/blowfish.c	/^static const ulong32 ORIG_P[16 + 2] = {$/;"	v	language:C	file:
ORIG_S	libtomcrypt/src/ciphers/blowfish.c	/^static const ulong32 ORIG_S[4][256] = {$/;"	v	language:C	file:
OSSH_ALIGNBYTES	sftp-server/defines.h	455;"	d	language:C++
OSSH_DSA	keyimport.c	/^enum { OSSH_DSA, OSSH_RSA };$/;"	e	language:C	enum:__anon16	file:
OSSH_RSA	keyimport.c	/^enum { OSSH_DSA, OSSH_RSA };$/;"	e	language:C	enum:__anon16	file:
O_NOCTTY	sshpty.c	41;"	d	language:C	file:
O_NONBLOCK	sftp-server/defines.h	94;"	d	language:C++
One-Way Cryptographic Hash Functions	libtomcrypt/crypt.tex	/^\\end{small}$/;"	c	language:Tex
PACKAGE_BUGREPORT	config.h	353;"	d	language:C++
PACKAGE_BUGREPORT	sftp-server/config.h	1267;"	d	language:C++
PACKAGE_NAME	config.h	356;"	d	language:C++
PACKAGE_NAME	sftp-server/config.h	1270;"	d	language:C++
PACKAGE_STRING	config.h	359;"	d	language:C++
PACKAGE_STRING	sftp-server/config.h	1273;"	d	language:C++
PACKAGE_TARNAME	config.h	362;"	d	language:C++
PACKAGE_TARNAME	sftp-server/config.h	1276;"	d	language:C++
PACKAGE_VERSION	config.h	365;"	d	language:C++
PACKAGE_VERSION	sftp-server/config.h	1279;"	d	language:C++
PACKET_H	sftp-server/packet.h	17;"	d	language:C++
PACKET_PADDING_OFF	packet.h	44;"	d	language:C++
PACKET_PAYLOAD_OFF	packet.h	45;"	d	language:C++
PADDING	progressmeter.c	35;"	d	language:C	file:
PAM_TTY_KLUDGE	sftp-server/config.h	1286;"	d	language:C++
PAPPEND	sftp-server/sftp-server.c	152;"	d	language:C	file:
PATH_MAX	sftp-server/defines.h	67;"	d	language:C++
PC	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    unsigned char     PC[16][256][16];$/;"	m	language:C++	struct:__anon45	access:public
PC	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char       PC[16][256][16]  \/* 16 tables of 8x128 *\/$/;"	m	language:C++	struct:__anon51	access:public
PELI_TAB	libtomcrypt/src/mac/pelican/pelican.c	21;"	d	language:C	file:
PETA	sftp-server/openbsd-compat/fmt_scaled.c	/^	NONE = 0, KILO = 1, MEGA = 2, GIGA = 3, TERA = 4, PETA = 5, EXA = 6$/;"	e	language:C	enum:__anon8	file:
PHT	libtomcrypt/src/ciphers/safer/safer.c	94;"	d	language:C	file:
PHT	libtomcrypt/src/ciphers/safer/saferp.c	85;"	d	language:C	file:
PI1	libtomcrypt/src/ciphers/noekeon.c	61;"	d	language:C	file:
PI2	libtomcrypt/src/ciphers/noekeon.c	64;"	d	language:C	file:
PI_SUBST	libtomcrypt/src/hashes/md2.c	/^static const unsigned char PI_SUBST[256] = {$/;"	v	language:C	file:
PKCS  #1 v1.5 Decoding	libtomcrypt/crypt.tex	/^Only encryption padding requires a PRNG.  When performing signature padding the \\textit{prng\\_idx} parameter may be left to zero as it is not checked for validity.$/;"	u	language:Tex
PKCS  #1 v1.5 Encoding	libtomcrypt/crypt.tex	/^documented later on in this chapter.  $/;"	u	language:Tex
PK_PRIVATE	libtomcrypt/src/headers/tomcrypt_pk.h	/^   PK_PRIVATE=1$/;"	e	language:C++	enum:__anon33
PK_PUBLIC	libtomcrypt/src/headers/tomcrypt_pk.h	/^   PK_PUBLIC=0,$/;"	e	language:C++	enum:__anon33
POLLERR	sftp-server/openbsd-compat/bsd-poll.h	44;"	d	language:C++
POLLIN	sftp-server/openbsd-compat/bsd-poll.h	42;"	d	language:C++
POLLOUT	sftp-server/openbsd-compat/bsd-poll.h	43;"	d	language:C++
PRIME_SIZE	libtommath/tommath.h	450;"	d	language:C++
PRIME_SIZE	libtommath/tommath.h	452;"	d	language:C++
PRNGs Provided	libtomcrypt/crypt.tex	/^will return \\textbf{CRYPT\\_OK} if the PRNG was found and removed.  Otherwise, it returns \\textbf{CRYPT\\_ERROR}.$/;"	u	language:Tex
PROGNAME	sysoptions.h	11;"	d	language:C++
PROTOCOL_MAJOR_1	sftp-server/ssh.h	44;"	d	language:C++
PROTOCOL_MAJOR_2	sftp-server/ssh.h	48;"	d	language:C++
PROTOCOL_MINOR_1	sftp-server/ssh.h	45;"	d	language:C++
PROTOCOL_MINOR_2	sftp-server/ssh.h	49;"	d	language:C++
PSS Decoding	libtomcrypt/crypt.tex	/^This function does not actually sign the data it merely pads the hash of a message so that it can be processed by rsa\\_exptmod().$/;"	u	language:Tex
PSS Encoding	libtomcrypt/crypt.tex	/^\\mysection{PKCS \\#1 Digital Signatures}$/;"	u	language:Tex
PUT_32BIT	keyimport.c	40;"	d	language:C	file:
Packet Functions	libtomcrypt/crypt.tex	/^message).$/;"	b	language:Tex
PacketType	packet.h	/^typedef struct PacketType {$/;"	s	language:C++
PacketType::handler	packet.h	/^	void (*handler)();$/;"	m	language:C++	struct:PacketType	access:public
PacketType::type	packet.h	/^	unsigned char type; \/* SSH_MSG_FOO *\/$/;"	m	language:C++	struct:PacketType	access:public
Plaintext Processing	libtomcrypt/crypt.tex	/^This adds the additional authentication data \\textit{adata} of length \\textit{adatalen} to the GCM state \\textit{gcm}.$/;"	b	language:Tex
Polynomial Basis Operations	libtommath/bn.tex	/^value to signal that the remainder is not desired.$/;"	u	language:Tex
Prng_state	libtomcrypt/src/headers/tomcrypt_prng.h	/^typedef union Prng_state {$/;"	u	language:C++
Prng_state::dummy	libtomcrypt/src/headers/tomcrypt_prng.h	/^    char dummy[1];$/;"	m	language:C++	union:Prng_state	access:public
Prng_state::fortuna	libtomcrypt/src/headers/tomcrypt_prng.h	/^    struct fortuna_prng   fortuna;$/;"	m	language:C++	union:Prng_state	typeref:struct:Prng_state::fortuna_prng	access:public
Prng_state::rc4	libtomcrypt/src/headers/tomcrypt_prng.h	/^    struct rc4_prng       rc4;$/;"	m	language:C++	union:Prng_state	typeref:struct:Prng_state::rc4_prng	access:public
Prng_state::sober128	libtomcrypt/src/headers/tomcrypt_prng.h	/^    struct sober128_prng  sober128;$/;"	m	language:C++	union:Prng_state	typeref:struct:Prng_state::sober128_prng	access:public
Prng_state::yarrow	libtomcrypt/src/headers/tomcrypt_prng.h	/^    struct yarrow_prng    yarrow;$/;"	m	language:C++	union:Prng_state	typeref:struct:Prng_state::yarrow_prng	access:public
Process	libtomcrypt/crypt.tex	/^The init function initializes the hash and prepares it to process message bytes.$/;"	u	language:Tex
PubKeyOptions	auth.h	/^struct PubKeyOptions {$/;"	s	language:C++
PubKeyOptions::forced_command	auth.h	/^	unsigned char * forced_command;$/;"	m	language:C++	struct:PubKeyOptions	access:public
PubKeyOptions::no_agent_forwarding_flag	auth.h	/^	int no_agent_forwarding_flag;$/;"	m	language:C++	struct:PubKeyOptions	access:public
PubKeyOptions::no_port_forwarding_flag	auth.h	/^	int no_port_forwarding_flag;$/;"	m	language:C++	struct:PubKeyOptions	access:public
PubKeyOptions::no_pty_flag	auth.h	/^	int no_pty_flag;$/;"	m	language:C++	struct:PubKeyOptions	access:public
PubKeyOptions::no_x11_forwarding_flag	auth.h	/^	int no_x11_forwarding_flag;$/;"	m	language:C++	struct:PubKeyOptions	access:public
PubKeyOptions::original_command	auth.h	/^	unsigned char * original_command;$/;"	m	language:C++	struct:PubKeyOptions	access:public
QSIZE	gendss.c	34;"	d	language:C	file:
QUOTE	sftp-server/misc.c	156;"	d	language:C	file:
Queue	queue.h	/^struct Queue {$/;"	s	language:C++
Queue::count	queue.h	/^	unsigned int count; \/* safety value *\/$/;"	m	language:C++	struct:Queue	access:public
Queue::head	queue.h	/^	struct Link* head;$/;"	m	language:C++	struct:Queue	typeref:struct:Queue::Link	access:public
Queue::tail	queue.h	/^	struct Link* tail;$/;"	m	language:C++	struct:Queue	typeref:struct:Queue::Link	access:public
R	libtomcrypt/notes/etc/whirlgen.c	/^unsigned R[16] =  { 7, 0xc, 0xb, 0xd, 0xe, 4, 9, 0xf, 6, 3, 8, 0xa, 2, 5, 1, 0 };$/;"	v	language:C
R	libtomcrypt/src/ciphers/khazad.c	34;"	d	language:C	file:
R	libtomcrypt/src/hashes/sha2/sha256.c	61;"	d	language:C	file:
R	libtomcrypt/src/hashes/sha2/sha512.c	86;"	d	language:C	file:
R	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int R; $/;"	m	language:C++	struct:anubis_key	access:public
R	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     R[MAXBLOCKSIZE],         \/* R value *\/$/;"	m	language:C++	struct:__anon50	access:public
R	libtomcrypt/src/headers/tomcrypt_prng.h	/^    ulong32      R[17],          \/* Working storage for the shift register *\/$/;"	m	language:C++	struct:sober128_prng	access:public
RADIX	libtommath/mtest/mpi-types.h	15;"	d	language:C++
RANLIB	libtomcrypt/testprof/makefile	/^   RANLIB=ranlib$/;"	m	language:Make
RC	libtomcrypt/src/ciphers/noekeon.c	/^static const ulong32 RC[] = {$/;"	v	language:C	file:
RC4	libtomcrypt/crypt.tex	/^recover from that problem until new entropy is added to the pool and put to use through the ready() function.$/;"	b	language:Tex
RECV_MAX_PACKET_LEN	sysoptions.h	105;"	d	language:C++
RECV_MAX_PAYLOAD_LEN	options.h	278;"	d	language:C++
RECV_WINDOWEXTEND	sysoptions.h	111;"	d	language:C++
REGISTRY_SIZE	sftp-server/openbsd-compat/port-aix.h	84;"	d	language:C++
RETSIGTYPE	config.h	368;"	d	language:C++
RIJNDAEL	libtomcrypt/src/headers/tomcrypt_custom.h	98;"	d	language:C++
RND	libtomcrypt/src/ciphers/rc6.c	139;"	d	language:C	file:
RND	libtomcrypt/src/ciphers/rc6.c	153;"	d	language:C	file:
RND	libtomcrypt/src/ciphers/rc6.c	193;"	d	language:C	file:
RND	libtomcrypt/src/ciphers/rc6.c	208;"	d	language:C	file:
RND	libtomcrypt/src/hashes/sha2/sha256.c	97;"	d	language:C	file:
ROL	libtomcrypt/src/headers/tomcrypt_macros.h	/^static inline unsigned ROL(unsigned word, int i)$/;"	f	language:C++	signature:(unsigned word, int i)
ROL	libtomcrypt/src/headers/tomcrypt_macros.h	241;"	d	language:C++
ROL	libtomcrypt/src/headers/tomcrypt_macros.h	335;"	d	language:C++
ROL16	libtomcrypt/src/ciphers/kasumi.c	24;"	d	language:C	file:
ROL64	libtomcrypt/src/headers/tomcrypt_macros.h	/^static inline unsigned long ROL64(unsigned long word, int i)$/;"	f	language:C++	signature:(unsigned long word, int i)
ROL64	libtomcrypt/src/headers/tomcrypt_macros.h	389;"	d	language:C++
ROL64c	libtomcrypt/src/headers/tomcrypt_macros.h	/^static inline unsigned long ROL64c(unsigned long word, const int i)$/;"	f	language:C++	signature:(unsigned long word, const int i)
ROL64c	libtomcrypt/src/headers/tomcrypt_macros.h	382;"	d	language:C++
ROL64c	libtomcrypt/src/headers/tomcrypt_macros.h	397;"	d	language:C++
ROL8	libtomcrypt/src/ciphers/safer/safer.c	90;"	d	language:C	file:
ROLc	libtomcrypt/src/headers/tomcrypt_macros.h	/^static inline unsigned ROLc(unsigned word, const int i)$/;"	f	language:C++	signature:(unsigned word, const int i)
ROLc	libtomcrypt/src/headers/tomcrypt_macros.h	243;"	d	language:C++
ROLc	libtomcrypt/src/headers/tomcrypt_macros.h	283;"	d	language:C++
ROLc	libtomcrypt/src/headers/tomcrypt_macros.h	326;"	d	language:C++
ROLc	libtomcrypt/src/headers/tomcrypt_macros.h	337;"	d	language:C++
ROR	libtomcrypt/src/headers/tomcrypt_macros.h	/^static inline unsigned ROR(unsigned word, int i)$/;"	f	language:C++	signature:(unsigned word, int i)
ROR	libtomcrypt/src/headers/tomcrypt_macros.h	240;"	d	language:C++
ROR	libtomcrypt/src/headers/tomcrypt_macros.h	336;"	d	language:C++
ROR64	libtomcrypt/src/headers/tomcrypt_macros.h	/^static inline unsigned long ROR64(unsigned long word, int i)$/;"	f	language:C++	signature:(unsigned long word, int i)
ROR64	libtomcrypt/src/headers/tomcrypt_macros.h	393;"	d	language:C++
ROR64c	libtomcrypt/src/headers/tomcrypt_macros.h	/^static inline unsigned long ROR64c(unsigned long word, const int i)$/;"	f	language:C++	signature:(unsigned long word, const int i)
ROR64c	libtomcrypt/src/headers/tomcrypt_macros.h	383;"	d	language:C++
ROR64c	libtomcrypt/src/headers/tomcrypt_macros.h	401;"	d	language:C++
RORc	libtomcrypt/src/headers/tomcrypt_macros.h	/^static inline unsigned RORc(unsigned word, const int i)$/;"	f	language:C++	signature:(unsigned word, const int i)
RORc	libtomcrypt/src/headers/tomcrypt_macros.h	242;"	d	language:C++
RORc	libtomcrypt/src/headers/tomcrypt_macros.h	284;"	d	language:C++
RORc	libtomcrypt/src/headers/tomcrypt_macros.h	327;"	d	language:C++
RORc	libtomcrypt/src/headers/tomcrypt_macros.h	338;"	d	language:C++
ROTATE_LEFT	libtomcrypt/src/hashes/md4.c	57;"	d	language:C	file:
ROUND	libtomcrypt/notes/etc/saferp_optimizer.c	20;"	d	language:C	file:
ROUND	libtomcrypt/src/ciphers/noekeon.c	128;"	d	language:C	file:
ROUND	libtomcrypt/src/ciphers/noekeon.c	139;"	d	language:C	file:
ROUND	libtomcrypt/src/ciphers/noekeon.c	183;"	d	language:C	file:
ROUND	libtomcrypt/src/ciphers/noekeon.c	194;"	d	language:C	file:
ROUND	libtomcrypt/src/ciphers/safer/saferp.c	159;"	d	language:C	file:
ROUND	libtomcrypt/src/ciphers/safer/saferp.c	160;"	d	language:C	file:
ROUND	libtomcrypt/src/ciphers/safer/saferp.c	47;"	d	language:C	file:
RPP_ECHO_OFF	sftp-server/openbsd-compat/readpassphrase.h	32;"	d	language:C++
RPP_ECHO_ON	sftp-server/openbsd-compat/readpassphrase.h	33;"	d	language:C++
RPP_FORCELOWER	sftp-server/openbsd-compat/readpassphrase.h	35;"	d	language:C++
RPP_FORCEUPPER	sftp-server/openbsd-compat/readpassphrase.h	36;"	d	language:C++
RPP_REQUIRE_TTY	sftp-server/openbsd-compat/readpassphrase.h	34;"	d	language:C++
RPP_SEVENBIT	sftp-server/openbsd-compat/readpassphrase.h	37;"	d	language:C++
RPP_STDIN	sftp-server/openbsd-compat/readpassphrase.h	38;"	d	language:C++
RP_ALLOW_EOF	sftp-server/misc.h	87;"	d	language:C++
RP_ALLOW_STDIN	sftp-server/misc.h	86;"	d	language:C++
RP_ECHO	sftp-server/misc.h	85;"	d	language:C++
RP_USE_ASKPASS	sftp-server/misc.h	88;"	d	language:C++
RRSET_VALIDATED	sftp-server/openbsd-compat/getrrsetbyname.h	73;"	d	language:C++
RS	libtomcrypt/src/ciphers/twofish/twofish.c	/^static const unsigned char RS[4][8] = {$/;"	v	language:C	file:
RSA Key Export	libtomcrypt/crypt.tex	/^RSAPublicKey and RSAPrivateKey.  Additionally, the OpenSSL key format is supported by the import function only.$/;"	u	language:Tex
RSA Key Import	libtomcrypt/crypt.tex	/^set to \\textbf{PK\\_PRIVATE} the export format will be RSAPrivateKey and otherwise it will be RSAPublicKey.$/;"	u	language:Tex
RSA Public Key Cryptography	libtomcrypt/crypt.tex	/^\\end{small}$/;"	c	language:Tex
RSA_BLINDING	options.h	132;"	d	language:C++
RSA_E	genrsa.c	32;"	d	language:C	file:
RSA_MSGSIZE	libtomcrypt/testprof/rsa_test.c	5;"	d	language:C	file:
RSA_PRIV_FILENAME	options.h	31;"	d	language:C++
RSA_SIGNATURE_SIZE	rsa.h	33;"	d	language:C++
RSA_SIZE	dropbearkey.c	57;"	d	language:C	file:
RS_POLY	libtomcrypt/src/ciphers/twofish/twofish.c	43;"	d	language:C	file:
RULE_A	libtomcrypt/src/ciphers/skipjack.c	90;"	d	language:C	file:
RULE_A1	libtomcrypt/src/ciphers/skipjack.c	102;"	d	language:C	file:
RULE_B	libtomcrypt/src/ciphers/skipjack.c	96;"	d	language:C	file:
RULE_B1	libtomcrypt/src/ciphers/skipjack.c	107;"	d	language:C	file:
Read	libtomcrypt/crypt.tex	/^on the specific PRNG used.$/;"	u	language:Tex
Ready	libtomcrypt/crypt.tex	/^Add entropy to the PRNG state.  The exact behaviour of this function depends on the particulars of the PRNG.$/;"	u	language:Tex
Reducing Memory Usage	libtommath/bn.tex	/^\\section{Maintenance Functions}$/;"	u	language:Tex
Remarks	libtomcrypt/crypt.tex	/^This will return \\textbf{CRYPT\\_OK} if PRNG is operating properly.$/;"	u	language:Tex
Restricted Dimminished Radix	libtommath/bn.tex	/^For more details consider examining the file \\textit{bn\\_mp\\_exptmod\\_fast.c}.$/;"	s	language:Tex
Root Finding	libtommath/bn.tex	/^and the other two algorithms.$/;"	s	language:Tex
Rorder	libtomcrypt/src/hashes/md5.c	/^static const unsigned char Rorder[64] = {$/;"	v	language:C	file:
Rsa_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^typedef struct Rsa_key {$/;"	s	language:C++
Rsa_key::N	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *N; $/;"	m	language:C++	struct:Rsa_key	access:public
Rsa_key::d	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *d; $/;"	m	language:C++	struct:Rsa_key	access:public
Rsa_key::dP	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *dP; $/;"	m	language:C++	struct:Rsa_key	access:public
Rsa_key::dQ	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *dQ;$/;"	m	language:C++	struct:Rsa_key	access:public
Rsa_key::e	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *e; $/;"	m	language:C++	struct:Rsa_key	access:public
Rsa_key::p	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *p; $/;"	m	language:C++	struct:Rsa_key	access:public
Rsa_key::q	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *q; $/;"	m	language:C++	struct:Rsa_key	access:public
Rsa_key::qP	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *qP; $/;"	m	language:C++	struct:Rsa_key	access:public
Rsa_key::type	libtomcrypt/src/headers/tomcrypt_pk.h	/^    int type;$/;"	m	language:C++	struct:Rsa_key	access:public
S	libtomcrypt/src/hashes/sha2/sha256.c	60;"	d	language:C	file:
S	libtomcrypt/src/hashes/sha2/sha512.c	85;"	d	language:C	file:
S	libtomcrypt/src/headers/tomcrypt_cipher.h	/^      ulong32 S[4][256], K[40];$/;"	m	language:C++	struct:twofish_key	access:public
S	libtomcrypt/src/headers/tomcrypt_cipher.h	/^      unsigned char S[32], start;$/;"	m	language:C++	struct:twofish_key	access:public
S	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 S[4][256];$/;"	m	language:C++	struct:blowfish_key	access:public
S1	libtomcrypt/src/ciphers/cast5.c	/^static const ulong32 S1[256] = {$/;"	v	language:C	file:
S1	libtomcrypt/src/ciphers/twofish/twofish.c	280;"	d	language:C	file:
S11	libtomcrypt/src/hashes/md4.c	38;"	d	language:C	file:
S12	libtomcrypt/src/hashes/md4.c	39;"	d	language:C	file:
S13	libtomcrypt/src/hashes/md4.c	40;"	d	language:C	file:
S14	libtomcrypt/src/hashes/md4.c	41;"	d	language:C	file:
S2	libtomcrypt/src/ciphers/cast5.c	/^static const ulong32 S2[256] = {$/;"	v	language:C	file:
S2	libtomcrypt/src/ciphers/twofish/twofish.c	281;"	d	language:C	file:
S21	libtomcrypt/src/hashes/md4.c	42;"	d	language:C	file:
S22	libtomcrypt/src/hashes/md4.c	43;"	d	language:C	file:
S23	libtomcrypt/src/hashes/md4.c	44;"	d	language:C	file:
S24	libtomcrypt/src/hashes/md4.c	45;"	d	language:C	file:
S3	libtomcrypt/src/ciphers/cast5.c	/^static const ulong32 S3[256] = {$/;"	v	language:C	file:
S3	libtomcrypt/src/ciphers/twofish/twofish.c	282;"	d	language:C	file:
S31	libtomcrypt/src/hashes/md4.c	46;"	d	language:C	file:
S32	libtomcrypt/src/hashes/md4.c	47;"	d	language:C	file:
S33	libtomcrypt/src/hashes/md4.c	48;"	d	language:C	file:
S34	libtomcrypt/src/hashes/md4.c	49;"	d	language:C	file:
S4	libtomcrypt/src/ciphers/cast5.c	/^static const ulong32 S4[256] = {$/;"	v	language:C	file:
S4	libtomcrypt/src/ciphers/twofish/twofish.c	283;"	d	language:C	file:
S5	libtomcrypt/src/ciphers/cast5.c	/^static const ulong32 S5[256] = {$/;"	v	language:C	file:
S6	libtomcrypt/src/ciphers/cast5.c	/^static const ulong32 S6[256] = {$/;"	v	language:C	file:
S7	libtomcrypt/src/ciphers/cast5.c	/^static const ulong32 S7[256] = {$/;"	v	language:C	file:
S8	libtomcrypt/src/ciphers/cast5.c	/^static const ulong32 S8[256] = {$/;"	v	language:C	file:
SAFER_BLOCK_LEN	libtomcrypt/src/headers/tomcrypt_cipher.h	79;"	d	language:C++
SAFER_K128_DEFAULT_NOF_ROUNDS	libtomcrypt/src/headers/tomcrypt_cipher.h	75;"	d	language:C++
SAFER_K64_DEFAULT_NOF_ROUNDS	libtomcrypt/src/headers/tomcrypt_cipher.h	74;"	d	language:C++
SAFER_KEY_LEN	libtomcrypt/src/headers/tomcrypt_cipher.h	80;"	d	language:C++
SAFER_MAX_NOF_ROUNDS	libtomcrypt/src/headers/tomcrypt_cipher.h	78;"	d	language:C++
SAFER_SK128_DEFAULT_NOF_ROUNDS	libtomcrypt/src/headers/tomcrypt_cipher.h	77;"	d	language:C++
SAFER_SK64_DEFAULT_NOF_ROUNDS	libtomcrypt/src/headers/tomcrypt_cipher.h	76;"	d	language:C++
SB0	libtomcrypt/src/hashes/whirl/whirltab.c	74;"	d	language:C	file:
SB0	libtomcrypt/src/hashes/whirl/whirltab.c	85;"	d	language:C	file:
SB1	libtomcrypt/src/hashes/whirl/whirltab.c	75;"	d	language:C	file:
SB1	libtomcrypt/src/hashes/whirl/whirltab.c	86;"	d	language:C	file:
SB2	libtomcrypt/src/hashes/whirl/whirltab.c	76;"	d	language:C	file:
SB2	libtomcrypt/src/hashes/whirl/whirltab.c	87;"	d	language:C	file:
SB3	libtomcrypt/src/hashes/whirl/whirltab.c	77;"	d	language:C	file:
SB3	libtomcrypt/src/hashes/whirl/whirltab.c	88;"	d	language:C	file:
SB4	libtomcrypt/src/hashes/whirl/whirltab.c	78;"	d	language:C	file:
SB4	libtomcrypt/src/hashes/whirl/whirltab.c	89;"	d	language:C	file:
SB5	libtomcrypt/src/hashes/whirl/whirltab.c	79;"	d	language:C	file:
SB5	libtomcrypt/src/hashes/whirl/whirltab.c	90;"	d	language:C	file:
SB6	libtomcrypt/src/hashes/whirl/whirltab.c	80;"	d	language:C	file:
SB6	libtomcrypt/src/hashes/whirl/whirltab.c	91;"	d	language:C	file:
SB7	libtomcrypt/src/hashes/whirl/whirltab.c	81;"	d	language:C	file:
SB7	libtomcrypt/src/hashes/whirl/whirltab.c	92;"	d	language:C	file:
SBOX	libtomcrypt/src/ciphers/twofish/twofish_tab.c	/^static const unsigned char SBOX[2][256] = {$/;"	v	language:C	file:
SCALE_LENGTH	sftp-server/openbsd-compat/fmt_scaled.c	68;"	d	language:C	file:
SCREWUP	scp.c	787;"	d	language:C	file:
SCRYPT	libtomcrypt/src/headers/tomcrypt.h	20;"	d	language:C++
SECONDS	sftp-server/misc.c	272;"	d	language:C	file:
SELECT_TYPE_ARG1	config.h	371;"	d	language:C++
SELECT_TYPE_ARG234	config.h	374;"	d	language:C++
SELECT_TYPE_ARG5	config.h	377;"	d	language:C++
SEP	sftp-server/compat.c	179;"	d	language:C	file:
SEP	sftp-server/match.c	239;"	d	language:C	file:
SEQUENCE Decoding	libtomcrypt/crypt.tex	/^the \\textit{data} pointer is simply a pointer to another \\textbf{ltc\\_asn1\\_list}.$/;"	b	language:Tex
SEQUENCE Encoding	libtomcrypt/crypt.tex	/^The SEQUENCE data type is a collection of other ASN.1 data types encapsulated with a small header which is a useful way of sending multiple data types in one packet.$/;"	b	language:Tex
SEQUENCE Length	libtomcrypt/crypt.tex	/^\\end{enumerate}$/;"	b	language:Tex
SEQUENCE Multiple Argument Lists	libtomcrypt/crypt.tex	/^This will get the encoding size for the given \\textit{list} of length \\textit{inlen} and store it in \\textit{outlen}.  $/;"	b	language:Tex
SEQUENCE Type	libtomcrypt/crypt.tex	/^\\end{figure}$/;"	u	language:Tex
SERVICE_AUTH_ACCEPT_RCVD	session.h	/^	SERVICE_AUTH_ACCEPT_RCVD,$/;"	e	language:C++	enum:__anon14
SERVICE_AUTH_REQ_SENT	session.h	/^	SERVICE_AUTH_REQ_SENT,$/;"	e	language:C++	enum:__anon14
SERVICE_CONN_ACCEPT_RCVD	session.h	/^	SERVICE_CONN_ACCEPT_RCVD,$/;"	e	language:C++	enum:__anon14
SERVICE_CONN_REQ_SENT	session.h	/^	SERVICE_CONN_REQ_SENT,$/;"	e	language:C++	enum:__anon14
SESSION_RUNNING	session.h	/^	SESSION_RUNNING$/;"	e	language:C++	enum:__anon14
SET Decoding	libtomcrypt/crypt.tex	/^This function will \\textbf{NOT} recognize \\textit{DEFAULT} objects, and it is the responsibility of the caller to remove them as required.$/;"	b	language:Tex
SET Encoding	libtomcrypt/crypt.tex	/^a \\textbf{single} ASN.1 object sorted in ascending order by the DER their respective encodings.$/;"	b	language:Tex
SET Length	libtomcrypt/crypt.tex	/^It handles the fact that SETs are not strictly ordered and will make multiple passes (as required) through the list to decode all the objects.  $/;"	b	language:Tex
SET OF Decoding	libtomcrypt/crypt.tex	/^means you need at least enough memory to keep an additional copy of the output on the heap.  $/;"	b	language:Tex
SET OF Encoding	libtomcrypt/crypt.tex	/^The length of a SET can be determined by calling der\\_length\\_sequence() since they have the same encoding length.$/;"	b	language:Tex
SET OF Length	libtomcrypt/crypt.tex	/^Since the decoding of a \\textit{SET OF} object is unambiguous it can be decoded with der\\_decode\\_sequence().  $/;"	b	language:Tex
SET and SET OF	libtomcrypt/crypt.tex	/^on the size parameters.  This forces the compiler to pass the numbers as the required \\textbf{unsigned long} type that the function expects.$/;"	u	language:Tex
SETUP	libtomcrypt/src/ciphers/aes/aes.c	/^int SETUP(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
SETUP	libtomcrypt/src/ciphers/aes/aes.c	39;"	d	language:C	file:
SETUP	libtomcrypt/src/ciphers/aes/aes.c	68;"	d	language:C	file:
SFTPSERVER_PATH	options.h	253;"	d	language:C++
SFTP_DIRENT	sftp-server/sftp-client.h	/^struct SFTP_DIRENT {$/;"	s	language:C++
SFTP_DIRENT	sftp-server/sftp-client.h	/^typedef struct SFTP_DIRENT SFTP_DIRENT;$/;"	t	language:C++	typeref:struct:SFTP_DIRENT
SFTP_DIRENT::a	sftp-server/sftp-client.h	/^	Attrib a;$/;"	m	language:C++	struct:SFTP_DIRENT	access:public
SFTP_DIRENT::filename	sftp-server/sftp-client.h	/^	char *filename;$/;"	m	language:C++	struct:SFTP_DIRENT	access:public
SFTP_DIRENT::longname	sftp-server/sftp-client.h	/^	char *longname;$/;"	m	language:C++	struct:SFTP_DIRENT	access:public
SFTP_MAX_MSG_LENGTH	sftp-server/sftp-common.h	29;"	d	language:C++
SHA1	libtomcrypt/src/headers/tomcrypt_custom.h	125;"	d	language:C++
SHA1_HASH_SIZE	sysoptions.h	80;"	d	language:C++
SHA256_BLOCK_LENGTH	sftp-server/openbsd-compat/sha2.h	50;"	d	language:C++
SHA256_CTX	sftp-server/openbsd-compat/sha2.h	/^} SHA256_CTX;$/;"	t	language:C++	typeref:struct:_SHA256_CTX
SHA256_DIGEST_LENGTH	sftp-server/openbsd-compat/sha2.h	51;"	d	language:C++
SHA256_DIGEST_STRING_LENGTH	sftp-server/openbsd-compat/sha2.h	52;"	d	language:C++
SHA256_Data	sftp-server/openbsd-compat/sha2.h	/^char *SHA256_Data(const u_int8_t *, size_t, char *)$/;"	p	language:C++	signature:(const u_int8_t *, size_t, char *)
SHA256_End	sftp-server/openbsd-compat/sha2.h	/^char *SHA256_End(SHA256_CTX *, char *)$/;"	p	language:C++	signature:(SHA256_CTX *, char *)
SHA256_File	sftp-server/openbsd-compat/sha2.h	/^char *SHA256_File(const char *, char *)$/;"	p	language:C++	signature:(const char *, char *)
SHA256_FileChunk	sftp-server/openbsd-compat/sha2.h	/^char *SHA256_FileChunk(const char *, char *, off_t, off_t)$/;"	p	language:C++	signature:(const char *, char *, off_t, off_t)
SHA256_Final	sftp-server/openbsd-compat/sha2.h	/^void SHA256_Final(u_int8_t [SHA256_DIGEST_LENGTH], SHA256_CTX *)$/;"	p	language:C++	signature:(u_int8_t [SHA256_DIGEST_LENGTH], SHA256_CTX *)
SHA256_Init	sftp-server/openbsd-compat/sha2.h	/^void SHA256_Init(SHA256_CTX *);$/;"	p	language:C++	signature:(SHA256_CTX *)
SHA256_Pad	sftp-server/openbsd-compat/sha2.h	/^void SHA256_Pad(SHA256_CTX *);$/;"	p	language:C++	signature:(SHA256_CTX *)
SHA256_Transform	sftp-server/openbsd-compat/sha2.h	/^void SHA256_Transform(u_int32_t state[8], const u_int8_t [SHA256_BLOCK_LENGTH]);$/;"	p	language:C++	signature:(u_int32_t state[8], const u_int8_t [SHA256_BLOCK_LENGTH])
SHA256_Update	sftp-server/openbsd-compat/sha2.h	/^void SHA256_Update(SHA256_CTX *, const u_int8_t *, size_t)$/;"	p	language:C++	signature:(SHA256_CTX *, const u_int8_t *, size_t)
SHA384_BLOCK_LENGTH	sftp-server/openbsd-compat/sha2.h	53;"	d	language:C++
SHA384_DIGEST_LENGTH	sftp-server/openbsd-compat/sha2.h	54;"	d	language:C++
SHA384_DIGEST_STRING_LENGTH	sftp-server/openbsd-compat/sha2.h	55;"	d	language:C++
SHA512	libtomcrypt/src/headers/tomcrypt_custom.h	122;"	d	language:C++
SHA512_BLOCK_LENGTH	sftp-server/openbsd-compat/sha2.h	56;"	d	language:C++
SHA512_CTX	sftp-server/openbsd-compat/sha2.h	/^} SHA512_CTX;$/;"	t	language:C++	typeref:struct:_SHA512_CTX
SHA512_DIGEST_LENGTH	sftp-server/openbsd-compat/sha2.h	57;"	d	language:C++
SHA512_DIGEST_STRING_LENGTH	sftp-server/openbsd-compat/sha2.h	58;"	d	language:C++
SHA512_Data	sftp-server/openbsd-compat/sha2.h	/^char *SHA512_Data(const u_int8_t *, size_t, char *)$/;"	p	language:C++	signature:(const u_int8_t *, size_t, char *)
SHA512_End	sftp-server/openbsd-compat/sha2.h	/^char *SHA512_End(SHA512_CTX *, char *)$/;"	p	language:C++	signature:(SHA512_CTX *, char *)
SHA512_File	sftp-server/openbsd-compat/sha2.h	/^char *SHA512_File(const char *, char *)$/;"	p	language:C++	signature:(const char *, char *)
SHA512_FileChunk	sftp-server/openbsd-compat/sha2.h	/^char *SHA512_FileChunk(const char *, char *, off_t, off_t)$/;"	p	language:C++	signature:(const char *, char *, off_t, off_t)
SHA512_Final	sftp-server/openbsd-compat/sha2.h	/^void SHA512_Final(u_int8_t [SHA512_DIGEST_LENGTH], SHA512_CTX *)$/;"	p	language:C++	signature:(u_int8_t [SHA512_DIGEST_LENGTH], SHA512_CTX *)
SHA512_HASH_SIZE	sysoptions.h	82;"	d	language:C++
SHA512_Init	sftp-server/openbsd-compat/sha2.h	/^void SHA512_Init(SHA512_CTX *);$/;"	p	language:C++	signature:(SHA512_CTX *)
SHA512_Pad	sftp-server/openbsd-compat/sha2.h	/^void SHA512_Pad(SHA512_CTX *);$/;"	p	language:C++	signature:(SHA512_CTX *)
SHA512_Transform	sftp-server/openbsd-compat/sha2.h	/^void SHA512_Transform(u_int64_t state[8], const u_int8_t [SHA512_BLOCK_LENGTH]);$/;"	p	language:C++	signature:(u_int64_t state[8], const u_int8_t [SHA512_BLOCK_LENGTH])
SHA512_Update	sftp-server/openbsd-compat/sha2.h	/^void SHA512_Update(SHA512_CTX *, const u_int8_t *, size_t)$/;"	p	language:C++	signature:(SHA512_CTX *, const u_int8_t *, size_t)
SHUF	libtomcrypt/notes/etc/saferp_optimizer.c	7;"	d	language:C	file:
SHUF	libtomcrypt/src/ciphers/safer/saferp.c	107;"	d	language:C	file:
SHUT_RD	sftp-server/defines.h	/^  SHUT_RD = 0,		\/* No more receptions.  *\/$/;"	e	language:C++	enum:__anon10
SHUT_RD	sftp-server/defines.h	40;"	d	language:C++
SHUT_RDWR	sftp-server/defines.h	/^  SHUT_RDWR			\/* No more receptions or transmissions.  *\/$/;"	e	language:C++	enum:__anon10
SHUT_RDWR	sftp-server/defines.h	42;"	d	language:C++
SHUT_WR	sftp-server/defines.h	/^  SHUT_WR,			\/* No more transmissions.  *\/$/;"	e	language:C++	enum:__anon10
SHUT_WR	sftp-server/defines.h	41;"	d	language:C++
SIGN	libtommath/mtest/mpi.h	56;"	d	language:C++
SIGN	libtommath/tommath.h	190;"	d	language:C++
SIGNKEY_SOURCE_AGENT	signkey.h	/^	SIGNKEY_SOURCE_AGENT,$/;"	e	language:C++	enum:__anon15
SIGNKEY_SOURCE_INVALID	signkey.h	/^	SIGNKEY_SOURCE_INVALID,	$/;"	e	language:C++	enum:__anon15
SIGNKEY_SOURCE_RAW_FILE	signkey.h	/^	SIGNKEY_SOURCE_RAW_FILE,$/;"	e	language:C++	enum:__anon15
SIGN_key	signkey.h	/^struct SIGN_key {$/;"	s	language:C++
SIGN_key::dsskey	signkey.h	/^	dropbear_dss_key * dsskey;$/;"	m	language:C++	struct:SIGN_key	access:public
SIGN_key::filename	signkey.h	/^	char *filename;$/;"	m	language:C++	struct:SIGN_key	access:public
SIGN_key::rsakey	signkey.h	/^	dropbear_rsa_key * rsakey;$/;"	m	language:C++	struct:SIGN_key	access:public
SIGN_key::source	signkey.h	/^	signkey_source source;$/;"	m	language:C++	struct:SIGN_key	access:public
SIGN_key::type	signkey.h	/^	int type; \/* The type of key (dss or rsa) *\/$/;"	m	language:C++	struct:SIGN_key	access:public
SIG_BLOCK	sftp-server/openbsd-compat/sigact.h	50;"	d	language:C++
SIG_BLOCK	sftp-server/openbsd-compat/sigact.h	51;"	d	language:C++
SIG_SETMASK	sftp-server/openbsd-compat/sigact.h	56;"	d	language:C++
SIG_SETMASK	sftp-server/openbsd-compat/sigact.h	57;"	d	language:C++
SIG_UNBLOCK	sftp-server/openbsd-compat/sigact.h	53;"	d	language:C++
SIG_UNBLOCK	sftp-server/openbsd-compat/sigact.h	54;"	d	language:C++
SIMPLEQ_EMPTY	sftp-server/openbsd-compat/sys-queue.h	349;"	d	language:C++
SIMPLEQ_EMPTY	sftp-server/openbsd-compat/sys-queue.h	78;"	d	language:C++
SIMPLEQ_END	sftp-server/openbsd-compat/sys-queue.h	348;"	d	language:C++
SIMPLEQ_END	sftp-server/openbsd-compat/sys-queue.h	77;"	d	language:C++
SIMPLEQ_ENTRY	sftp-server/openbsd-compat/sys-queue.h	339;"	d	language:C++
SIMPLEQ_ENTRY	sftp-server/openbsd-compat/sys-queue.h	75;"	d	language:C++
SIMPLEQ_FIRST	sftp-server/openbsd-compat/sys-queue.h	347;"	d	language:C++
SIMPLEQ_FIRST	sftp-server/openbsd-compat/sys-queue.h	76;"	d	language:C++
SIMPLEQ_FOREACH	sftp-server/openbsd-compat/sys-queue.h	352;"	d	language:C++
SIMPLEQ_FOREACH	sftp-server/openbsd-compat/sys-queue.h	80;"	d	language:C++
SIMPLEQ_HEAD	sftp-server/openbsd-compat/sys-queue.h	330;"	d	language:C++
SIMPLEQ_HEAD	sftp-server/openbsd-compat/sys-queue.h	73;"	d	language:C++
SIMPLEQ_HEAD_INITIALIZER	sftp-server/openbsd-compat/sys-queue.h	336;"	d	language:C++
SIMPLEQ_HEAD_INITIALIZER	sftp-server/openbsd-compat/sys-queue.h	74;"	d	language:C++
SIMPLEQ_INIT	sftp-server/openbsd-compat/sys-queue.h	360;"	d	language:C++
SIMPLEQ_INIT	sftp-server/openbsd-compat/sys-queue.h	81;"	d	language:C++
SIMPLEQ_INSERT_AFTER	sftp-server/openbsd-compat/sys-queue.h	377;"	d	language:C++
SIMPLEQ_INSERT_AFTER	sftp-server/openbsd-compat/sys-queue.h	84;"	d	language:C++
SIMPLEQ_INSERT_HEAD	sftp-server/openbsd-compat/sys-queue.h	365;"	d	language:C++
SIMPLEQ_INSERT_HEAD	sftp-server/openbsd-compat/sys-queue.h	82;"	d	language:C++
SIMPLEQ_INSERT_TAIL	sftp-server/openbsd-compat/sys-queue.h	371;"	d	language:C++
SIMPLEQ_INSERT_TAIL	sftp-server/openbsd-compat/sys-queue.h	83;"	d	language:C++
SIMPLEQ_NEXT	sftp-server/openbsd-compat/sys-queue.h	350;"	d	language:C++
SIMPLEQ_NEXT	sftp-server/openbsd-compat/sys-queue.h	79;"	d	language:C++
SIMPLEQ_REMOVE_HEAD	sftp-server/openbsd-compat/sys-queue.h	383;"	d	language:C++
SIMPLEQ_REMOVE_HEAD	sftp-server/openbsd-compat/sys-queue.h	85;"	d	language:C++
SIZEOF_CHAR	sftp-server/config.h	1304;"	d	language:C++
SIZEOF_INT	sftp-server/config.h	1307;"	d	language:C++
SIZEOF_LONG_INT	sftp-server/config.h	1310;"	d	language:C++
SIZEOF_LONG_LONG_INT	sftp-server/config.h	1313;"	d	language:C++
SIZEOF_SHORT_INT	sftp-server/config.h	1316;"	d	language:C++
SIZE_T_MAX	sftp-server/defines.h	250;"	d	language:C++
SIZE_T_MAX	sftp-server/defines.h	256;"	d	language:C++
SLEEP	libtommath/demo/demo.c	5;"	d	language:C	file:
SLEEP	libtommath/demo/demo.c	7;"	d	language:C	file:
SLEEP	libtommath/demo/timing.c	10;"	d	language:C	file:
SLEEP	libtommath/demo/timing.c	8;"	d	language:C	file:
SLIST_EMPTY	sftp-server/openbsd-compat/sys-queue.h	197;"	d	language:C++
SLIST_EMPTY	sftp-server/openbsd-compat/sys-queue.h	50;"	d	language:C++
SLIST_END	sftp-server/openbsd-compat/sys-queue.h	196;"	d	language:C++
SLIST_END	sftp-server/openbsd-compat/sys-queue.h	49;"	d	language:C++
SLIST_ENTRY	sftp-server/openbsd-compat/sys-queue.h	187;"	d	language:C++
SLIST_ENTRY	sftp-server/openbsd-compat/sys-queue.h	46;"	d	language:C++
SLIST_FIRST	sftp-server/openbsd-compat/sys-queue.h	195;"	d	language:C++
SLIST_FIRST	sftp-server/openbsd-compat/sys-queue.h	48;"	d	language:C++
SLIST_FOREACH	sftp-server/openbsd-compat/sys-queue.h	200;"	d	language:C++
SLIST_FOREACH	sftp-server/openbsd-compat/sys-queue.h	52;"	d	language:C++
SLIST_FOREACH_PREVPTR	sftp-server/openbsd-compat/sys-queue.h	205;"	d	language:C++
SLIST_FOREACH_PREVPTR	sftp-server/openbsd-compat/sys-queue.h	47;"	d	language:C++
SLIST_HEAD	sftp-server/openbsd-compat/sys-queue.h	179;"	d	language:C++
SLIST_HEAD	sftp-server/openbsd-compat/sys-queue.h	44;"	d	language:C++
SLIST_HEAD_INITIALIZER	sftp-server/openbsd-compat/sys-queue.h	184;"	d	language:C++
SLIST_HEAD_INITIALIZER	sftp-server/openbsd-compat/sys-queue.h	45;"	d	language:C++
SLIST_INIT	sftp-server/openbsd-compat/sys-queue.h	213;"	d	language:C++
SLIST_INIT	sftp-server/openbsd-compat/sys-queue.h	53;"	d	language:C++
SLIST_INSERT_AFTER	sftp-server/openbsd-compat/sys-queue.h	217;"	d	language:C++
SLIST_INSERT_AFTER	sftp-server/openbsd-compat/sys-queue.h	54;"	d	language:C++
SLIST_INSERT_HEAD	sftp-server/openbsd-compat/sys-queue.h	222;"	d	language:C++
SLIST_INSERT_HEAD	sftp-server/openbsd-compat/sys-queue.h	55;"	d	language:C++
SLIST_NEXT	sftp-server/openbsd-compat/sys-queue.h	198;"	d	language:C++
SLIST_NEXT	sftp-server/openbsd-compat/sys-queue.h	51;"	d	language:C++
SLIST_REMOVE	sftp-server/openbsd-compat/sys-queue.h	235;"	d	language:C++
SLIST_REMOVE	sftp-server/openbsd-compat/sys-queue.h	57;"	d	language:C++
SLIST_REMOVE_HEAD	sftp-server/openbsd-compat/sys-queue.h	231;"	d	language:C++
SLIST_REMOVE_HEAD	sftp-server/openbsd-compat/sys-queue.h	56;"	d	language:C++
SLIST_REMOVE_NEXT	sftp-server/openbsd-compat/sys-queue.h	227;"	d	language:C++
SLIST_REMOVE_NEXT	sftp-server/openbsd-compat/sys-queue.h	58;"	d	language:C++
SNPRINTF_CONST	sftp-server/config.h	1325;"	d	language:C++
SP1	libtomcrypt/src/ciphers/des.c	/^static const ulong32 SP1[64] =$/;"	v	language:C	file:
SP2	libtomcrypt/src/ciphers/des.c	/^static const ulong32 SP2[64] =$/;"	v	language:C	file:
SP3	libtomcrypt/src/ciphers/des.c	/^static const ulong32 SP3[64] =$/;"	v	language:C	file:
SP4	libtomcrypt/src/ciphers/des.c	/^static const ulong32 SP4[64] =$/;"	v	language:C	file:
SP5	libtomcrypt/src/ciphers/des.c	/^static const ulong32 SP5[64] =$/;"	v	language:C	file:
SP6	libtomcrypt/src/ciphers/des.c	/^static const ulong32 SP6[64] =$/;"	v	language:C	file:
SP7	libtomcrypt/src/ciphers/des.c	/^static const ulong32 SP7[64] =$/;"	v	language:C	file:
SP8	libtomcrypt/src/ciphers/des.c	/^static const ulong32 SP8[64] =$/;"	v	language:C	file:
SPT_TYPE	sftp-server/config.h	1329;"	d	language:C++
SROUND	libtomcrypt/src/prngs/sober128.c	280;"	d	language:C	file:
SS0	libtomcrypt/src/ciphers/kseed.c	/^static const ulong32 SS0[256] = {$/;"	v	language:C	file:
SS1	libtomcrypt/src/ciphers/kseed.c	/^static const ulong32 SS1[256] = {$/;"	v	language:C	file:
SS2	libtomcrypt/src/ciphers/kseed.c	/^static const ulong32 SS2[256] = {$/;"	v	language:C	file:
SS3	libtomcrypt/src/ciphers/kseed.c	/^static const ulong32 SS3[256] = {$/;"	v	language:C	file:
SSH2_AGENTC_REQUEST_IDENTITIES	ssh.h	113;"	d	language:C++
SSH2_AGENTC_SIGN_REQUEST	ssh.h	115;"	d	language:C++
SSH2_AGENT_FAILURE	ssh.h	118;"	d	language:C++
SSH2_AGENT_IDENTITIES_ANSWER	ssh.h	114;"	d	language:C++
SSH2_AGENT_SIGN_RESPONSE	ssh.h	116;"	d	language:C++
SSH2_FILEXFER_ATTR_ACMODTIME	sftp-server/sftp.h	71;"	d	language:C++
SSH2_FILEXFER_ATTR_EXTENDED	sftp-server/sftp.h	72;"	d	language:C++
SSH2_FILEXFER_ATTR_PERMISSIONS	sftp-server/sftp.h	70;"	d	language:C++
SSH2_FILEXFER_ATTR_SIZE	sftp-server/sftp.h	68;"	d	language:C++
SSH2_FILEXFER_ATTR_UIDGID	sftp-server/sftp.h	69;"	d	language:C++
SSH2_FILEXFER_VERSION	sftp-server/sftp.h	32;"	d	language:C++
SSH2_FXE_STATVFS_ST_NOSUID	sftp-server/sftp.h	84;"	d	language:C++
SSH2_FXE_STATVFS_ST_RDONLY	sftp-server/sftp.h	83;"	d	language:C++
SSH2_FXF_APPEND	sftp-server/sftp.h	77;"	d	language:C++
SSH2_FXF_CREAT	sftp-server/sftp.h	78;"	d	language:C++
SSH2_FXF_EXCL	sftp-server/sftp.h	80;"	d	language:C++
SSH2_FXF_READ	sftp-server/sftp.h	75;"	d	language:C++
SSH2_FXF_TRUNC	sftp-server/sftp.h	79;"	d	language:C++
SSH2_FXF_WRITE	sftp-server/sftp.h	76;"	d	language:C++
SSH2_FXP_ATTRS	sftp-server/sftp.h	62;"	d	language:C++
SSH2_FXP_CLOSE	sftp-server/sftp.h	37;"	d	language:C++
SSH2_FXP_DATA	sftp-server/sftp.h	60;"	d	language:C++
SSH2_FXP_EXTENDED	sftp-server/sftp.h	64;"	d	language:C++
SSH2_FXP_EXTENDED_REPLY	sftp-server/sftp.h	65;"	d	language:C++
SSH2_FXP_FSETSTAT	sftp-server/sftp.h	44;"	d	language:C++
SSH2_FXP_FSTAT	sftp-server/sftp.h	42;"	d	language:C++
SSH2_FXP_HANDLE	sftp-server/sftp.h	59;"	d	language:C++
SSH2_FXP_INIT	sftp-server/sftp.h	35;"	d	language:C++
SSH2_FXP_LSTAT	sftp-server/sftp.h	40;"	d	language:C++
SSH2_FXP_MKDIR	sftp-server/sftp.h	48;"	d	language:C++
SSH2_FXP_NAME	sftp-server/sftp.h	61;"	d	language:C++
SSH2_FXP_OPEN	sftp-server/sftp.h	36;"	d	language:C++
SSH2_FXP_OPENDIR	sftp-server/sftp.h	45;"	d	language:C++
SSH2_FXP_READ	sftp-server/sftp.h	38;"	d	language:C++
SSH2_FXP_READDIR	sftp-server/sftp.h	46;"	d	language:C++
SSH2_FXP_READLINK	sftp-server/sftp.h	53;"	d	language:C++
SSH2_FXP_REALPATH	sftp-server/sftp.h	50;"	d	language:C++
SSH2_FXP_REMOVE	sftp-server/sftp.h	47;"	d	language:C++
SSH2_FXP_RENAME	sftp-server/sftp.h	52;"	d	language:C++
SSH2_FXP_RMDIR	sftp-server/sftp.h	49;"	d	language:C++
SSH2_FXP_SETSTAT	sftp-server/sftp.h	43;"	d	language:C++
SSH2_FXP_STAT	sftp-server/sftp.h	51;"	d	language:C++
SSH2_FXP_STATUS	sftp-server/sftp.h	58;"	d	language:C++
SSH2_FXP_STAT_VERSION_0	sftp-server/sftp.h	41;"	d	language:C++
SSH2_FXP_SYMLINK	sftp-server/sftp.h	54;"	d	language:C++
SSH2_FXP_VERSION	sftp-server/sftp.h	57;"	d	language:C++
SSH2_FXP_WRITE	sftp-server/sftp.h	39;"	d	language:C++
SSH2_FX_BAD_MESSAGE	sftp-server/sftp.h	92;"	d	language:C++
SSH2_FX_CONNECTION_LOST	sftp-server/sftp.h	94;"	d	language:C++
SSH2_FX_EOF	sftp-server/sftp.h	88;"	d	language:C++
SSH2_FX_FAILURE	sftp-server/sftp.h	91;"	d	language:C++
SSH2_FX_MAX	sftp-server/sftp.h	96;"	d	language:C++
SSH2_FX_NO_CONNECTION	sftp-server/sftp.h	93;"	d	language:C++
SSH2_FX_NO_SUCH_FILE	sftp-server/sftp.h	89;"	d	language:C++
SSH2_FX_OK	sftp-server/sftp.h	87;"	d	language:C++
SSH2_FX_OP_UNSUPPORTED	sftp-server/sftp.h	95;"	d	language:C++
SSH2_FX_PERMISSION_DENIED	sftp-server/sftp.h	90;"	d	language:C++
SSHPTY_H	sshpty.h	20;"	d	language:C++
SSH_AGENTPID_ENV_NAME	sftp-server/ssh.h	61;"	d	language:C++
SSH_AGENT_FAILURE	ssh.h	111;"	d	language:C++
SSH_AGENT_SUCCESS	ssh.h	112;"	d	language:C++
SSH_ASKPASS_ENV	sftp-server/ssh.h	72;"	d	language:C++
SSH_AUDIT_EVENTS	sftp-server/defines.h	565;"	d	language:C++
SSH_AUTHFILE_CIPHER	sftp-server/ssh.h	16;"	d	language:C++
SSH_AUTHSOCKET_ENV_NAME	sftp-server/ssh.h	67;"	d	language:C++
SSH_BUG_BANNER	sftp-server/compat.h	42;"	d	language:C++
SSH_BUG_BIGENDIANAES	sftp-server/compat.h	47;"	d	language:C++
SSH_BUG_DEBUG	sftp-server/compat.h	41;"	d	language:C++
SSH_BUG_DERIVEKEY	sftp-server/compat.h	53;"	d	language:C++
SSH_BUG_DUMMYCHAN	sftp-server/compat.h	54;"	d	language:C++
SSH_BUG_EXTEOF	sftp-server/compat.h	55;"	d	language:C++
SSH_BUG_FIRSTKEX	sftp-server/compat.h	57;"	d	language:C++
SSH_BUG_HBSERVICE	sftp-server/compat.h	51;"	d	language:C++
SSH_BUG_HMAC	sftp-server/compat.h	37;"	d	language:C++
SSH_BUG_IGNOREMSG	sftp-server/compat.h	43;"	d	language:C++
SSH_BUG_NOREKEY	sftp-server/compat.h	50;"	d	language:C++
SSH_BUG_OPENFAILURE	sftp-server/compat.h	52;"	d	language:C++
SSH_BUG_PASSWORDPAD	sftp-server/compat.h	45;"	d	language:C++
SSH_BUG_PKAUTH	sftp-server/compat.h	40;"	d	language:C++
SSH_BUG_PKOK	sftp-server/compat.h	44;"	d	language:C++
SSH_BUG_PKSERVICE	sftp-server/compat.h	36;"	d	language:C++
SSH_BUG_PROBE	sftp-server/compat.h	56;"	d	language:C++
SSH_BUG_RFWD_ADDR	sftp-server/compat.h	59;"	d	language:C++
SSH_BUG_RSASIGMD5	sftp-server/compat.h	48;"	d	language:C++
SSH_BUG_SCANNER	sftp-server/compat.h	46;"	d	language:C++
SSH_BUG_SIGBLOB	sftp-server/compat.h	35;"	d	language:C++
SSH_BUG_X11FWD	sftp-server/compat.h	38;"	d	language:C++
SSH_CHANNEL_AUTH_SOCKET	sftp-server/channels.h	47;"	d	language:C++
SSH_CHANNEL_CLOSED	sftp-server/channels.h	46;"	d	language:C++
SSH_CHANNEL_CONNECTING	sftp-server/channels.h	53;"	d	language:C++
SSH_CHANNEL_DYNAMIC	sftp-server/channels.h	54;"	d	language:C++
SSH_CHANNEL_INPUT_DRAINING	sftp-server/channels.h	49;"	d	language:C++
SSH_CHANNEL_LARVAL	sftp-server/channels.h	51;"	d	language:C++
SSH_CHANNEL_MAX_TYPE	sftp-server/channels.h	58;"	d	language:C++
SSH_CHANNEL_MUX_CLIENT	sftp-server/channels.h	57;"	d	language:C++
SSH_CHANNEL_MUX_LISTENER	sftp-server/channels.h	56;"	d	language:C++
SSH_CHANNEL_OPEN	sftp-server/channels.h	45;"	d	language:C++
SSH_CHANNEL_OPENING	sftp-server/channels.h	44;"	d	language:C++
SSH_CHANNEL_OUTPUT_DRAINING	sftp-server/channels.h	50;"	d	language:C++
SSH_CHANNEL_PORT_LISTENER	sftp-server/channels.h	43;"	d	language:C++
SSH_CHANNEL_RPORT_LISTENER	sftp-server/channels.h	52;"	d	language:C++
SSH_CHANNEL_X11_LISTENER	sftp-server/channels.h	42;"	d	language:C++
SSH_CHANNEL_X11_OPEN	sftp-server/channels.h	48;"	d	language:C++
SSH_CHANNEL_ZOMBIE	sftp-server/channels.h	55;"	d	language:C++
SSH_DEFAULT_PORT	sftp-server/ssh.h	19;"	d	language:C++
SSH_DISCONNECT_AUTH_CANCELLED_BY_USER	ssh.h	93;"	d	language:C++
SSH_DISCONNECT_BY_APPLICATION	ssh.h	91;"	d	language:C++
SSH_DISCONNECT_COMPRESSION_ERROR	ssh.h	86;"	d	language:C++
SSH_DISCONNECT_CONNECTION_LOST	ssh.h	90;"	d	language:C++
SSH_DISCONNECT_HOST_KEY_NOT_VERIFIABLE	ssh.h	89;"	d	language:C++
SSH_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT	ssh.h	81;"	d	language:C++
SSH_DISCONNECT_ILLEGAL_USER_NAME	ssh.h	95;"	d	language:C++
SSH_DISCONNECT_KEY_EXCHANGE_FAILED	ssh.h	83;"	d	language:C++
SSH_DISCONNECT_MAC_ERROR	ssh.h	85;"	d	language:C++
SSH_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE	ssh.h	94;"	d	language:C++
SSH_DISCONNECT_PROTOCOL_ERROR	ssh.h	82;"	d	language:C++
SSH_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED	ssh.h	88;"	d	language:C++
SSH_DISCONNECT_RESERVED	ssh.h	84;"	d	language:C++
SSH_DISCONNECT_SERVICE_NOT_AVAILABLE	ssh.h	87;"	d	language:C++
SSH_DISCONNECT_TOO_MANY_CONNECTIONS	ssh.h	92;"	d	language:C++
SSH_ESCAPECHAR_NONE	sftp-server/ssh.h	87;"	d	language:C++
SSH_EXTENDED_DATA_STDERR	ssh.h	78;"	d	language:C++
SSH_IOBUFSZ	sftp-server/defines.h	753;"	d	language:C++
SSH_KEY_BITS_RESERVED	sftp-server/ssh.h	78;"	d	language:C++
SSH_LISTEN_BACKLOG	sftp-server/ssh.h	102;"	d	language:C++
SSH_LOG_H	sftp-server/log.h	16;"	d	language:C++
SSH_MAX_FORWARDS_PER_DIRECTION	sftp-server/ssh.h	22;"	d	language:C++
SSH_MAX_IDENTITY_FILES	sftp-server/ssh.h	28;"	d	language:C++
SSH_MAX_PUBKEY_BYTES	sftp-server/ssh.h	35;"	d	language:C++
SSH_MSG_CHANNEL_CLOSE	ssh.h	72;"	d	language:C++
SSH_MSG_CHANNEL_DATA	ssh.h	69;"	d	language:C++
SSH_MSG_CHANNEL_EOF	ssh.h	71;"	d	language:C++
SSH_MSG_CHANNEL_EXTENDED_DATA	ssh.h	70;"	d	language:C++
SSH_MSG_CHANNEL_FAILURE	ssh.h	75;"	d	language:C++
SSH_MSG_CHANNEL_OPEN	ssh.h	65;"	d	language:C++
SSH_MSG_CHANNEL_OPEN_CONFIRMATION	ssh.h	66;"	d	language:C++
SSH_MSG_CHANNEL_OPEN_FAILURE	ssh.h	67;"	d	language:C++
SSH_MSG_CHANNEL_REQUEST	ssh.h	73;"	d	language:C++
SSH_MSG_CHANNEL_SUCCESS	ssh.h	74;"	d	language:C++
SSH_MSG_CHANNEL_WINDOW_ADJUST	ssh.h	68;"	d	language:C++
SSH_MSG_DEBUG	ssh.h	32;"	d	language:C++
SSH_MSG_DISCONNECT	ssh.h	29;"	d	language:C++
SSH_MSG_GLOBAL_REQUEST	ssh.h	62;"	d	language:C++
SSH_MSG_IGNORE	ssh.h	30;"	d	language:C++
SSH_MSG_KEXDH_INIT	ssh.h	37;"	d	language:C++
SSH_MSG_KEXDH_REPLY	ssh.h	38;"	d	language:C++
SSH_MSG_KEXINIT	ssh.h	35;"	d	language:C++
SSH_MSG_NEWKEYS	ssh.h	36;"	d	language:C++
SSH_MSG_REQUEST_FAILURE	ssh.h	64;"	d	language:C++
SSH_MSG_REQUEST_SUCCESS	ssh.h	63;"	d	language:C++
SSH_MSG_SERVICE_ACCEPT	ssh.h	34;"	d	language:C++
SSH_MSG_SERVICE_REQUEST	ssh.h	33;"	d	language:C++
SSH_MSG_UNIMPLEMENTED	ssh.h	31;"	d	language:C++
SSH_MSG_USERAUTH_BANNER	ssh.h	44;"	d	language:C++
SSH_MSG_USERAUTH_FAILURE	ssh.h	42;"	d	language:C++
SSH_MSG_USERAUTH_INFO_REQUEST	ssh.h	54;"	d	language:C++
SSH_MSG_USERAUTH_INFO_RESPONSE	ssh.h	55;"	d	language:C++
SSH_MSG_USERAUTH_PASSWD_CHANGEREQ	ssh.h	49;"	d	language:C++
SSH_MSG_USERAUTH_PK_OK	ssh.h	51;"	d	language:C++
SSH_MSG_USERAUTH_REQUEST	ssh.h	41;"	d	language:C++
SSH_MSG_USERAUTH_SPECIFIC_60	ssh.h	47;"	d	language:C++
SSH_MSG_USERAUTH_SUCCESS	ssh.h	43;"	d	language:C++
SSH_NEW_OPENSSH	sftp-server/compat.h	60;"	d	language:C++
SSH_OLD_DHGEX	sftp-server/compat.h	49;"	d	language:C++
SSH_OLD_FORWARD_ADDR	sftp-server/compat.h	58;"	d	language:C++
SSH_OLD_SESSIONID	sftp-server/compat.h	39;"	d	language:C++
SSH_OPEN_ADMINISTRATIVELY_PROHIBITED	channel.h	40;"	d	language:C++
SSH_OPEN_CONNECT_FAILED	channel.h	41;"	d	language:C++
SSH_OPEN_IN_PROGRESS	channel.h	46;"	d	language:C++
SSH_OPEN_RESOURCE_SHORTAGE	channel.h	43;"	d	language:C++
SSH_OPEN_UNKNOWN_CHANNEL_TYPE	channel.h	42;"	d	language:C++
SSH_PRIVSEP_USER	sftp-server/config.h	1344;"	d	language:C++
SSH_PRIVSEP_USER	sftp-server/ssh.h	95;"	d	language:C++
SSH_PROTO_1	sftp-server/compat.h	31;"	d	language:C++
SSH_PROTO_1_PREFERRED	sftp-server/compat.h	32;"	d	language:C++
SSH_PROTO_2	sftp-server/compat.h	33;"	d	language:C++
SSH_PROTO_UNKNOWN	sftp-server/compat.h	30;"	d	language:C++
SSH_RSA_MINIMUM_MODULUS_SIZE	sftp-server/ssh.h	99;"	d	language:C++
SSH_SERVICE_CONNECTION	ssh.h	100;"	d	language:C++
SSH_SERVICE_CONNECTION_LEN	ssh.h	101;"	d	language:C++
SSH_SERVICE_NAME	sftp-server/ssh.h	55;"	d	language:C++
SSH_SERVICE_USERAUTH	ssh.h	98;"	d	language:C++
SSH_SERVICE_USERAUTH_LEN	ssh.h	99;"	d	language:C++
SSH_SESSION_KEY_LENGTH	sftp-server/ssh.h	84;"	d	language:C++
SSH_SIGNKEY_DSS	ssh.h	104;"	d	language:C++
SSH_SIGNKEY_DSS_LEN	ssh.h	105;"	d	language:C++
SSH_SIGNKEY_RSA	ssh.h	106;"	d	language:C++
SSH_SIGNKEY_RSA_LEN	ssh.h	107;"	d	language:C++
SSH_SYSFDMAX	sftp-server/defines.h	587;"	d	language:C++
SSH_SYSFDMAX	sftp-server/defines.h	589;"	d	language:C++
SSH_TUNID_ANY	sftp-server/misc.h	64;"	d	language:C++
SSH_TUNID_ERR	sftp-server/misc.h	65;"	d	language:C++
SSH_TUNID_MAX	sftp-server/misc.h	66;"	d	language:C++
SSH_TUNMODE_DEFAULT	sftp-server/misc.h	61;"	d	language:C++
SSH_TUNMODE_ETHERNET	sftp-server/misc.h	60;"	d	language:C++
SSH_TUNMODE_NO	sftp-server/misc.h	58;"	d	language:C++
SSH_TUNMODE_POINTOPOINT	sftp-server/misc.h	59;"	d	language:C++
SSH_TUNMODE_YES	sftp-server/misc.h	62;"	d	language:C++
SSH_TUN_COMPAT_AF	sftp-server/config.h	1347;"	d	language:C++
SSH_TUN_FILTER	sftp-server/openbsd-compat/port-tun.h	28;"	d	language:C++
SSH_TUN_LINUX	sftp-server/config.h	1353;"	d	language:C++
SSH_TUN_PREPEND_AF	sftp-server/config.h	1362;"	d	language:C++
STACK_DOWN	libtomcrypt/testprof/tomcrypt_test.h	11;"	d	language:C++
STALL_TIME	progressmeter.c	37;"	d	language:C	file:
STATE_NOTHING	session.h	/^	STATE_NOTHING,$/;"	e	language:C++	enum:__anon14
STDC_HEADERS	config.h	380;"	d	language:C++
STDC_HEADERS	sftp-server/config.h	1365;"	d	language:C++
STDERR_FILENO	sftp-server/defines.h	82;"	d	language:C++
STDIN_FILENO	sftp-server/defines.h	76;"	d	language:C++
STDOUT_FILENO	sftp-server/defines.h	79;"	d	language:C++
STEP	libtomcrypt/src/prngs/sober128.c	69;"	d	language:C	file:
STORE32H	libtomcrypt/src/headers/tomcrypt_macros.h	195;"	d	language:C++
STORE32H	libtomcrypt/src/headers/tomcrypt_macros.h	215;"	d	language:C++
STORE32H	libtomcrypt/src/headers/tomcrypt_macros.h	44;"	d	language:C++
STORE32H	libtomcrypt/src/headers/tomcrypt_macros.h	72;"	d	language:C++
STORE32H	libtomcrypt/src/headers/tomcrypt_macros.h	87;"	d	language:C++
STORE32L	libtomcrypt/src/headers/tomcrypt_macros.h	134;"	d	language:C++
STORE32L	libtomcrypt/src/headers/tomcrypt_macros.h	154;"	d	language:C++
STORE32L	libtomcrypt/src/headers/tomcrypt_macros.h	171;"	d	language:C++
STORE32L	libtomcrypt/src/headers/tomcrypt_macros.h	22;"	d	language:C++
STORE64H	libtomcrypt/src/headers/tomcrypt_macros.h	103;"	d	language:C++
STORE64H	libtomcrypt/src/headers/tomcrypt_macros.h	118;"	d	language:C++
STORE64H	libtomcrypt/src/headers/tomcrypt_macros.h	201;"	d	language:C++
STORE64H	libtomcrypt/src/headers/tomcrypt_macros.h	221;"	d	language:C++
STORE64H	libtomcrypt/src/headers/tomcrypt_macros.h	54;"	d	language:C++
STORE64L	libtomcrypt/src/headers/tomcrypt_macros.h	140;"	d	language:C++
STORE64L	libtomcrypt/src/headers/tomcrypt_macros.h	160;"	d	language:C++
STORE64L	libtomcrypt/src/headers/tomcrypt_macros.h	181;"	d	language:C++
STORE64L	libtomcrypt/src/headers/tomcrypt_macros.h	32;"	d	language:C++
STORE_V	libtomcrypt/src/pk/asn1/der/utctime/der_encode_utctime.c	22;"	d	language:C	file:
ST_NOSUID	sftp-server/openbsd-compat/bsd-statvfs.h	40;"	d	language:C++
ST_RDONLY	sftp-server/openbsd-compat/bsd-statvfs.h	37;"	d	language:C++
SUPERUSER_PATH	sftp-server/defines.h	340;"	d	language:C++
SYSLOG_FACILITY_AUTH	sftp-server/log.h	/^	SYSLOG_FACILITY_AUTH,$/;"	e	language:C++	enum:__anon6
SYSLOG_FACILITY_AUTHPRIV	sftp-server/log.h	/^	SYSLOG_FACILITY_AUTHPRIV,$/;"	e	language:C++	enum:__anon6
SYSLOG_FACILITY_DAEMON	sftp-server/log.h	/^	SYSLOG_FACILITY_DAEMON,$/;"	e	language:C++	enum:__anon6
SYSLOG_FACILITY_LOCAL0	sftp-server/log.h	/^	SYSLOG_FACILITY_LOCAL0,$/;"	e	language:C++	enum:__anon6
SYSLOG_FACILITY_LOCAL1	sftp-server/log.h	/^	SYSLOG_FACILITY_LOCAL1,$/;"	e	language:C++	enum:__anon6
SYSLOG_FACILITY_LOCAL2	sftp-server/log.h	/^	SYSLOG_FACILITY_LOCAL2,$/;"	e	language:C++	enum:__anon6
SYSLOG_FACILITY_LOCAL3	sftp-server/log.h	/^	SYSLOG_FACILITY_LOCAL3,$/;"	e	language:C++	enum:__anon6
SYSLOG_FACILITY_LOCAL4	sftp-server/log.h	/^	SYSLOG_FACILITY_LOCAL4,$/;"	e	language:C++	enum:__anon6
SYSLOG_FACILITY_LOCAL5	sftp-server/log.h	/^	SYSLOG_FACILITY_LOCAL5,$/;"	e	language:C++	enum:__anon6
SYSLOG_FACILITY_LOCAL6	sftp-server/log.h	/^	SYSLOG_FACILITY_LOCAL6,$/;"	e	language:C++	enum:__anon6
SYSLOG_FACILITY_LOCAL7	sftp-server/log.h	/^	SYSLOG_FACILITY_LOCAL7,$/;"	e	language:C++	enum:__anon6
SYSLOG_FACILITY_NOT_SET	sftp-server/log.h	/^	SYSLOG_FACILITY_NOT_SET = -1$/;"	e	language:C++	enum:__anon6
SYSLOG_FACILITY_USER	sftp-server/log.h	/^	SYSLOG_FACILITY_USER,$/;"	e	language:C++	enum:__anon6
SYSLOG_LEVEL_DEBUG1	sftp-server/log.h	/^	SYSLOG_LEVEL_DEBUG1,$/;"	e	language:C++	enum:__anon7
SYSLOG_LEVEL_DEBUG2	sftp-server/log.h	/^	SYSLOG_LEVEL_DEBUG2,$/;"	e	language:C++	enum:__anon7
SYSLOG_LEVEL_DEBUG3	sftp-server/log.h	/^	SYSLOG_LEVEL_DEBUG3,$/;"	e	language:C++	enum:__anon7
SYSLOG_LEVEL_ERROR	sftp-server/log.h	/^	SYSLOG_LEVEL_ERROR,$/;"	e	language:C++	enum:__anon7
SYSLOG_LEVEL_FATAL	sftp-server/log.h	/^	SYSLOG_LEVEL_FATAL,$/;"	e	language:C++	enum:__anon7
SYSLOG_LEVEL_INFO	sftp-server/log.h	/^	SYSLOG_LEVEL_INFO,$/;"	e	language:C++	enum:__anon7
SYSLOG_LEVEL_NOT_SET	sftp-server/log.h	/^	SYSLOG_LEVEL_NOT_SET = -1$/;"	e	language:C++	enum:__anon7
SYSLOG_LEVEL_QUIET	sftp-server/log.h	/^	SYSLOG_LEVEL_QUIET,$/;"	e	language:C++	enum:__anon7
SYSLOG_LEVEL_VERBOSE	sftp-server/log.h	/^	SYSLOG_LEVEL_VERBOSE,$/;"	e	language:C++	enum:__anon7
S_IRGRP	sftp-server/defines.h	118;"	d	language:C++
S_IROTH	sftp-server/defines.h	119;"	d	language:C++
S_IRUSR	sftp-server/defines.h	117;"	d	language:C++
S_IRWXG	sftp-server/defines.h	121;"	d	language:C++
S_IRWXO	sftp-server/defines.h	122;"	d	language:C++
S_IRWXU	sftp-server/defines.h	120;"	d	language:C++
S_ISDIR	sftp-server/defines.h	98;"	d	language:C++
S_ISLNK	sftp-server/defines.h	106;"	d	language:C++
S_ISREG	sftp-server/defines.h	102;"	d	language:C++
S_IWGRP	sftp-server/defines.h	115;"	d	language:C++
S_IWOTH	sftp-server/defines.h	116;"	d	language:C++
S_IWRITE	scp.c	72;"	d	language:C	file:
S_IWUSR	sftp-server/defines.h	114;"	d	language:C++
S_IXGRP	sftp-server/defines.h	111;"	d	language:C++
S_IXOTH	sftp-server/defines.h	112;"	d	language:C++
S_IXUSR	sftp-server/defines.h	110;"	d	language:C++
Safer_Expand_Userkey	libtomcrypt/src/ciphers/safer/safer.c	/^static void Safer_Expand_Userkey(const unsigned char *userkey_1,$/;"	f	language:C	file:	signature:(const unsigned char *userkey_1, const unsigned char *userkey_2, unsigned int nof_rounds, int strengthened, safer_key_t key)
Sample Decoding	libtomcrypt/crypt.tex	/^pointer.  Currently no function in LibTomCrypt provides this ability.$/;"	b	language:Tex
Sbox	libtomcrypt/src/prngs/sober128tab.c	/^static const ulong32 Sbox[256] = {$/;"	v	language:C	file:
Self--Testing	libtomcrypt/crypt.tex	/^call the following self-test function.$/;"	u	language:Tex
SigMap	chansession.h	/^struct SigMap {$/;"	s	language:C++
SigMap::name	chansession.h	/^	char* name;$/;"	m	language:C++	struct:SigMap	access:public
SigMap::signal	chansession.h	/^	int signal;$/;"	m	language:C++	struct:SigMap	access:public
Sigma0	libtomcrypt/src/hashes/sha2/sha256.c	62;"	d	language:C	file:
Sigma0	libtomcrypt/src/hashes/sha2/sha512.c	87;"	d	language:C	file:
Sigma1	libtomcrypt/src/hashes/sha2/sha256.c	63;"	d	language:C	file:
Sigma1	libtomcrypt/src/hashes/sha2/sha512.c	88;"	d	language:C	file:
Sign Manipulation	libtommath/bn.tex	/^aware.$/;"	s	language:Tex
Signature Format	libtomcrypt/crypt.tex	/^The ECC \\textit{key} must be the public (or private) ECC key corresponding to the key that performed the signature.$/;"	u	language:Tex
Signature Generation	libtomcrypt/crypt.tex	/^\\mysection{Signatures}$/;"	u	language:Tex
Signature Verification	libtomcrypt/crypt.tex	/^is stored and the function returns an error code.  The DSA \\textit{key} must be of the \\textbf{PK\\_PRIVATE} persuasion.$/;"	u	language:Tex
Signed comparison	libtommath/bn.tex	/^This is because $\\vert -6 \\vert = 6$ and obviously $5 < 6$.$/;"	u	language:Tex
Simple Encryption Demonstration	libtomcrypt/crypt.tex	/^setup function must also call the respective cipher done function when finished.$/;"	u	language:Tex
Single Digit Exponentiation	libtommath/bn.tex	/^\\chapter{Exponentiation}$/;"	s	language:Tex
Single Digit Functions	libtommath/bn.tex	/^Computes the multiplicative inverse of $a$ modulo $b$ and stores the result in $c$ such that $ac \\equiv 1 \\mbox{ (mod }b\\mbox{)}$.$/;"	s	language:Tex
Single Free	libtommath/bn.tex	/^\\end{alltt} \\end{small}$/;"	u	language:Tex
Small Constants	libtommath/bn.tex	/^\\chapter{Basic Operations}$/;"	s	language:Tex
Standards Support	libtomcrypt/crypt.tex	/^will automatically free all of the heap allocated in the process (you don't have to call dsa\\_free()).  $/;"	c	language:Tex
Start	libtomcrypt/crypt.tex	/^When an PRNG state is to be exported for future use you specify the space required in this variable.$/;"	u	language:Tex
Stat	sftp-server/sftp-server.c	/^struct Stat {$/;"	s	language:C	file:
Stat	sftp-server/sftp-server.c	/^typedef struct Stat Stat;$/;"	t	language:C	typeref:struct:Stat	file:
Stat::attrib	sftp-server/sftp-server.c	/^	Attrib attrib;$/;"	m	language:C	struct:Stat	file:	access:public
Stat::long_name	sftp-server/sftp-server.c	/^	char *long_name;$/;"	m	language:C	struct:Stat	file:	access:public
Stat::name	sftp-server/sftp-server.c	/^	char *name;$/;"	m	language:C	struct:Stat	file:	access:public
State Reset	libtomcrypt/crypt.tex	/^This terminates the GCM state \\textit{gcm} and stores the tag in \\textit{tag} of length \\textit{taglen} octets.$/;"	b	language:Tex
State Termination	libtomcrypt/crypt.tex	/^encrypted and stored in the ciphertext buffer.  When \\textit{direction} equals \\textbf{GCM\\_DECRYPT} the opposite occurs.$/;"	b	language:Tex
State Termination	libtomcrypt/crypt.tex	/^states (with different nonces).  Also \\textit{pt} and \\textit{ct} may point to the same location in memory.$/;"	b	language:Tex
Straight Division	libtommath/bn.tex	/^algorithm mp\\_exptmod when an appropriate modulus is detected.  $/;"	s	language:Tex
Symmetric Block Ciphers	libtomcrypt/crypt.tex	/^type \\textit{byte} will be synonymous with an array of type \\textit{unsigned char.}$/;"	c	language:Tex
Symmetric Ciphers  One-way Hashes  PRNGS and Public Key Functions	libtomcrypt/crypt.tex	/^cannot handle all of the assembler functions.  $/;"	u	language:Tex
Symmetric_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^typedef union Symmetric_key {$/;"	u	language:C++
Symmetric_key::anubis	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct anubis_key   anubis;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::anubis_key	access:public
Symmetric_key::blowfish	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct blowfish_key blowfish;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::blowfish_key	access:public
Symmetric_key::cast5	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct cast5_key    cast5;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::cast5_key	access:public
Symmetric_key::data	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   void   *data;$/;"	m	language:C++	union:Symmetric_key	access:public
Symmetric_key::des	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct des_key des;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::des_key	access:public
Symmetric_key::des3	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct des3_key des3;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::des3_key	access:public
Symmetric_key::kasumi	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct kasumi_key   kasumi;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::kasumi_key	access:public
Symmetric_key::khazad	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct khazad_key   khazad;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::khazad_key	access:public
Symmetric_key::kseed	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct kseed_key    kseed;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::kseed_key	access:public
Symmetric_key::noekeon	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct noekeon_key  noekeon;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::noekeon_key	access:public
Symmetric_key::rc2	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct rc2_key rc2;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::rc2_key	access:public
Symmetric_key::rc5	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct rc5_key      rc5;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::rc5_key	access:public
Symmetric_key::rc6	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct rc6_key      rc6;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::rc6_key	access:public
Symmetric_key::rijndael	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct rijndael_key rijndael;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::rijndael_key	access:public
Symmetric_key::safer	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct safer_key safer;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::safer_key	access:public
Symmetric_key::saferp	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct saferp_key   saferp;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::saferp_key	access:public
Symmetric_key::skipjack	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct skipjack_key skipjack;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::skipjack_key	access:public
Symmetric_key::twofish	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct twofish_key  twofish;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::twofish_key	access:public
Symmetric_key::xtea	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct xtea_key     xtea;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::xtea_key	access:public
SyslogFacility	sftp-server/log.h	/^}       SyslogFacility;$/;"	t	language:C++	typeref:enum:__anon6
T0	libtomcrypt/src/ciphers/anubis.c	/^static const ulong32 T0[256] = {$/;"	v	language:C	file:
T0	libtomcrypt/src/ciphers/khazad.c	/^static const ulong64 T0[256] = {$/;"	v	language:C	file:
T1	libtomcrypt/src/ciphers/anubis.c	/^static const ulong32 T1[256] = {$/;"	v	language:C	file:
T1	libtomcrypt/src/ciphers/khazad.c	/^static const ulong64 T1[256] = {$/;"	v	language:C	file:
T2	libtomcrypt/src/ciphers/anubis.c	/^static const ulong32 T2[256] = {$/;"	v	language:C	file:
T2	libtomcrypt/src/ciphers/khazad.c	/^static const ulong64 T2[256] = {$/;"	v	language:C	file:
T3	libtomcrypt/src/ciphers/anubis.c	/^static const ulong32 T3[256] = {$/;"	v	language:C	file:
T3	libtomcrypt/src/ciphers/khazad.c	/^static const ulong64 T3[256] = {$/;"	v	language:C	file:
T4	libtomcrypt/src/ciphers/anubis.c	/^static const ulong32 T4[256] = {$/;"	v	language:C	file:
T4	libtomcrypt/src/ciphers/khazad.c	/^static const ulong64 T4[256] = {$/;"	v	language:C	file:
T5	libtomcrypt/src/ciphers/anubis.c	/^static const ulong32 T5[256] = {$/;"	v	language:C	file:
T5	libtomcrypt/src/ciphers/khazad.c	/^static const ulong64 T5[256] = {$/;"	v	language:C	file:
T6	libtomcrypt/src/ciphers/khazad.c	/^static const ulong64 T6[256] = {$/;"	v	language:C	file:
T7	libtomcrypt/src/ciphers/khazad.c	/^static const ulong64 T7[256] = {$/;"	v	language:C	file:
TAB_SIZE	libtomcrypt/src/headers/tomcrypt.h	27;"	d	language:C++
TAB_SIZE	libtommath/bn_mp_exptmod_fast.c	27;"	d	language:C	file:
TAB_SIZE	libtommath/bn_mp_exptmod_fast.c	29;"	d	language:C	file:
TAB_SIZE	libtommath/bn_s_mp_exptmod.c	18;"	d	language:C	file:
TAB_SIZE	libtommath/bn_s_mp_exptmod.c	20;"	d	language:C	file:
TAB_SIZE	libtommath/pre_gen/mpi.c	2644;"	d	language:C	file:
TAB_SIZE	libtommath/pre_gen/mpi.c	2646;"	d	language:C	file:
TAB_SIZE	libtommath/pre_gen/mpi.c	8875;"	d	language:C	file:
TAB_SIZE	libtommath/pre_gen/mpi.c	8877;"	d	language:C	file:
TAILQ_EMPTY	sftp-server/openbsd-compat/sys-queue.h	417;"	d	language:C++
TAILQ_EMPTY	sftp-server/openbsd-compat/sys-queue.h	94;"	d	language:C++
TAILQ_END	sftp-server/openbsd-compat/sys-queue.h	410;"	d	language:C++
TAILQ_END	sftp-server/openbsd-compat/sys-queue.h	90;"	d	language:C++
TAILQ_ENTRY	sftp-server/openbsd-compat/sys-queue.h	400;"	d	language:C++
TAILQ_ENTRY	sftp-server/openbsd-compat/sys-queue.h	88;"	d	language:C++
TAILQ_FIRST	sftp-server/openbsd-compat/sys-queue.h	409;"	d	language:C++
TAILQ_FIRST	sftp-server/openbsd-compat/sys-queue.h	89;"	d	language:C++
TAILQ_FOREACH	sftp-server/openbsd-compat/sys-queue.h	420;"	d	language:C++
TAILQ_FOREACH	sftp-server/openbsd-compat/sys-queue.h	95;"	d	language:C++
TAILQ_FOREACH_REVERSE	sftp-server/openbsd-compat/sys-queue.h	425;"	d	language:C++
TAILQ_FOREACH_REVERSE	sftp-server/openbsd-compat/sys-queue.h	96;"	d	language:C++
TAILQ_HEAD	sftp-server/openbsd-compat/sys-queue.h	391;"	d	language:C++
TAILQ_HEAD	sftp-server/openbsd-compat/sys-queue.h	86;"	d	language:C++
TAILQ_HEAD_INITIALIZER	sftp-server/openbsd-compat/sys-queue.h	397;"	d	language:C++
TAILQ_HEAD_INITIALIZER	sftp-server/openbsd-compat/sys-queue.h	87;"	d	language:C++
TAILQ_INIT	sftp-server/openbsd-compat/sys-queue.h	433;"	d	language:C++
TAILQ_INIT	sftp-server/openbsd-compat/sys-queue.h	97;"	d	language:C++
TAILQ_INSERT_AFTER	sftp-server/openbsd-compat/sys-queue.h	100;"	d	language:C++
TAILQ_INSERT_AFTER	sftp-server/openbsd-compat/sys-queue.h	455;"	d	language:C++
TAILQ_INSERT_BEFORE	sftp-server/openbsd-compat/sys-queue.h	101;"	d	language:C++
TAILQ_INSERT_BEFORE	sftp-server/openbsd-compat/sys-queue.h	465;"	d	language:C++
TAILQ_INSERT_HEAD	sftp-server/openbsd-compat/sys-queue.h	438;"	d	language:C++
TAILQ_INSERT_HEAD	sftp-server/openbsd-compat/sys-queue.h	98;"	d	language:C++
TAILQ_INSERT_TAIL	sftp-server/openbsd-compat/sys-queue.h	448;"	d	language:C++
TAILQ_INSERT_TAIL	sftp-server/openbsd-compat/sys-queue.h	99;"	d	language:C++
TAILQ_LAST	sftp-server/openbsd-compat/sys-queue.h	412;"	d	language:C++
TAILQ_LAST	sftp-server/openbsd-compat/sys-queue.h	92;"	d	language:C++
TAILQ_NEXT	sftp-server/openbsd-compat/sys-queue.h	411;"	d	language:C++
TAILQ_NEXT	sftp-server/openbsd-compat/sys-queue.h	91;"	d	language:C++
TAILQ_PREV	sftp-server/openbsd-compat/sys-queue.h	415;"	d	language:C++
TAILQ_PREV	sftp-server/openbsd-compat/sys-queue.h	93;"	d	language:C++
TAILQ_REMOVE	sftp-server/openbsd-compat/sys-queue.h	102;"	d	language:C++
TAILQ_REMOVE	sftp-server/openbsd-compat/sys-queue.h	472;"	d	language:C++
TAILQ_REPLACE	sftp-server/openbsd-compat/sys-queue.h	103;"	d	language:C++
TAILQ_REPLACE	sftp-server/openbsd-compat/sys-queue.h	483;"	d	language:C++
TCPFwdEntry	tcpfwd.h	/^struct TCPFwdEntry {$/;"	s	language:C++
TCPFwdEntry::connectaddr	tcpfwd.h	/^	const unsigned char* connectaddr;$/;"	m	language:C++	struct:TCPFwdEntry	access:public
TCPFwdEntry::connectport	tcpfwd.h	/^	unsigned int connectport;$/;"	m	language:C++	struct:TCPFwdEntry	access:public
TCPFwdEntry::have_reply	tcpfwd.h	/^	unsigned int have_reply; \/* is set to 1 after a reply has been received$/;"	m	language:C++	struct:TCPFwdEntry	access:public
TCPFwdEntry::listenaddr	tcpfwd.h	/^	const unsigned char* listenaddr;$/;"	m	language:C++	struct:TCPFwdEntry	access:public
TCPFwdEntry::listenport	tcpfwd.h	/^	unsigned int listenport;$/;"	m	language:C++	struct:TCPFwdEntry	access:public
TCPListener	tcpfwd.h	/^struct TCPListener {$/;"	s	language:C++
TCPListener::chantype	tcpfwd.h	/^	const struct ChanType *chantype;$/;"	m	language:C++	struct:TCPListener	typeref:struct:TCPListener::ChanType	access:public
TCPListener::direct	tcpfwd.h	/^	enum {direct, forwarded} tcp_type;$/;"	e	language:C++	enum:TCPListener::__anon57
TCPListener::forwarded	tcpfwd.h	/^	enum {direct, forwarded} tcp_type;$/;"	e	language:C++	enum:TCPListener::__anon57
TCPListener::listenaddr	tcpfwd.h	/^	unsigned char *listenaddr;$/;"	m	language:C++	struct:TCPListener	access:public
TCPListener::listenport	tcpfwd.h	/^	unsigned int listenport;$/;"	m	language:C++	struct:TCPListener	access:public
TCPListener::sendaddr	tcpfwd.h	/^	unsigned char *sendaddr;$/;"	m	language:C++	struct:TCPListener	access:public
TCPListener::sendport	tcpfwd.h	/^	unsigned int sendport;$/;"	m	language:C++	struct:TCPListener	access:public
TCPListener::tcp_type	tcpfwd.h	/^	enum {direct, forwarded} tcp_type;$/;"	m	language:C++	struct:TCPListener	typeref:enum:TCPListener::__anon57	access:public
TD0	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 TD0[256] = {$/;"	v	language:C	file:
TD1	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 TD1[256] = {$/;"	v	language:C	file:
TD2	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 TD2[256] = {$/;"	v	language:C	file:
TD3	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 TD3[256] = {$/;"	v	language:C	file:
TE0	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 TE0[256] = {$/;"	v	language:C	file:
TE1	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 TE1[256] = {$/;"	v	language:C	file:
TE2	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 TE2[256] = {$/;"	v	language:C	file:
TE3	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 TE3[256] = {$/;"	v	language:C	file:
TERA	sftp-server/openbsd-compat/fmt_scaled.c	/^	NONE = 0, KILO = 1, MEGA = 2, GIGA = 3, TERA = 4, PETA = 5, EXA = 6$/;"	e	language:C	enum:__anon8	file:
TERMCODE_CONTROL	termcodes.h	29;"	d	language:C++
TERMCODE_CONTROLCHAR	termcodes.h	33;"	d	language:C++
TERMCODE_INPUT	termcodes.h	30;"	d	language:C++
TERMCODE_LOCAL	termcodes.h	32;"	d	language:C++
TERMCODE_NONE	termcodes.h	28;"	d	language:C++
TERMCODE_OUTPUT	termcodes.h	31;"	d	language:C++
THETA	libtomcrypt/src/ciphers/noekeon.c	47;"	d	language:C	file:
THE_MASK	libtommath/mtest/mtest.c	32;"	d	language:C	file:
THE_MASK	libtommath/mtest/mtest.c	34;"	d	language:C	file:
TIMES	libtomcrypt/testprof/tomcrypt_test.h	42;"	d	language:C++
TIMES	libtommath/etc/tune.c	11;"	d	language:C	file:
TIMESPEC_TO_TIMEVAL	sftp-server/defines.h	417;"	d	language:C++
TIMEVAL_TO_TIMESPEC	scpmisc.h	64;"	d	language:C++
TIMEVAL_TO_TIMESPEC	sftp-server/defines.h	410;"	d	language:C++
TIME_WITH_SYS_TIME	config.h	383;"	d	language:C++
TIMFUNC	libtommath/demo/timing.c	/^static ulong64 TIMFUNC(void)$/;"	f	language:C	file:	signature:(void)
TIMFUNC	libtommath/etc/tune.c	/^static ulong64 TIMFUNC (void)$/;"	f	language:C	file:	signature:(void)
TIOCGPGRP	sftp-server/openbsd-compat/bsd-cray.h	56;"	d	language:C++
TOMCRYPT_CFG_H	libtomcrypt/src/headers/tomcrypt_cfg.h	8;"	d	language:C++
TOMCRYPT_CUSTOM_H_	libtomcrypt/src/headers/tomcrypt_custom.h	2;"	d	language:C++
TOMCRYPT_H_	libtomcrypt/src/headers/tomcrypt.h	2;"	d	language:C++
TOOLARGE	sftp-server/openbsd-compat/strtonum.c	31;"	d	language:C	file:
TOOM_MUL_CUTOFF	libtommath/bncore.c	/^        TOOM_MUL_CUTOFF      = 350,      \/* no optimal values of these are known yet so set em high *\/$/;"	v	language:C
TOOM_MUL_CUTOFF	libtommath/pre_gen/mpi.c	/^        TOOM_MUL_CUTOFF      = 350,      \/* no optimal values of these are known yet so set em high *\/$/;"	v	language:C
TOOM_SQR_CUTOFF	libtommath/bncore.c	/^        TOOM_SQR_CUTOFF      = 400; $/;"	v	language:C
TOOM_SQR_CUTOFF	libtommath/pre_gen/mpi.c	/^        TOOM_SQR_CUTOFF      = 400; $/;"	v	language:C
TOOSMALL	sftp-server/openbsd-compat/strtonum.c	30;"	d	language:C	file:
TRACE	debug.h	65;"	d	language:C++
TRACE	debug.h	67;"	d	language:C++
TRANS_MAX_PAYLOAD_LEN	options.h	283;"	d	language:C++
TRANS_MAX_WINDOW	sysoptions.h	108;"	d	language:C++
TRANS_MAX_WIN_INCR	sysoptions.h	109;"	d	language:C++
TWOFISH	libtomcrypt/src/headers/tomcrypt_custom.h	102;"	d	language:C++
TWOFISH  _SMALL and TWOFISH  _TABLES	libtomcrypt/crypt.tex	/^build to the most minimum of useful functionality.$/;"	u	language:Tex
TWOFISH_SMALL	libtomcrypt/src/headers/tomcrypt_custom.h	107;"	d	language:C++
TWOFISH_TABLES	libtomcrypt/src/ciphers/twofish/twofish.c	23;"	d	language:C	file:
T_RRSIG	sftp-server/openbsd-compat/getrrsetbyname.h	66;"	d	language:C++
Td0	libtomcrypt/src/ciphers/aes/aes_tab.c	311;"	d	language:C	file:
Td0	libtomcrypt/src/ciphers/aes/aes_tab.c	328;"	d	language:C	file:
Td1	libtomcrypt/src/ciphers/aes/aes_tab.c	312;"	d	language:C	file:
Td1	libtomcrypt/src/ciphers/aes/aes_tab.c	329;"	d	language:C	file:
Td2	libtomcrypt/src/ciphers/aes/aes_tab.c	313;"	d	language:C	file:
Td2	libtomcrypt/src/ciphers/aes/aes_tab.c	330;"	d	language:C	file:
Td3	libtomcrypt/src/ciphers/aes/aes_tab.c	314;"	d	language:C	file:
Td3	libtomcrypt/src/ciphers/aes/aes_tab.c	331;"	d	language:C	file:
Td4	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 Td4[256] = {$/;"	v	language:C	file:
Te0	libtomcrypt/src/ciphers/aes/aes_tab.c	306;"	d	language:C	file:
Te0	libtomcrypt/src/ciphers/aes/aes_tab.c	323;"	d	language:C	file:
Te1	libtomcrypt/src/ciphers/aes/aes_tab.c	307;"	d	language:C	file:
Te1	libtomcrypt/src/ciphers/aes/aes_tab.c	324;"	d	language:C	file:
Te2	libtomcrypt/src/ciphers/aes/aes_tab.c	308;"	d	language:C	file:
Te2	libtomcrypt/src/ciphers/aes/aes_tab.c	325;"	d	language:C	file:
Te3	libtomcrypt/src/ciphers/aes/aes_tab.c	309;"	d	language:C	file:
Te3	libtomcrypt/src/ciphers/aes/aes_tab.c	326;"	d	language:C	file:
Te4	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 Te4[256] = {$/;"	v	language:C	file:
Te4_0	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 Te4_0[] = {$/;"	v	language:C	file:
Te4_0	libtomcrypt/src/ciphers/aes/aes_tab.c	316;"	d	language:C	file:
Te4_1	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 Te4_1[] = {$/;"	v	language:C	file:
Te4_1	libtomcrypt/src/ciphers/aes/aes_tab.c	317;"	d	language:C	file:
Te4_2	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 Te4_2[] = {$/;"	v	language:C	file:
Te4_2	libtomcrypt/src/ciphers/aes/aes_tab.c	318;"	d	language:C	file:
Te4_3	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 Te4_3[] = {$/;"	v	language:C	file:
Te4_3	libtomcrypt/src/ciphers/aes/aes_tab.c	319;"	d	language:C	file:
TermCode	termcodes.h	/^struct TermCode {$/;"	s	language:C++
TermCode::mapcode	termcodes.h	/^	unsigned int mapcode;$/;"	m	language:C++	struct:TermCode	access:public
TermCode::type	termcodes.h	/^	unsigned char type;$/;"	m	language:C++	struct:TermCode	access:public
The Application Programming Interface  API 	libtomcrypt/crypt.tex	/^time to time.$/;"	c	language:Tex
The Secure PRNG Interface	libtomcrypt/crypt.tex	/^\\end{small}$/;"	u	language:Tex
This will free all of the memory allocated by der_decode_sequence_flexi().
Tks0	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 Tks0[] = {$/;"	v	language:C	file:
Tks1	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 Tks1[] = {$/;"	v	language:C	file:
Tks2	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 Tks2[] = {$/;"	v	language:C	file:
Tks3	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 Tks3[] = {$/;"	v	language:C	file:
To ASCII	libtommath/bn.tex	/^\\section{ASCII Conversions}$/;"	u	language:Tex
To free the list use the following function.
Tuning Polynomial Basis Routines	libtommath/bn.tex	/^of the speed difference.  $/;"	s	language:Tex
UNDEFED_HASH	libtomcrypt/src/hashes/chc/chc.c	21;"	d	language:C	file:
UNDER_CE	libtomcrypt/src/prngs/rng_get_bytes.c	93;"	d	language:C	file:
UNUSED	includes.h	149;"	d	language:C++
UNUSED	includes.h	151;"	d	language:C++
UNUSED	includes.h	153;"	d	language:C++
UNVIS_END	sftp-server/openbsd-compat/vis.h	80;"	d	language:C++
UNVIS_ERROR	sftp-server/openbsd-compat/vis.h	75;"	d	language:C++
UNVIS_NOCHAR	sftp-server/openbsd-compat/vis.h	73;"	d	language:C++
UNVIS_SYNBAD	sftp-server/openbsd-compat/vis.h	74;"	d	language:C++
UNVIS_VALID	sftp-server/openbsd-compat/vis.h	71;"	d	language:C++
UNVIS_VALIDPUSH	sftp-server/openbsd-compat/vis.h	72;"	d	language:C++
UPDATE_INTERVAL	progressmeter.c	36;"	d	language:C	file:
USED	libtommath/mtest/mpi.h	57;"	d	language:C++
USED	libtommath/tommath.h	188;"	d	language:C++
USERAUTH_FAIL_RCVD	session.h	/^	USERAUTH_FAIL_RCVD,$/;"	e	language:C++	enum:__anon14
USERAUTH_REQ_SENT	session.h	/^	USERAUTH_REQ_SENT,$/;"	e	language:C++	enum:__anon14
USERAUTH_SUCCESS_RCVD	session.h	/^	USERAUTH_SUCCESS_RCVD,$/;"	e	language:C++	enum:__anon14
USER_PATH	sftp-server/config.h	1377;"	d	language:C++
USE_AIX_KRB_NAME	sftp-server/openbsd-compat/port-aix.h	99;"	d	language:C++
USE_BBS	libtomcrypt/src/math/rand_prime.c	18;"	d	language:C	file:
USE_BTMP	sftp-server/config.h	1386;"	d	language:C++
USE_GETGRSET	sftp-server/openbsd-compat/port-aix.h	123;"	d	language:C++
USE_LASTLOG	loginrec.h	93;"	d	language:C++
USE_LASTLOG	sftp-server/defines.h	698;"	d	language:C++
USE_LIBIAF	sftp-server/defines.h	712;"	d	language:C++
USE_LOGIN	loginrec.h	71;"	d	language:C++
USE_LOGIN	sftp-server/defines.h	672;"	d	language:C++
USE_SHADOW	sftp-server/defines.h	667;"	d	language:C++
USE_SHADOW	sftp-server/defines.h	703;"	d	language:C++
USE_UTMP	loginrec.h	80;"	d	language:C++
USE_UTMP	sftp-server/defines.h	681;"	d	language:C++
USE_UTMPX	loginrec.h	77;"	d	language:C++
USE_UTMPX	sftp-server/defines.h	678;"	d	language:C++
USE_VHANGUP	sftp-server/defines.h	556;"	d	language:C++
USE_WTMP	loginrec.h	86;"	d	language:C++
USE_WTMP	sftp-server/defines.h	687;"	d	language:C++
USE_WTMPX	loginrec.h	83;"	d	language:C++
USE_WTMPX	sftp-server/defines.h	684;"	d	language:C++
USING_LISTENERS	sysoptions.h	162;"	d	language:C++
UTMPX_USE_LIBRARY	loginrec.c	812;"	d	language:C	file:
UTMP_FILE	loginrec.h	41;"	d	language:C++
UTMP_FILE	loginrec.h	44;"	d	language:C++
UTMP_FILE	sftp-server/defines.h	639;"	d	language:C++
UTMP_FILE	sftp-server/defines.h	642;"	d	language:C++
UTMP_USE_LIBRARY	loginrec.c	659;"	d	language:C	file:
UT_LINESIZE	sftp-server/defines.h	693;"	d	language:C++
Unrestricted Dimminshed Radix	libtommath/bn.tex	/^equal to the correct residue.$/;"	s	language:Tex
UserDataS	svr-authpam.c	/^struct UserDataS {$/;"	s	language:C	file:
UserDataS::passwd	svr-authpam.c	/^	char* passwd;$/;"	m	language:C	struct:UserDataS	file:	access:public
UserDataS::user	svr-authpam.c	/^	char* user;$/;"	m	language:C	struct:UserDataS	file:	access:public
VALID_CIDR_CHARS	sftp-server/addrmatch.c	472;"	d	language:C	file:
VIS_CSTYLE	sftp-server/openbsd-compat/vis.h	50;"	d	language:C++
VIS_GLOB	sftp-server/openbsd-compat/vis.h	66;"	d	language:C++
VIS_NL	sftp-server/openbsd-compat/vis.h	58;"	d	language:C++
VIS_NOSLASH	sftp-server/openbsd-compat/vis.h	65;"	d	language:C++
VIS_OCTAL	sftp-server/openbsd-compat/vis.h	49;"	d	language:C++
VIS_SAFE	sftp-server/openbsd-compat/vis.h	60;"	d	language:C++
VIS_SP	sftp-server/openbsd-compat/vis.h	56;"	d	language:C++
VIS_TAB	sftp-server/openbsd-compat/vis.h	57;"	d	language:C++
VIS_WHITE	sftp-server/openbsd-compat/vis.h	59;"	d	language:C++
WCOREDUMP	sftp-server/openbsd-compat/bsd-waitpid.h	45;"	d	language:C++
WCOREFLAG	sftp-server/openbsd-compat/bsd-waitpid.h	44;"	d	language:C++
WEEKS	sftp-server/misc.c	276;"	d	language:C	file:
WEXITSTATUS	sftp-server/openbsd-compat/bsd-waitpid.h	42;"	d	language:C++
WHITESPACE	sftp-server/misc.c	155;"	d	language:C	file:
WIFEXITED	sftp-server/openbsd-compat/bsd-waitpid.h	33;"	d	language:C++
WIFEXITED	sftp-server/openbsd-compat/bsd-waitpid.h	39;"	d	language:C++
WIFSIGNALED	sftp-server/openbsd-compat/bsd-waitpid.h	35;"	d	language:C++
WIFSIGNALED	sftp-server/openbsd-compat/bsd-waitpid.h	41;"	d	language:C++
WIFSTOPPED	sftp-server/openbsd-compat/bsd-waitpid.h	34;"	d	language:C++
WIFSTOPPED	sftp-server/openbsd-compat/bsd-waitpid.h	40;"	d	language:C++
WINSIZE	libtomcrypt/src/pk/ecc/ltc_ecc_mulmod.c	216;"	d	language:C	file:
WINSIZE	libtomcrypt/src/pk/ecc/ltc_ecc_mulmod.c	28;"	d	language:C	file:
WORD2BYTE	libtomcrypt/src/prngs/sober128.c	52;"	d	language:C	file:
WPV	libtomcrypt/src/encauth/gcm/gcm_gf_mult.c	109;"	d	language:C	file:
WTERMSIG	sftp-server/openbsd-compat/bsd-waitpid.h	43;"	d	language:C++
WTMP_FILE	loginrec.h	50;"	d	language:C++
WTMP_FILE	loginrec.h	53;"	d	language:C++
WTMP_FILE	sftp-server/defines.h	648;"	d	language:C++
WTMP_FILE	sftp-server/defines.h	651;"	d	language:C++
What the library IS for 	libtomcrypt/crypt.tex	/^also performs extensive parameter error checking to prevent any number of run-time exploits or errors.$/;"	u	language:Tex
Where textit{password} is the user s password. Since the algorithm allows binary passwords you must also specify the length in textit  password  _len	libtomcrypt/crypt.tex	/^can walk up and down the nodes without keeping pointers lying around.$/;"	b	language:Tex
Worder	libtomcrypt/src/hashes/md5.c	/^static const unsigned char Worder[64] = {$/;"	v	language:C	file:
X	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char chksum[16], X[48], buf[16];$/;"	m	language:C++	struct:md2_state	access:public
X	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       X[16],        \/* accumulator *\/$/;"	m	language:C++	struct:__anon51	access:public
X clock routines	libtomcrypt/crypt.tex	/^bios code uses these macros to redirect to very compact heap and string operations.$/;"	u	language:Tex
X memory routines	libtomcrypt/crypt.tex	/^There are also options you can specify from the \\textit{tomcrypt\\_custom.h} header file.$/;"	u	language:Tex
X11BASEPORT	svr-x11fwd.c	38;"	d	language:C	file:
X11BINDBASE	svr-x11fwd.c	39;"	d	language:C	file:
XAUTH_COMMAND	options.h	246;"	d	language:C++
XAUTH_PATH	sftp-server/config.h	1430;"	d	language:C++
XCALLOC	libtomcrypt/src/headers/tomcrypt_cfg.h	/^LTC_EXPORT void * LTC_CALL XCALLOC(size_t n, size_t s);$/;"	p	language:C++	signature:(size_t n, size_t s)
XCALLOC	libtomcrypt/src/headers/tomcrypt_custom.h	24;"	d	language:C++
XCALLOC	libtommath/tommath.h	/^      extern void *XCALLOC(size_t n, size_t s);$/;"	p	language:C++	signature:(size_t n, size_t s)
XCALLOC	libtommath/tommath.h	114;"	d	language:C++
XCLOCK	libtomcrypt/src/headers/tomcrypt_cfg.h	/^LTC_EXPORT clock_t LTC_CALL XCLOCK(void);$/;"	p	language:C++	signature:(void)
XCLOCK	libtomcrypt/src/headers/tomcrypt_custom.h	59;"	d	language:C++
XCLOCKS_PER_SEC	libtomcrypt/src/headers/tomcrypt_custom.h	62;"	d	language:C++
XFREE	libtomcrypt/src/headers/tomcrypt_cfg.h	/^LTC_EXPORT void LTC_CALL XFREE(void *p);$/;"	p	language:C++	signature:(void *p)
XFREE	libtomcrypt/src/headers/tomcrypt_custom.h	30;"	d	language:C++
XFREE	libtommath/tommath.h	/^      extern void XFREE(void *p);$/;"	p	language:C++	signature:(void *p)
XFREE	libtommath/tommath.h	112;"	d	language:C++
XMALLOC	libtomcrypt/src/headers/tomcrypt_cfg.h	/^LTC_EXPORT void * LTC_CALL XMALLOC(size_t n);$/;"	p	language:C++	signature:(size_t n)
XMALLOC	libtomcrypt/src/headers/tomcrypt_custom.h	12;"	d	language:C++
XMALLOC	libtommath/tommath.h	/^      extern void *XMALLOC(size_t n);$/;"	p	language:C++	signature:(size_t n)
XMALLOC	libtommath/tommath.h	111;"	d	language:C++
XMEMCMP	libtomcrypt/src/headers/tomcrypt_cfg.h	/^LTC_EXPORT int   LTC_CALL XMEMCMP(const void *s1, const void *s2, size_t n);$/;"	p	language:C++	signature:(const void *s1, const void *s2, size_t n)
XMEMCMP	libtomcrypt/src/headers/tomcrypt_custom.h	49;"	d	language:C++
XMEMCPY	libtomcrypt/src/headers/tomcrypt_cfg.h	/^LTC_EXPORT void * LTC_CALL XMEMCPY(void *dest, const void *src, size_t n);$/;"	p	language:C++	signature:(void *dest, const void *src, size_t n)
XMEMCPY	libtomcrypt/src/headers/tomcrypt_custom.h	43;"	d	language:C++
XMEMSET	libtomcrypt/src/headers/tomcrypt_cfg.h	/^LTC_EXPORT void * LTC_CALL XMEMSET(void *s, int c, size_t n);$/;"	p	language:C++	signature:(void *s, int c, size_t n)
XMEMSET	libtomcrypt/src/headers/tomcrypt_custom.h	37;"	d	language:C++
XORNL	libtomcrypt/src/prngs/sober128.c	172;"	d	language:C	file:
XORWORD	libtomcrypt/src/prngs/sober128.c	/^static void XORWORD(ulong32 w, unsigned char *b)$/;"	f	language:C	file:	signature:(ulong32 w, unsigned char *b)
XQSORT	libtomcrypt/src/headers/tomcrypt_cfg.h	/^LTC_EXPORT void LTC_CALL XQSORT(void *base, size_t nmemb, size_t size, int(*compar)(const void *, const void *));$/;"	p	language:C++	signature:(void *base, size_t nmemb, size_t size, int(*compar)(const void *, const void *))
XREALLOC	libtomcrypt/src/headers/tomcrypt_cfg.h	/^LTC_EXPORT void * LTC_CALL XREALLOC(void *p, size_t n);$/;"	p	language:C++	signature:(void *p, size_t n)
XREALLOC	libtomcrypt/src/headers/tomcrypt_custom.h	18;"	d	language:C++
XREALLOC	libtommath/tommath.h	/^      extern void *XREALLOC(void *p, size_t n);$/;"	p	language:C++	signature:(void *p, size_t n)
XREALLOC	libtommath/tommath.h	113;"	d	language:C++
XSTRCMP	libtomcrypt/src/headers/tomcrypt_cfg.h	/^LTC_EXPORT int   LTC_CALL XSTRCMP(const char *s1, const char *s2);$/;"	p	language:C++	signature:(const char *s1, const char *s2)
XSTRCMP	libtomcrypt/src/headers/tomcrypt_custom.h	55;"	d	language:C++
X_UNIX_PATH	sftp-server/defines.h	371;"	d	language:C++
X_UNIX_PATH	sftp-server/defines.h	373;"	d	language:C++
Y	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       Y[16],        \/* counter *\/$/;"	m	language:C++	struct:__anon51	access:public
YY	libtomcrypt/src/headers/tomcrypt_pk.h	/^   unsigned YY, \/* year *\/$/;"	m	language:C++	struct:__anon39	access:public
Y_0	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       Y_0[16],      \/* initial counter *\/$/;"	m	language:C++	struct:__anon51	access:public
Yarrow	libtomcrypt/crypt.tex	/^\\end{figure}$/;"	b	language:Tex
ZLIB_COMPRESS_INCR	packet.c	44;"	d	language:C	file:
ZLIB_DECOMPRESS_INCR	packet.c	45;"	d	language:C	file:
ZPOS	libtommath/mtest/mpi.h	38;"	d	language:C++
_AGENTFWD_H_	agentfwd.h	25;"	d	language:C++
_ALGO_H_	algo.h	27;"	d	language:C++
_AUTH_H_	auth.h	26;"	d	language:C++
_BIGNUM_H_	bignum.h	26;"	d	language:C++
_BSD_BASE64_H	sftp-server/openbsd-compat/base64.h	46;"	d	language:C++
_BSD_CRAY_H	sftp-server/openbsd-compat/bsd-cray.h	37;"	d	language:C++
_BSD_CYGWIN_UTIL_H	sftp-server/openbsd-compat/bsd-cygwin_util.h	33;"	d	language:C++
_BSD_MISC_H	sftp-server/openbsd-compat/bsd-misc.h	20;"	d	language:C++
_BSD_WAITPID_H	sftp-server/openbsd-compat/bsd-waitpid.h	29;"	d	language:C++
_BUFFER_H_	buffer.h	27;"	d	language:C++
_CHANNEL_H_	channel.h	26;"	d	language:C++
_CHANSESSION_H_	chansession.h	26;"	d	language:C++
_CIRCBUFFER_H_	circbuffer.h	26;"	d	language:C++
_COMPAT_H_	compat.h	26;"	d	language:C++
_COMPAT_POLL_H_	sftp-server/openbsd-compat/bsd-poll.h	32;"	d	language:C++
_DBUTIL_H_	dbutil.h	27;"	d	language:C++
_DEBUG_H_	debug.h	26;"	d	language:C++
_DEFINES_H	sftp-server/defines.h	26;"	d	language:C++
_DROPBEAR_LIST_H	list.h	2;"	d	language:C++
_DSS_H_	dss.h	26;"	d	language:C++
_FAKE_QUEUE_H_	sftp-server/openbsd-compat/sys-queue.h	38;"	d	language:C++
_FAKE_RFC2553_H	fake-rfc2553.h	43;"	d	language:C++
_FAKE_RFC2553_H	sftp-server/openbsd-compat/fake-rfc2553.h	41;"	d	language:C++
_FILE_OFFSET_BITS	config.h	389;"	d	language:C++
_FILE_OFFSET_BITS	sftp-server/config.h	1433;"	d	language:C++
_GENDSS_H_	gendss.h	26;"	d	language:C++
_GENRSA_H_	genrsa.h	26;"	d	language:C++
_GETRRSETBYNAME_H	sftp-server/openbsd-compat/getrrsetbyname.h	49;"	d	language:C++
_GLOB_H_	sftp-server/openbsd-compat/glob.h	46;"	d	language:C++
_GNU_SOURCE	sftp-server/includes.h	21;"	d	language:C++
_HAVE_LOGINREC_H_	loginrec.h	2;"	d	language:C++
_H_MPI_	libtommath/mtest/mpi.h	13;"	d	language:C++
_INCLUDES_H_	includes.h	26;"	d	language:C++
_INCLUDE__STDC__	sftp-server/includes.h	161;"	d	language:C++
_KEX_H_	kex.h	26;"	d	language:C++
_KEYIMPORT_H_	keyimport.h	26;"	d	language:C++
_LISTENER_H	listener.h	26;"	d	language:C++
_MISC_H	sftp-server/misc.h	16;"	d	language:C++
_NEXT_POSIX_H	sftp-server/openbsd-compat/bsd-nextstep.h	29;"	d	language:C++
_NSIG	sftp-server/defines.h	758;"	d	language:C++
_NSIG	sftp-server/defines.h	760;"	d	language:C++
_OPENBSD_COMPAT_H	sftp-server/openbsd-compat/openbsd-compat.h	30;"	d	language:C++
_OPTIONS_H_	options.h	6;"	d	language:C++
_PACKET_H_	packet.h	27;"	d	language:C++
_PATH_BSHELL	sftp-server/defines.h	325;"	d	language:C++
_PATH_BTMP	sftp-server/config.h	1439;"	d	language:C++
_PATH_BTMP	sftp-server/defines.h	717;"	d	language:C++
_PATH_CP	sysoptions.h	55;"	d	language:C++
_PATH_DEVNULL	compat.h	53;"	d	language:C++
_PATH_DEVNULL	sftp-server/defines.h	344;"	d	language:C++
_PATH_MAILDIR	sftp-server/defines.h	356;"	d	language:C++
_PATH_NOLOGIN	sftp-server/defines.h	360;"	d	language:C++
_PATH_PASSWD_PROG	sftp-server/config.h	1442;"	d	language:C++
_PATH_SSH_PIDDIR	sftp-server/config.h	1445;"	d	language:C++
_PATH_SSH_PROGRAM	options.h	258;"	d	language:C++
_PATH_STDPATH	sftp-server/defines.h	330;"	d	language:C++
_PATH_STDPATH	sftp-server/defines.h	332;"	d	language:C++
_PATH_STDPATH	sftp-server/defines.h	336;"	d	language:C++
_PATH_TTY	sftp-server/defines.h	379;"	d	language:C++
_PATH_TTY	sysoptions.h	53;"	d	language:C++
_PATH_UNIX_X	sftp-server/defines.h	376;"	d	language:C++
_PATH_XAUTH	sftp-server/defines.h	365;"	d	language:C++
_PORT_IRIX_H	sftp-server/openbsd-compat/port-irix.h	29;"	d	language:C++
_PORT_LINUX_H	sftp-server/openbsd-compat/port-linux.h	20;"	d	language:C++
_PORT_TUN_H	sftp-server/openbsd-compat/port-tun.h	18;"	d	language:C++
_QUEUE_H_	queue.h	26;"	d	language:C++
_Q_INVALIDATE	sftp-server/openbsd-compat/sys-queue.h	171;"	d	language:C++
_Q_INVALIDATE	sftp-server/openbsd-compat/sys-queue.h	173;"	d	language:C++
_RANDOMS_H	sftp-server/entropy.h	28;"	d	language:C++
_RANDOM_H_	random.h	26;"	d	language:C++
_READPASSPHRASE_H_	sftp-server/openbsd-compat/readpassphrase.h	26;"	d	language:C++
_RSA_H_	rsa.h	26;"	d	language:C++
_RUNOPTS_H_	runopts.h	26;"	d	language:C++
_SERVICE_H_	service.h	26;"	d	language:C++
_SESSION_H_	session.h	26;"	d	language:C++
_SFTP_CLIENT_H	sftp-server/sftp-client.h	22;"	d	language:C++
_SHA256_CTX	sftp-server/openbsd-compat/sha2.h	/^typedef struct _SHA256_CTX {$/;"	s	language:C++
_SHA256_CTX::bitcount	sftp-server/openbsd-compat/sha2.h	/^	u_int64_t	bitcount;$/;"	m	language:C++	struct:_SHA256_CTX	access:public
_SHA256_CTX::buffer	sftp-server/openbsd-compat/sha2.h	/^	u_int8_t	buffer[SHA256_BLOCK_LENGTH];$/;"	m	language:C++	struct:_SHA256_CTX	access:public
_SHA256_CTX::state	sftp-server/openbsd-compat/sha2.h	/^	u_int32_t	state[8];$/;"	m	language:C++	struct:_SHA256_CTX	access:public
_SHA512_CTX	sftp-server/openbsd-compat/sha2.h	/^typedef struct _SHA512_CTX {$/;"	s	language:C++
_SHA512_CTX::bitcount	sftp-server/openbsd-compat/sha2.h	/^	u_int64_t	bitcount[2];$/;"	m	language:C++	struct:_SHA512_CTX	access:public
_SHA512_CTX::buffer	sftp-server/openbsd-compat/sha2.h	/^	u_int8_t	buffer[SHA512_BLOCK_LENGTH];$/;"	m	language:C++	struct:_SHA512_CTX	access:public
_SHA512_CTX::state	sftp-server/openbsd-compat/sha2.h	/^	u_int64_t	state[8];$/;"	m	language:C++	struct:_SHA512_CTX	access:public
_SIGACTION_H	sftp-server/openbsd-compat/sigact.h	46;"	d	language:C++
_SIGNKEY_H_	signkey.h	26;"	d	language:C++
_SSHSHA2_H	sftp-server/openbsd-compat/sha2.h	40;"	d	language:C++
_SS_MAXSIZE	fake-rfc2553.h	55;"	d	language:C++
_SS_MAXSIZE	sftp-server/openbsd-compat/fake-rfc2553.h	53;"	d	language:C++
_SS_PADSIZE	fake-rfc2553.h	56;"	d	language:C++
_SS_PADSIZE	sftp-server/openbsd-compat/fake-rfc2553.h	54;"	d	language:C++
_STRUCT_WINSIZE	sftp-server/defines.h	308;"	d	language:C++
_S_IWUSR	sftp-server/defines.h	113;"	d	language:C++
_Safer_Expand_Userkey	libtomcrypt/src/ciphers/safer/safer.c	/^static void _Safer_Expand_Userkey(const unsigned char *userkey_1,$/;"	f	language:C	file:	signature:(const unsigned char *userkey_1, const unsigned char *userkey_2, unsigned int nof_rounds, int strengthened, safer_key_t key)
_TCPFWD_H	tcpfwd.h	25;"	d	language:C++
_TERMCODES_H_	termcodes.h	26;"	d	language:C++
_VIS_H_	sftp-server/openbsd-compat/vis.h	41;"	d	language:C++
_WIN32_WINNT	libtomcrypt/src/prngs/rng_get_bytes.c	91;"	d	language:C	file:
_W_INT	sftp-server/openbsd-compat/bsd-waitpid.h	38;"	d	language:C++
_X11FWD_H_	x11fwd.h	25;"	d	language:C++
__BIT_TYPES_DEFINED__	sftp-server/defines.h	221;"	d	language:C++
__CMSG_ALIGN	sftp-server/defines.h	458;"	d	language:C++
__P	sftp-server/defines.h	424;"	d	language:C++
__TEST_H_	libtomcrypt/testprof/tomcrypt_test.h	3;"	d	language:C++
__anon17::buf	scp.c	/^	char *buf;$/;"	m	language:C	struct:__anon17	file:	access:public
__anon17::cnt	scp.c	/^	size_t cnt;$/;"	m	language:C	struct:__anon17	file:	access:public
__anon18::alloc	libtommath/tommath.h	/^    int used, alloc, sign;$/;"	m	language:C++	struct:__anon18	access:public
__anon18::dp	libtommath/tommath.h	/^    mp_digit *dp;$/;"	m	language:C++	struct:__anon18	access:public
__anon18::sign	libtommath/tommath.h	/^    int used, alloc, sign;$/;"	m	language:C++	struct:__anon18	access:public
__anon18::used	libtommath/tommath.h	/^    int used, alloc, sign;$/;"	m	language:C++	struct:__anon18	access:public
__anon19::code	libtommath/bn_error.c	/^     int code;$/;"	m	language:C	struct:__anon19	file:	access:public
__anon19::msg	libtommath/bn_error.c	/^     char *msg;$/;"	m	language:C	struct:__anon19	file:	access:public
__anon1::d	rsa.h	/^	mp_int* d;$/;"	m	language:C++	struct:__anon1	access:public
__anon1::e	rsa.h	/^	mp_int* e;$/;"	m	language:C++	struct:__anon1	access:public
__anon1::n	rsa.h	/^	mp_int* n;$/;"	m	language:C++	struct:__anon1	access:public
__anon1::p	rsa.h	/^	mp_int* p;$/;"	m	language:C++	struct:__anon1	access:public
__anon1::q	rsa.h	/^	mp_int* q;$/;"	m	language:C++	struct:__anon1	access:public
__anon20::k	libtommath/bn_mp_prime_rabin_miller_trials.c	/^   int k, t;$/;"	m	language:C	struct:__anon20	file:	access:public
__anon20::t	libtommath/bn_mp_prime_rabin_miller_trials.c	/^   int k, t;$/;"	m	language:C	struct:__anon20	file:	access:public
__anon21::code	libtommath/pre_gen/mpi.c	/^     int code;$/;"	m	language:C	struct:__anon21	file:	access:public
__anon21::msg	libtommath/pre_gen/mpi.c	/^     char *msg;$/;"	m	language:C	struct:__anon21	file:	access:public
__anon22::k	libtommath/pre_gen/mpi.c	/^   int k, t;$/;"	m	language:C	struct:__anon22	file:	access:public
__anon22::t	libtommath/pre_gen/mpi.c	/^   int k, t;$/;"	m	language:C	struct:__anon22	file:	access:public
__anon23::alloc	libtommath/mtest/mpi.h	/^  mp_size       alloc;   \/* how many digits allocated  *\/$/;"	m	language:C++	struct:__anon23	access:public
__anon23::dp	libtommath/mtest/mpi.h	/^  mp_digit     *dp;      \/* the digits themselves      *\/$/;"	m	language:C++	struct:__anon23	access:public
__anon23::sign	libtommath/mtest/mpi.h	/^  mp_sign       sign;    \/* sign of this quantity      *\/$/;"	m	language:C++	struct:__anon23	access:public
__anon23::used	libtommath/mtest/mpi.h	/^  mp_size       used;    \/* how many digits used       *\/$/;"	m	language:C++	struct:__anon23	access:public
__anon24::code	libtomcrypt/src/pk/asn1/der/ia5/der_length_ia5_string.c	/^   int code, value;$/;"	m	language:C	struct:__anon24	file:	access:public
__anon24::value	libtomcrypt/src/pk/asn1/der/ia5/der_length_ia5_string.c	/^   int code, value;$/;"	m	language:C	struct:__anon24	file:	access:public
__anon25::code	libtomcrypt/src/pk/asn1/der/printable_string/der_length_printable_string.c	/^   int code, value;$/;"	m	language:C	struct:__anon25	file:	access:public
__anon25::value	libtomcrypt/src/pk/asn1/der/printable_string/der_length_printable_string.c	/^   int code, value;$/;"	m	language:C	struct:__anon25	file:	access:public
__anon26::len	libtomcrypt/src/mac/pmac/pmac_init.c	/^    int           len;$/;"	m	language:C	struct:__anon26	file:	access:public
__anon26::poly_div	libtomcrypt/src/mac/pmac/pmac_init.c	/^    unsigned char poly_div[MAXBLOCKSIZE], $/;"	m	language:C	struct:__anon26	file:	access:public
__anon26::poly_mul	libtomcrypt/src/mac/pmac/pmac_init.c	/^                  poly_mul[MAXBLOCKSIZE];$/;"	m	language:C	struct:__anon26	file:	access:public
__anon27::len	libtomcrypt/src/encauth/ocb/ocb_init.c	/^    int           len;$/;"	m	language:C	struct:__anon27	file:	access:public
__anon27::poly_div	libtomcrypt/src/encauth/ocb/ocb_init.c	/^    unsigned char poly_div[MAXBLOCKSIZE], $/;"	m	language:C	struct:__anon27	file:	access:public
__anon27::poly_mul	libtomcrypt/src/encauth/ocb/ocb_init.c	/^                  poly_mul[MAXBLOCKSIZE];$/;"	m	language:C	struct:__anon27	file:	access:public
__anon28::ltc_code	libtomcrypt/src/math/ltm_desc.c	/^    int mpi_code, ltc_code;$/;"	m	language:C	struct:__anon28	file:	access:public
__anon28::mpi_code	libtomcrypt/src/math/ltm_desc.c	/^    int mpi_code, ltc_code;$/;"	m	language:C	struct:__anon28	file:	access:public
__anon29::ltc_code	libtomcrypt/src/math/tfm_desc.c	/^    int tfm_code, ltc_code;$/;"	m	language:C	struct:__anon29	file:	access:public
__anon29::tfm_code	libtomcrypt/src/math/tfm_desc.c	/^    int tfm_code, ltc_code;$/;"	m	language:C	struct:__anon29	file:	access:public
__anon30::LUT	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^             *LUT[1U<<FP_LUT]; \/* fixed point lookup *\/ $/;"	m	language:C	struct:__anon30	file:	access:public
__anon30::g	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^   ecc_point *g,              \/* cached COPY of base point *\/$/;"	m	language:C	struct:__anon30	file:	access:public
__anon30::lru_count	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^   int        lru_count;      \/* amount of times this entry has been used *\/$/;"	m	language:C	struct:__anon30	file:	access:public
__anon30::mu	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^   void      *mu;             \/* copy of the montgomery constant *\/$/;"	m	language:C	struct:__anon30	file:	access:public
__anon31::ham	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^   int ham, terma, termb;$/;"	m	language:C	struct:__anon31	file:	access:public
__anon31::terma	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^   int ham, terma, termb;$/;"	m	language:C	struct:__anon31	file:	access:public
__anon31::termb	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^   int ham, terma, termb;$/;"	m	language:C	struct:__anon31	file:	access:public
__anon34::B	libtomcrypt/src/headers/tomcrypt_pk.h	/^   char *B;$/;"	m	language:C++	struct:__anon34	access:public
__anon34::Gx	libtomcrypt/src/headers/tomcrypt_pk.h	/^   char *Gx;$/;"	m	language:C++	struct:__anon34	access:public
__anon34::Gy	libtomcrypt/src/headers/tomcrypt_pk.h	/^   char *Gy;$/;"	m	language:C++	struct:__anon34	access:public
__anon34::name	libtomcrypt/src/headers/tomcrypt_pk.h	/^   char *name; $/;"	m	language:C++	struct:__anon34	access:public
__anon34::order	libtomcrypt/src/headers/tomcrypt_pk.h	/^   char *order;$/;"	m	language:C++	struct:__anon34	access:public
__anon34::prime	libtomcrypt/src/headers/tomcrypt_pk.h	/^   char *prime;$/;"	m	language:C++	struct:__anon34	access:public
__anon34::size	libtomcrypt/src/headers/tomcrypt_pk.h	/^   int size;$/;"	m	language:C++	struct:__anon34	access:public
__anon35::x	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *x;$/;"	m	language:C++	struct:__anon35	access:public
__anon35::y	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *y;$/;"	m	language:C++	struct:__anon35	access:public
__anon35::z	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *z;$/;"	m	language:C++	struct:__anon35	access:public
__anon36::dp	libtomcrypt/src/headers/tomcrypt_pk.h	/^	const ltc_ecc_set_type *dp;$/;"	m	language:C++	struct:__anon36	access:public
__anon36::idx	libtomcrypt/src/headers/tomcrypt_pk.h	/^    int idx;$/;"	m	language:C++	struct:__anon36	access:public
__anon36::k	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *k;$/;"	m	language:C++	struct:__anon36	access:public
__anon36::pubkey	libtomcrypt/src/headers/tomcrypt_pk.h	/^    ecc_point pubkey;$/;"	m	language:C++	struct:__anon36	access:public
__anon36::type	libtomcrypt/src/headers/tomcrypt_pk.h	/^    int type;$/;"	m	language:C++	struct:__anon36	access:public
__anon37::g	libtomcrypt/src/headers/tomcrypt_pk.h	/^   void *g;$/;"	m	language:C++	struct:__anon37	access:public
__anon37::p	libtomcrypt/src/headers/tomcrypt_pk.h	/^   void *p;$/;"	m	language:C++	struct:__anon37	access:public
__anon37::q	libtomcrypt/src/headers/tomcrypt_pk.h	/^   void *q;$/;"	m	language:C++	struct:__anon37	access:public
__anon37::qord	libtomcrypt/src/headers/tomcrypt_pk.h	/^   int qord;$/;"	m	language:C++	struct:__anon37	access:public
__anon37::type	libtomcrypt/src/headers/tomcrypt_pk.h	/^   int type; $/;"	m	language:C++	struct:__anon37	access:public
__anon37::x	libtomcrypt/src/headers/tomcrypt_pk.h	/^   void *x;$/;"	m	language:C++	struct:__anon37	access:public
__anon37::y	libtomcrypt/src/headers/tomcrypt_pk.h	/^   void *y;$/;"	m	language:C++	struct:__anon37	access:public
__anon39::DD	libtomcrypt/src/headers/tomcrypt_pk.h	/^            DD, \/* day *\/$/;"	m	language:C++	struct:__anon39	access:public
__anon39::MM	libtomcrypt/src/headers/tomcrypt_pk.h	/^            MM, \/* month *\/$/;"	m	language:C++	struct:__anon39	access:public
__anon39::YY	libtomcrypt/src/headers/tomcrypt_pk.h	/^   unsigned YY, \/* year *\/$/;"	m	language:C++	struct:__anon39	access:public
__anon39::hh	libtomcrypt/src/headers/tomcrypt_pk.h	/^            hh, \/* hour *\/$/;"	m	language:C++	struct:__anon39	access:public
__anon39::mm	libtomcrypt/src/headers/tomcrypt_pk.h	/^            mm, \/* minute *\/$/;"	m	language:C++	struct:__anon39	access:public
__anon39::off_dir	libtomcrypt/src/headers/tomcrypt_pk.h	/^            off_dir, \/* timezone offset direction 0 == +, 1 == - *\/$/;"	m	language:C++	struct:__anon39	access:public
__anon39::off_hh	libtomcrypt/src/headers/tomcrypt_pk.h	/^            off_hh, \/* timezone offset hours *\/$/;"	m	language:C++	struct:__anon39	access:public
__anon39::off_mm	libtomcrypt/src/headers/tomcrypt_pk.h	/^            off_mm; \/* timezone offset minutes *\/$/;"	m	language:C++	struct:__anon39	access:public
__anon39::ss	libtomcrypt/src/headers/tomcrypt_pk.h	/^            ss, \/* second *\/$/;"	m	language:C++	struct:__anon39	access:public
__anon3::alloc	sftp-server/buffer.h	/^	u_int	 alloc;		\/* Number of bytes allocated for data. *\/$/;"	m	language:C++	struct:__anon3	access:public
__anon3::buf	sftp-server/buffer.h	/^	u_char	*buf;		\/* Buffer for data. *\/$/;"	m	language:C++	struct:__anon3	access:public
__anon3::end	sftp-server/buffer.h	/^	u_int	 end;		\/* Offset of last byte containing data. *\/$/;"	m	language:C++	struct:__anon3	access:public
__anon3::offset	sftp-server/buffer.h	/^	u_int	 offset;	\/* Offset of first byte containing data. *\/$/;"	m	language:C++	struct:__anon3	access:public
__anon40::blocklen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       blocklen;$/;"	m	language:C++	struct:__anon40	access:public
__anon40::cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	language:C++	struct:__anon40	access:public
__anon40::key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	language:C++	struct:__anon40	access:public
__anon41::IV	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned char       IV[MAXBLOCKSIZE], $/;"	m	language:C++	struct:__anon41	access:public
__anon41::blocklen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       blocklen, $/;"	m	language:C++	struct:__anon41	access:public
__anon41::cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	language:C++	struct:__anon41	access:public
__anon41::key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	language:C++	struct:__anon41	access:public
__anon41::pad	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       pad[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon41	access:public
__anon41::padlen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       padlen;$/;"	m	language:C++	struct:__anon41	access:public
__anon42::IV	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned char       IV[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon42	access:public
__anon42::blocklen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       blocklen, $/;"	m	language:C++	struct:__anon42	access:public
__anon42::cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	language:C++	struct:__anon42	access:public
__anon42::key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	language:C++	struct:__anon42	access:public
__anon42::padlen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       padlen;$/;"	m	language:C++	struct:__anon42	access:public
__anon43::IV	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned char       IV[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon43	access:public
__anon43::blocklen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       blocklen;$/;"	m	language:C++	struct:__anon43	access:public
__anon43::cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	language:C++	struct:__anon43	access:public
__anon43::key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	language:C++	struct:__anon43	access:public
__anon44::blocklen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       blocklen, $/;"	m	language:C++	struct:__anon44	access:public
__anon44::cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int                 cipher,$/;"	m	language:C++	struct:__anon44	access:public
__anon44::ctr	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned char       ctr[MAXBLOCKSIZE], $/;"	m	language:C++	struct:__anon44	access:public
__anon44::key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	language:C++	struct:__anon44	access:public
__anon44::mode	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       mode;$/;"	m	language:C++	struct:__anon44	access:public
__anon44::pad	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       pad[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon44	access:public
__anon44::padlen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       padlen, $/;"	m	language:C++	struct:__anon44	access:public
__anon45::IV	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    unsigned char     IV[16],$/;"	m	language:C++	struct:__anon45	access:public
__anon45::PC	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    unsigned char     PC[16][256][16];$/;"	m	language:C++	struct:__anon45	access:public
__anon45::cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    int               cipher;$/;"	m	language:C++	struct:__anon45	access:public
__anon45::key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    symmetric_key     key;$/;"	m	language:C++	struct:__anon45	access:public
__anon45::pad	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                      pad[16];$/;"	m	language:C++	struct:__anon45	access:public
__anon45::tweak	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                      tweak[16],$/;"	m	language:C++	struct:__anon45	access:public
__anon46::IV	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned char       IV[MAXBLOCKSIZE],$/;"	m	language:C++	struct:__anon46	access:public
__anon46::MIV	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       MIV[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon46	access:public
__anon46::blockcnt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32             blockcnt;$/;"	m	language:C++	struct:__anon46	access:public
__anon46::blocklen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       blocklen, $/;"	m	language:C++	struct:__anon46	access:public
__anon46::cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	language:C++	struct:__anon46	access:public
__anon46::key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	language:C++	struct:__anon46	access:public
__anon46::padlen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       padlen;$/;"	m	language:C++	struct:__anon46	access:public
__anon47::Lu	libtomcrypt/src/headers/tomcrypt_mac.h	/^                   Lu[2][MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon47	access:public
__anon47::blklen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                   blklen;$/;"	m	language:C++	struct:__anon47	access:public
__anon47::block	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char   block[MAXBLOCKSIZE],$/;"	m	language:C++	struct:__anon47	access:public
__anon47::buflen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                   buflen,$/;"	m	language:C++	struct:__anon47	access:public
__anon47::cipher_idx	libtomcrypt/src/headers/tomcrypt_mac.h	/^   int             cipher_idx, $/;"	m	language:C++	struct:__anon47	access:public
__anon47::key	libtomcrypt/src/headers/tomcrypt_mac.h	/^   symmetric_key   key;$/;"	m	language:C++	struct:__anon47	access:public
__anon47::prev	libtomcrypt/src/headers/tomcrypt_mac.h	/^                   prev[MAXBLOCKSIZE],$/;"	m	language:C++	struct:__anon47	access:public
__anon48::Li	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     Li[MAXBLOCKSIZE],        \/* value of Li [current value, we calc from previous recall] *\/$/;"	m	language:C++	struct:__anon48	access:public
__anon48::Lr	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     Lr[MAXBLOCKSIZE],        \/* L * x^-1 *\/$/;"	m	language:C++	struct:__anon48	access:public
__anon48::Ls	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char     Ls[32][MAXBLOCKSIZE],    \/* L shifted by i bits to the left *\/$/;"	m	language:C++	struct:__anon48	access:public
__anon48::block	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     block[MAXBLOCKSIZE],     \/* currently accumulated block *\/$/;"	m	language:C++	struct:__anon48	access:public
__anon48::block_index	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned long     block_index;             \/* index # for current block *\/$/;"	m	language:C++	struct:__anon48	access:public
__anon48::block_len	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     block_len,               \/* length of block *\/$/;"	m	language:C++	struct:__anon48	access:public
__anon48::buflen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     buflen;                  \/* number of bytes in the buffer *\/$/;"	m	language:C++	struct:__anon48	access:public
__anon48::checksum	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     checksum[MAXBLOCKSIZE];  \/* current checksum *\/$/;"	m	language:C++	struct:__anon48	access:public
__anon48::cipher_idx	libtomcrypt/src/headers/tomcrypt_mac.h	/^   int               cipher_idx,              \/* cipher idx *\/$/;"	m	language:C++	struct:__anon48	access:public
__anon48::key	libtomcrypt/src/headers/tomcrypt_mac.h	/^   symmetric_key     key;                     \/* scheduled key for cipher *\/$/;"	m	language:C++	struct:__anon48	access:public
__anon49::N	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char N[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon49	access:public
__anon49::ctomac	libtomcrypt/src/headers/tomcrypt_mac.h	/^   omac_state    headeromac, ctomac;$/;"	m	language:C++	struct:__anon49	access:public
__anon49::ctr	libtomcrypt/src/headers/tomcrypt_mac.h	/^   symmetric_CTR ctr;$/;"	m	language:C++	struct:__anon49	access:public
__anon49::headeromac	libtomcrypt/src/headers/tomcrypt_mac.h	/^   omac_state    headeromac, ctomac;$/;"	m	language:C++	struct:__anon49	access:public
__anon4::name	sftp-server/log.c	/^	const char *name;$/;"	m	language:C	struct:__anon4	file:	access:public
__anon4::val	sftp-server/log.c	/^	SyslogFacility val;$/;"	m	language:C	struct:__anon4	file:	access:public
__anon50::L	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char     L[MAXBLOCKSIZE],         \/* L value *\/$/;"	m	language:C++	struct:__anon50	access:public
__anon50::Li	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     Li[MAXBLOCKSIZE],        \/* value of Li [current value, we calc from previous recall] *\/$/;"	m	language:C++	struct:__anon50	access:public
__anon50::Lr	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     Lr[MAXBLOCKSIZE],        \/* L * x^-1 *\/$/;"	m	language:C++	struct:__anon50	access:public
__anon50::Ls	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     Ls[32][MAXBLOCKSIZE],    \/* L shifted by i bits to the left *\/$/;"	m	language:C++	struct:__anon50	access:public
__anon50::R	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     R[MAXBLOCKSIZE],         \/* R value *\/$/;"	m	language:C++	struct:__anon50	access:public
__anon50::block_index	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned long     block_index;             \/* index # for current block *\/$/;"	m	language:C++	struct:__anon50	access:public
__anon50::block_len	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     block_len;               \/* length of block *\/$/;"	m	language:C++	struct:__anon50	access:public
__anon50::checksum	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     checksum[MAXBLOCKSIZE];  \/* current checksum *\/$/;"	m	language:C++	struct:__anon50	access:public
__anon50::cipher	libtomcrypt/src/headers/tomcrypt_mac.h	/^   int               cipher,                  \/* cipher idx *\/$/;"	m	language:C++	struct:__anon50	access:public
__anon50::key	libtomcrypt/src/headers/tomcrypt_mac.h	/^   symmetric_key     key;                     \/* scheduled key for cipher *\/$/;"	m	language:C++	struct:__anon50	access:public
__anon51::H	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char       H[16],        \/* multiplier *\/$/;"	m	language:C++	struct:__anon51	access:public
__anon51::K	libtomcrypt/src/headers/tomcrypt_mac.h	/^   symmetric_key       K;$/;"	m	language:C++	struct:__anon51	access:public
__anon51::PC	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char       PC[16][256][16]  \/* 16 tables of 8x128 *\/$/;"	m	language:C++	struct:__anon51	access:public
__anon51::X	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       X[16],        \/* accumulator *\/$/;"	m	language:C++	struct:__anon51	access:public
__anon51::Y	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       Y[16],        \/* counter *\/$/;"	m	language:C++	struct:__anon51	access:public
__anon51::Y_0	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       Y_0[16],      \/* initial counter *\/$/;"	m	language:C++	struct:__anon51	access:public
__anon51::buf	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       buf[16];      \/* buffer for stuff *\/$/;"	m	language:C++	struct:__anon51	access:public
__anon51::buflen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       buflen;       \/* length of data in buf *\/$/;"	m	language:C++	struct:__anon51	access:public
__anon51::cipher	libtomcrypt/src/headers/tomcrypt_mac.h	/^   int                 cipher,       \/* which cipher *\/$/;"	m	language:C++	struct:__anon51	access:public
__anon51::ivmode	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       ivmode,       \/* Which mode is the IV in? *\/$/;"	m	language:C++	struct:__anon51	access:public
__anon51::mode	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       mode,         \/* mode the GCM code is in *\/$/;"	m	language:C++	struct:__anon51	access:public
__anon51::pttotlen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       pttotlen;     \/* 64-bit counter for the PT *\/$/;"	m	language:C++	struct:__anon51	access:public
__anon51::totlen	libtomcrypt/src/headers/tomcrypt_mac.h	/^   ulong64             totlen,       \/* 64-bit counter used for IV and AAD *\/$/;"	m	language:C++	struct:__anon51	access:public
__anon52::IV	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 IV[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon52	access:public
__anon52::K	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char K[3][MAXBLOCKSIZE],$/;"	m	language:C++	struct:__anon52	access:public
__anon52::blocksize	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 blocksize;$/;"	m	language:C++	struct:__anon52	access:public
__anon52::buflen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 buflen,$/;"	m	language:C++	struct:__anon52	access:public
__anon52::cipher	libtomcrypt/src/headers/tomcrypt_mac.h	/^             int cipher,$/;"	m	language:C++	struct:__anon52	access:public
__anon52::key	libtomcrypt/src/headers/tomcrypt_mac.h	/^   symmetric_key key;$/;"	m	language:C++	struct:__anon52	access:public
__anon53::ACC	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 ACC[MAXBLOCKSIZE],$/;"	m	language:C++	struct:__anon53	access:public
__anon53::IV	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 IV[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon53	access:public
__anon53::akey	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char akey[MAXBLOCKSIZE],$/;"	m	language:C++	struct:__anon53	access:public
__anon53::blocksize	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 blocksize;$/;"	m	language:C++	struct:__anon53	access:public
__anon53::buflen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 buflen,$/;"	m	language:C++	struct:__anon53	access:public
__anon53::cipher	libtomcrypt/src/headers/tomcrypt_mac.h	/^             int cipher,$/;"	m	language:C++	struct:__anon53	access:public
__anon53::key	libtomcrypt/src/headers/tomcrypt_mac.h	/^   symmetric_key key;$/;"	m	language:C++	struct:__anon53	access:public
__anon53::keylen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 keylen,$/;"	m	language:C++	struct:__anon53	access:public
__anon54::add	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*add)(void *a, void *b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::addi	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*addi)(void *a, unsigned long b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::bits_per_digit	libtomcrypt/src/headers/tomcrypt_math.h	/^   int  bits_per_digit;$/;"	m	language:C++	struct:__anon54	access:public
__anon54::compare	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*compare)(void *a, void *b);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::compare_d	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*compare_d)(void *a, unsigned long n);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::copy	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*copy)(void *src, void *dst);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::count_bits	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*count_bits)(void * a);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::count_lsb_bits	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*count_lsb_bits)(void *a);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::deinit	libtomcrypt/src/headers/tomcrypt_math.h	/^   void (*deinit)(void *a);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::div_2	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*div_2)(void *a, void *b);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::ecc_map	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*ecc_map)(ecc_point *P, void *modulus, void *mp);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::ecc_mul2add	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*ecc_mul2add)(ecc_point *A, void *kA,$/;"	m	language:C++	struct:__anon54	access:public
__anon54::ecc_ptadd	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*ecc_ptadd)(ecc_point *P, ecc_point *Q, ecc_point *R, void *modulus, void *mp);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::ecc_ptdbl	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*ecc_ptdbl)(ecc_point *P, ecc_point *R, void *modulus, void *mp);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::ecc_ptmul	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*ecc_ptmul)(void *k, ecc_point *G, ecc_point *R, void *modulus, int map);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::exptmod	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*exptmod)(void *a, void *b, void *c, void *d);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::gcd	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*gcd)(void *a, void *b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::get_digit	libtomcrypt/src/headers/tomcrypt_math.h	/^   unsigned long (*get_digit)(void *a, int n);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::get_digit_count	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*get_digit_count)(void *a);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::get_int	libtomcrypt/src/headers/tomcrypt_math.h	/^   unsigned long (*get_int)(void *a);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::init	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*init)(void **a);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::init_copy	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*init_copy)(void **dst, void *src);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::invmod	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*invmod)(void *, void *, void *);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::isprime	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*isprime)(void *a, int *b);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::lcm	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*lcm)(void *a, void *b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::modi	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*modi)(void *a, unsigned long b, unsigned long *c);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::montgomery_deinit	libtomcrypt/src/headers/tomcrypt_math.h	/^   void (*montgomery_deinit)(void *a);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::montgomery_normalization	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*montgomery_normalization)(void *a, void *b);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::montgomery_reduce	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*montgomery_reduce)(void *a, void *b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::montgomery_setup	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*montgomery_setup)(void *a, void **b);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::mpdiv	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*mpdiv)(void *a, void *b, void *c, void *d);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::mul	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*mul)(void *a, void *b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::muli	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*muli)(void *a, unsigned long b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::mulmod	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*mulmod)(void *a, void *b, void *c, void *d);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::name	libtomcrypt/src/headers/tomcrypt_math.h	/^   char *name;$/;"	m	language:C++	struct:__anon54	access:public
__anon54::neg	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*neg)(void *src, void *dst);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::read_radix	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*read_radix)(void *a, const char *str, int radix);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::set_int	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*set_int)(void *a, unsigned long n);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::sqr	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*sqr)(void *a, void *b);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::sqrmod	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*sqrmod)(void *a, void *b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::sub	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*sub)(void *a, void *b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::subi	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*subi)(void *a, unsigned long b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::twoexpt	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*twoexpt)(void *a , int n);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::unsigned_read	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*unsigned_read)(void *dst, unsigned char *src, unsigned long len);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::unsigned_size	libtomcrypt/src/headers/tomcrypt_math.h	/^   unsigned long (*unsigned_size)(void *a);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::unsigned_write	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*unsigned_write)(void *src, unsigned char *dst);$/;"	m	language:C++	struct:__anon54	access:public
__anon54::write_radix	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*write_radix)(void *a, char *str, int radix);$/;"	m	language:C++	struct:__anon54	access:public
__anon55::entry	libtomcrypt/testprof/tomcrypt_test.h	/^    int  (*entry)(void);$/;"	m	language:C++	struct:__anon55	access:public
__anon55::name	libtomcrypt/testprof/tomcrypt_test.h	/^    char *name, *prov, *req;$/;"	m	language:C++	struct:__anon55	access:public
__anon55::prov	libtomcrypt/testprof/tomcrypt_test.h	/^    char *name, *prov, *req;$/;"	m	language:C++	struct:__anon55	access:public
__anon55::req	libtomcrypt/testprof/tomcrypt_test.h	/^    char *name, *prov, *req;$/;"	m	language:C++	struct:__anon55	access:public
__anon56::g	dss.h	/^	mp_int* g;$/;"	m	language:C++	struct:__anon56	access:public
__anon56::p	dss.h	/^	mp_int* p;$/;"	m	language:C++	struct:__anon56	access:public
__anon56::q	dss.h	/^	mp_int* q;$/;"	m	language:C++	struct:__anon56	access:public
__anon56::x	dss.h	/^	mp_int* x;$/;"	m	language:C++	struct:__anon56	access:public
__anon56::y	dss.h	/^	mp_int* y;$/;"	m	language:C++	struct:__anon56	access:public
__anon5::name	sftp-server/log.c	/^	const char *name;$/;"	m	language:C	struct:__anon5	file:	access:public
__anon5::val	sftp-server/log.c	/^	LogLevel val;$/;"	m	language:C	struct:__anon5	file:	access:public
__anon9::gl_closedir	sftp-server/openbsd-compat/glob.h	/^	void (*gl_closedir)(void *);$/;"	m	language:C++	struct:__anon9	access:public
__anon9::gl_errfunc	sftp-server/openbsd-compat/glob.h	/^	int (*gl_errfunc)(const char *, int);$/;"	m	language:C++	struct:__anon9	access:public
__anon9::gl_flags	sftp-server/openbsd-compat/glob.h	/^	int gl_flags;		\/* Copy of flags parameter to glob. *\/$/;"	m	language:C++	struct:__anon9	access:public
__anon9::gl_lstat	sftp-server/openbsd-compat/glob.h	/^	int (*gl_lstat)(const char *, struct stat *);$/;"	m	language:C++	struct:__anon9	access:public
__anon9::gl_matchc	sftp-server/openbsd-compat/glob.h	/^	int gl_matchc;		\/* Count of paths matching pattern. *\/$/;"	m	language:C++	struct:__anon9	access:public
__anon9::gl_offs	sftp-server/openbsd-compat/glob.h	/^	int gl_offs;		\/* Reserved at beginning of gl_pathv. *\/$/;"	m	language:C++	struct:__anon9	access:public
__anon9::gl_opendir	sftp-server/openbsd-compat/glob.h	/^	void *(*gl_opendir)(const char *);$/;"	m	language:C++	struct:__anon9	access:public
__anon9::gl_pathc	sftp-server/openbsd-compat/glob.h	/^	int gl_pathc;		\/* Count of total paths so far. *\/$/;"	m	language:C++	struct:__anon9	access:public
__anon9::gl_pathv	sftp-server/openbsd-compat/glob.h	/^	char **gl_pathv;	\/* List of paths matching pattern. *\/$/;"	m	language:C++	struct:__anon9	access:public
__anon9::gl_readdir	sftp-server/openbsd-compat/glob.h	/^	struct dirent *(*gl_readdir)(void *);	$/;"	m	language:C++	struct:__anon9	typeref:struct:__anon9::gl_readdir	access:public
__anon9::gl_stat	sftp-server/openbsd-compat/glob.h	/^	int (*gl_stat)(const char *, struct stat *);$/;"	m	language:C++	struct:__anon9	access:public
__attribute__	sftp-server/defines.h	434;"	d	language:C++
__b64_ntop	sftp-server/openbsd-compat/base64.h	55;"	d	language:C++
__b64_pton	sftp-server/openbsd-compat/base64.h	62;"	d	language:C++
__bounded__	sftp-server/defines.h	442;"	d	language:C++
__func__	sftp-server/defines.h	570;"	d	language:C++
__func__	sftp-server/defines.h	572;"	d	language:C++
__m_free	dbutil.c	/^void __m_free(void* ptr) {$/;"	f	language:C	signature:(void* ptr)
__m_free	dbutil.h	/^void __m_free(void* ptr);$/;"	p	language:C++	signature:(void* ptr)
__nonnull__	sftp-server/defines.h	446;"	d	language:C++
__progname	sftp-server/openbsd-compat/bsd-misc.c	/^char *__progname;$/;"	v	language:C
__sentinel__	sftp-server/defines.h	438;"	d	language:C++
__ss_pad2	fake-rfc2553.h	/^	char		__ss_pad2[_SS_PADSIZE];$/;"	m	language:C++	struct:sockaddr_storage	access:public
__ss_pad2	sftp-server/openbsd-compat/fake-rfc2553.h	/^	char		__ss_pad2[_SS_PADSIZE];$/;"	m	language:C++	struct:sockaddr_storage	access:public
_anubis_setup	libtomcrypt/src/ciphers/anubis.c	/^static int _anubis_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
_blowfish_ecb_decrypt	libtomcrypt/src/ciphers/blowfish.c	/^static int _blowfish_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
_blowfish_ecb_encrypt	libtomcrypt/src/ciphers/blowfish.c	/^static int _blowfish_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
_cast5_ecb_decrypt	libtomcrypt/src/ciphers/cast5.c	/^static int _cast5_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
_cast5_ecb_encrypt	libtomcrypt/src/ciphers/cast5.c	/^static int _cast5_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
_cast5_setup	libtomcrypt/src/ciphers/cast5.c	/^static int _cast5_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
_chc_process	libtomcrypt/src/hashes/chc/chc.c	/^int _chc_process(hash_state * md, const unsigned char *buf, unsigned long len);$/;"	p	language:C	file:	signature:(hash_state * md, const unsigned char *buf, unsigned long len)
_compat_skeychallenge	sftp-server/defines.h	580;"	d	language:C++
_compat_skeychallenge	sftp-server/defines.h	582;"	d	language:C++
_cookey	libtomcrypt/src/ciphers/des.c	/^static void _cookey(const ulong32 *raw1, ulong32 *keyout)$/;"	f	language:C	file:	signature:(const ulong32 *raw1, ulong32 *keyout)
_deskey	libtomcrypt/src/ciphers/des.c	/^static void _deskey(const unsigned char *key, short edf, ulong32 *keyout)$/;"	f	language:C	file:	signature:(const unsigned char *key, short edf, ulong32 *keyout)
_dropbear_exit	dbutil.c	/^void (*_dropbear_exit)(int exitcode, const char* format, va_list param) $/;"	v	language:C
_dropbear_log	dbutil.c	/^void (*_dropbear_log)(int priority, const char* format, va_list param)$/;"	v	language:C
_g_func	libtomcrypt/src/ciphers/twofish/twofish.c	/^static ulong32 _g_func(ulong32 x, symmetric_key *key)$/;"	f	language:C	file:	signature:(ulong32 x, symmetric_key *key)
_ilt	libtomcrypt/src/ciphers/safer/saferp.c	/^static void _ilt(unsigned char *b, unsigned char *b2)$/;"	f	language:C	file:	signature:(unsigned char *b, unsigned char *b2)
_iround	libtomcrypt/src/ciphers/safer/saferp.c	/^static void _iround(unsigned char *b, int i, symmetric_key *skey)$/;"	f	language:C	file:	signature:(unsigned char *b, int i, symmetric_key *skey)
_lt	libtomcrypt/src/ciphers/safer/saferp.c	/^static void _lt(unsigned char *b, unsigned char *b2)$/;"	f	language:C	file:	signature:(unsigned char *b, unsigned char *b2)
_m_list	list.h	/^struct _m_list {$/;"	s	language:C++
_m_list::first	list.h	/^    m_list_elem *first;$/;"	m	language:C++	struct:_m_list	access:public
_m_list::last	list.h	/^    m_list_elem *last;$/;"	m	language:C++	struct:_m_list	access:public
_m_list_elem	list.h	/^struct _m_list_elem {$/;"	s	language:C++
_m_list_elem::item	list.h	/^    void *item;$/;"	m	language:C++	struct:_m_list_elem	access:public
_m_list_elem::list	list.h	/^    struct _m_list *list;$/;"	m	language:C++	struct:_m_list_elem	typeref:struct:_m_list_elem::_m_list	access:public
_m_list_elem::next	list.h	/^	struct _m_list_elem *next;$/;"	m	language:C++	struct:_m_list_elem	typeref:struct:_m_list_elem::_m_list_elem	access:public
_m_list_elem::prev	list.h	/^	struct _m_list_elem *prev;$/;"	m	language:C++	struct:_m_list_elem	typeref:struct:_m_list_elem::_m_list_elem	access:public
_md4_compress	libtomcrypt/src/hashes/md4.c	/^static int _md4_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
_md5_compress	libtomcrypt/src/hashes/md5.c	/^static int _md5_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
_noekeon_ecb_decrypt	libtomcrypt/src/ciphers/noekeon.c	/^static int _noekeon_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
_noekeon_ecb_encrypt	libtomcrypt/src/ciphers/noekeon.c	/^static int _noekeon_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
_rc2_ecb_decrypt	libtomcrypt/src/ciphers/rc2.c	/^static int _rc2_ecb_decrypt( const unsigned char *ct,$/;"	f	language:C	file:	signature:( const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
_rc2_ecb_encrypt	libtomcrypt/src/ciphers/rc2.c	/^static int _rc2_ecb_encrypt( const unsigned char *pt,$/;"	f	language:C	file:	signature:( const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
_rc5_ecb_decrypt	libtomcrypt/src/ciphers/rc5.c	/^static int _rc5_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
_rc5_ecb_encrypt	libtomcrypt/src/ciphers/rc5.c	/^static int _rc5_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
_rc5_setup	libtomcrypt/src/ciphers/rc5.c	/^static int _rc5_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
_rc6_ecb_decrypt	libtomcrypt/src/ciphers/rc6.c	/^static int _rc6_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
_rc6_ecb_encrypt	libtomcrypt/src/ciphers/rc6.c	/^static int _rc6_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
_rc6_setup	libtomcrypt/src/ciphers/rc6.c	/^static int _rc6_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
_rijndael_ecb_decrypt	libtomcrypt/src/ciphers/aes/aes.c	/^static int _rijndael_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey) $/;"	f	language:C	file:	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
_rijndael_ecb_encrypt	libtomcrypt/src/ciphers/aes/aes.c	/^static int _rijndael_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey) $/;"	f	language:C	file:	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
_rmd128_compress	libtomcrypt/src/hashes/rmd128.c	/^static int _rmd128_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
_rmd160_compress	libtomcrypt/src/hashes/rmd160.c	/^static int _rmd160_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
_rmd256_compress	libtomcrypt/src/hashes/rmd256.c	/^static int _rmd256_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
_rmd320_compress	libtomcrypt/src/hashes/rmd320.c	/^static int _rmd320_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
_round	libtomcrypt/src/ciphers/safer/saferp.c	/^static void _round(unsigned char *b, int i, symmetric_key *skey) $/;"	f	language:C	file:	signature:(unsigned char *b, int i, symmetric_key *skey)
_safer_ecb_decrypt	libtomcrypt/src/ciphers/safer/safer.c	/^static int _safer_ecb_decrypt(const unsigned char *block_in,$/;"	f	language:C	file:	signature:(const unsigned char *block_in, unsigned char *block_out, symmetric_key *skey)
_safer_ecb_encrypt	libtomcrypt/src/ciphers/safer/safer.c	/^static int _safer_ecb_encrypt(const unsigned char *block_in,$/;"	f	language:C	file:	signature:(const unsigned char *block_in, unsigned char *block_out, symmetric_key *skey)
_sbox	libtomcrypt/src/ciphers/twofish/twofish.c	/^static ulong32 _sbox(int i, ulong32 x)$/;"	f	language:C	file:	signature:(int i, ulong32 x)
_sha1_compress	libtomcrypt/src/hashes/sha1.c	/^static int _sha1_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
_sha256_compress	libtomcrypt/src/hashes/sha2/sha256.c	/^static int _sha256_compress(hash_state * md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state * md, unsigned char *buf)
_sha512_compress	libtomcrypt/src/hashes/sha2/sha512.c	/^static int _sha512_compress(hash_state * md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state * md, unsigned char *buf)
_skipjack_ecb_decrypt	libtomcrypt/src/ciphers/skipjack.c	/^static int _skipjack_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
_skipjack_ecb_encrypt	libtomcrypt/src/ciphers/skipjack.c	/^static int _skipjack_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
_t_read	libtommath/etc/timer.asm	/^_t_read:$/;"	l	language:Asm
_t_start	libtommath/etc/timer.asm	/^_t_start:$/;"	l	language:Asm
_tiger_compress	libtomcrypt/src/hashes/tiger.c	/^static int _tiger_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
_tt	libtommath/demo/timing.c	/^ulong64 _tt;$/;"	v	language:C
_twofish_ecb_decrypt	libtomcrypt/src/ciphers/twofish/twofish.c	/^static int _twofish_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
_twofish_ecb_encrypt	libtomcrypt/src/ciphers/twofish/twofish.c	/^static int _twofish_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
_twofish_setup	libtomcrypt/src/ciphers/twofish/twofish.c	/^static int _twofish_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	file:	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
_whirlpool_compress	libtomcrypt/src/hashes/whirl/whirl.c	/^static int _whirlpool_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
a	sftp-server/sftp-client.h	/^	Attrib a;$/;"	m	language:C++	struct:SFTP_DIRENT	access:public
a2port	scpmisc.h	/^int	 a2port(const char *);$/;"	p	language:C++	signature:(const char *)
a2port	sftp-server/misc.c	/^a2port(const char *s)$/;"	f	language:C	signature:(const char *s)
a2port	sftp-server/misc.h	/^int	 a2port(const char *);$/;"	p	language:C++	signature:(const char *)
a2tun	sftp-server/misc.c	/^a2tun(const char *s, int *remote)$/;"	f	language:C	signature:(const char *s, int *remote)
a2tun	sftp-server/misc.h	/^int	 a2tun(const char *, int *);$/;"	p	language:C++	signature:(const char *, int *)
abandon_cb	sftp-server/channels.h	/^	channel_confirm_abandon_cb *abandon_cb;$/;"	m	language:C++	struct:channel_confirm	access:public
accel_cbc_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_cbc_decrypt)(const unsigned char *ct, unsigned char *pt, unsigned long blocks, unsigned char *IV, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
accel_cbc_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_cbc_encrypt)(const unsigned char *pt, unsigned char *ct, unsigned long blocks, unsigned char *IV, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
accel_ccm_memory	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_ccm_memory)($/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
accel_ctr_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_ctr_encrypt)(const unsigned char *pt, unsigned char *ct, unsigned long blocks, unsigned char *IV, int mode, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
accel_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_ecb_decrypt)(const unsigned char *ct, unsigned char *pt, unsigned long blocks, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
accel_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_ecb_encrypt)(const unsigned char *pt, unsigned char *ct, unsigned long blocks, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
accel_fp_mul	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^static int accel_fp_mul(int idx, void *k, ecc_point *R, void *modulus, void *mp, int map)$/;"	f	language:C	file:	signature:(int idx, void *k, ecc_point *R, void *modulus, void *mp, int map)
accel_fp_mul2add	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^static int accel_fp_mul2add(int idx1, int idx2, $/;"	f	language:C	file:	signature:(int idx1, int idx2, void *kA, void *kB, ecc_point *R, void *modulus, void *mp)
accel_gcm_memory	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_gcm_memory)($/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
accel_lrw_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_lrw_decrypt)(const unsigned char *ct, unsigned char *pt, unsigned long blocks, unsigned char *IV, const unsigned char *tweak, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
accel_lrw_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_lrw_encrypt)(const unsigned char *pt, unsigned char *ct, unsigned long blocks, unsigned char *IV, const unsigned char *tweak, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
acceptor	listener.h	/^	void (*acceptor)(struct Listener*, int sock);$/;"	m	language:C++	struct:Listener	access:public
add	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*add)(void *a, void *b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
add	libtomcrypt/src/math/gmp_desc.c	/^static int add(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
add	libtomcrypt/src/math/ltm_desc.c	/^static int add(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
add	libtomcrypt/src/math/tfm_desc.c	/^static int add(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
add_entropy	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int (*add_entropy)(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
add_entry	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^static int add_entry(int idx, ecc_point *g)$/;"	f	language:C	file:	signature:(int idx, ecc_point *g)
add_netcat	cli-runopts.c	/^static void add_netcat(const char *str);$/;"	p	language:C	file:	signature:(const char *str)
add_netcat	cli-runopts.c	/^static void add_netcat(const char* origstr) {$/;"	f	language:C	file:	signature:(const char* origstr)
addargs	scpmisc.c	/^addargs(arglist *args, char *fmt, ...)$/;"	f	language:C	signature:(arglist *args, char *fmt, ...)
addargs	scpmisc.h	/^void	 addargs(arglist *, char *, ...);$/;"	p	language:C++	signature:(arglist *, char *, ...)
addargs	sftp-server/misc.c	/^addargs(arglist *args, char *fmt, ...)$/;"	f	language:C	signature:(arglist *args, char *fmt, ...)
addargs	sftp-server/misc.h	/^void	 addargs(arglist *, char *, ...)$/;"	p	language:C++	signature:(arglist *, char *, ...)
addchildpid	svr-chansession.c	/^static void addchildpid(struct ChanSess *chansess, pid_t pid) {$/;"	f	language:C	file:	signature:(struct ChanSess *chansess, pid_t pid)
addchildpid	svr-chansession.c	/^static void addchildpid(struct ChanSess *chansess, pid_t pid);$/;"	p	language:C	file:	signature:(struct ChanSess *chansess, pid_t pid)
addforward	cli-runopts.c	/^static void addforward(const char* origstr, m_list *fwdlist) {$/;"	f	language:C	file:	signature:(const char* origstr, m_list *fwdlist)
addforward	cli-runopts.c	/^static void addforward(const char* str, m_list *fwdlist);$/;"	p	language:C	file:	signature:(const char* str, m_list *fwdlist)
addi	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*addi)(void *a, unsigned long b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
addi	libtomcrypt/src/math/gmp_desc.c	/^static int addi(void *a, unsigned long b, void *c)$/;"	f	language:C	file:	signature:(void *a, unsigned long b, void *c)
addi	libtomcrypt/src/math/ltm_desc.c	/^static int addi(void *a, unsigned long b, void *c)$/;"	f	language:C	file:	signature:(void *a, unsigned long b, void *c)
addi	libtomcrypt/src/math/tfm_desc.c	/^static int addi(void *a, unsigned long b, void *c)$/;"	f	language:C	file:	signature:(void *a, unsigned long b, void *c)
addnewvar	chansession.h	/^void addnewvar(const char* param, const char* var);$/;"	p	language:C++	signature:(const char* param, const char* var)
addnewvar	svr-chansession.c	/^void addnewvar(const char* param, const char* var) {$/;"	f	language:C	signature:(const char* param, const char* var)
addportandaddress	svr-runopts.c	/^static void addportandaddress(char* spec) {$/;"	f	language:C	file:	signature:(char* spec)
addportandaddress	svr-runopts.c	/^static void addportandaddress(char* spec);$/;"	p	language:C	file:	signature:(char* spec)
addr32	sftp-server/addrmatch.c	/^		u_int32_t		addr32[4];$/;"	m	language:C	union:xaddr::__anon2	file:	access:public
addr32	sftp-server/addrmatch.c	48;"	d	language:C	file:
addr8	sftp-server/addrmatch.c	/^		u_int8_t		addr8[16];$/;"	m	language:C	union:xaddr::__anon2	file:	access:public
addr8	sftp-server/addrmatch.c	47;"	d	language:C	file:
addr_and	sftp-server/addrmatch.c	/^addr_and(struct xaddr *dst, const struct xaddr *a, const struct xaddr *b)$/;"	f	language:C	file:	signature:(struct xaddr *dst, const struct xaddr *a, const struct xaddr *b)
addr_cmp	sftp-server/addrmatch.c	/^addr_cmp(const struct xaddr *a, const struct xaddr *b)$/;"	f	language:C	file:	signature:(const struct xaddr *a, const struct xaddr *b)
addr_host_is_all0s	sftp-server/addrmatch.c	/^addr_host_is_all0s(const struct xaddr *a, u_int masklen)$/;"	f	language:C	file:	signature:(const struct xaddr *a, u_int masklen)
addr_hostmask	sftp-server/addrmatch.c	/^addr_hostmask(int af, u_int l, struct xaddr *n)$/;"	f	language:C	file:	signature:(int af, u_int l, struct xaddr *n)
addr_invert	sftp-server/addrmatch.c	/^addr_invert(struct xaddr *n)$/;"	f	language:C	file:	signature:(struct xaddr *n)
addr_is_all0s	sftp-server/addrmatch.c	/^addr_is_all0s(const struct xaddr *a)$/;"	f	language:C	file:	signature:(const struct xaddr *a)
addr_match_cidr_list	sftp-server/addrmatch.c	/^addr_match_cidr_list(const char *addr, const char *_list)$/;"	f	language:C	signature:(const char *addr, const char *_list)
addr_match_cidr_list	sftp-server/match.h	/^int	 addr_match_cidr_list(const char *, const char *);$/;"	p	language:C++	signature:(const char *, const char *)
addr_match_list	sftp-server/addrmatch.c	/^addr_match_list(const char *addr, const char *_list)$/;"	f	language:C	signature:(const char *addr, const char *_list)
addr_match_list	sftp-server/match.h	/^int	 addr_match_list(const char *, const char *);$/;"	p	language:C++	signature:(const char *, const char *)
addr_netmask	sftp-server/addrmatch.c	/^addr_netmask(int af, u_int l, struct xaddr *n)$/;"	f	language:C	file:	signature:(int af, u_int l, struct xaddr *n)
addr_netmatch	sftp-server/addrmatch.c	/^addr_netmatch(const struct xaddr *host, const struct xaddr *net, u_int masklen)$/;"	f	language:C	file:	signature:(const struct xaddr *host, const struct xaddr *net, u_int masklen)
addr_pton	sftp-server/addrmatch.c	/^addr_pton(const char *p, struct xaddr *n)$/;"	f	language:C	file:	signature:(const char *p, struct xaddr *n)
addr_pton_cidr	sftp-server/addrmatch.c	/^addr_pton_cidr(const char *p, struct xaddr *n, u_int *l)$/;"	f	language:C	file:	signature:(const char *p, struct xaddr *n, u_int *l)
addr_sa_to_xaddr	sftp-server/addrmatch.c	/^addr_sa_to_xaddr(struct sockaddr *sa, socklen_t slen, struct xaddr *xa)$/;"	f	language:C	file:	signature:(struct sockaddr *sa, socklen_t slen, struct xaddr *xa)
addr_unicast_masklen	sftp-server/addrmatch.c	/^addr_unicast_masklen(int af)$/;"	f	language:C	file:	signature:(int af)
addrandom	random.h	/^void addrandom(unsigned char* buf, int len);$/;"	p	language:C++	signature:(unsigned char* buf, int len)
addresses	runopts.h	/^	char *addresses[DROPBEAR_MAX_PORTS];$/;"	m	language:C++	struct:svr_runopts	access:public
addrinfo	fake-rfc2553.h	/^struct addrinfo {$/;"	s	language:C++
addrinfo	sftp-server/openbsd-compat/fake-rfc2553.h	/^struct addrinfo {$/;"	s	language:C++
addrinfo::ai_addr	fake-rfc2553.h	/^	struct sockaddr *ai_addr;	\/* binary address *\/$/;"	m	language:C++	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
addrinfo::ai_addr	sftp-server/openbsd-compat/fake-rfc2553.h	/^	struct sockaddr *ai_addr;	\/* binary address *\/$/;"	m	language:C++	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
addrinfo::ai_addrlen	fake-rfc2553.h	/^	size_t	ai_addrlen;	\/* length of ai_addr *\/$/;"	m	language:C++	struct:addrinfo	access:public
addrinfo::ai_addrlen	sftp-server/openbsd-compat/fake-rfc2553.h	/^	size_t	ai_addrlen;	\/* length of ai_addr *\/$/;"	m	language:C++	struct:addrinfo	access:public
addrinfo::ai_canonname	fake-rfc2553.h	/^	char	*ai_canonname;	\/* canonical name for hostname *\/$/;"	m	language:C++	struct:addrinfo	access:public
addrinfo::ai_canonname	sftp-server/openbsd-compat/fake-rfc2553.h	/^	char	*ai_canonname;	\/* canonical name for hostname *\/$/;"	m	language:C++	struct:addrinfo	access:public
addrinfo::ai_family	fake-rfc2553.h	/^	int	ai_family;	\/* PF_xxx *\/$/;"	m	language:C++	struct:addrinfo	access:public
addrinfo::ai_family	sftp-server/openbsd-compat/fake-rfc2553.h	/^	int	ai_family;	\/* PF_xxx *\/$/;"	m	language:C++	struct:addrinfo	access:public
addrinfo::ai_flags	fake-rfc2553.h	/^	int	ai_flags;	\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	language:C++	struct:addrinfo	access:public
addrinfo::ai_flags	sftp-server/openbsd-compat/fake-rfc2553.h	/^	int	ai_flags;	\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	language:C++	struct:addrinfo	access:public
addrinfo::ai_next	fake-rfc2553.h	/^	struct addrinfo *ai_next;	\/* next structure in linked list *\/$/;"	m	language:C++	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
addrinfo::ai_next	sftp-server/openbsd-compat/fake-rfc2553.h	/^	struct addrinfo *ai_next;	\/* next structure in linked list *\/$/;"	m	language:C++	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
addrinfo::ai_protocol	fake-rfc2553.h	/^	int	ai_protocol;	\/* 0 or IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	language:C++	struct:addrinfo	access:public
addrinfo::ai_protocol	sftp-server/openbsd-compat/fake-rfc2553.h	/^	int	ai_protocol;	\/* 0 or IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	language:C++	struct:addrinfo	access:public
addrinfo::ai_socktype	fake-rfc2553.h	/^	int	ai_socktype;	\/* SOCK_xxx *\/$/;"	m	language:C++	struct:addrinfo	access:public
addrinfo::ai_socktype	sftp-server/openbsd-compat/fake-rfc2553.h	/^	int	ai_socktype;	\/* SOCK_xxx *\/$/;"	m	language:C++	struct:addrinfo	access:public
addrstring	session.h	/^	char * addrstring;$/;"	m	language:C++	struct:serversession	access:public
aes_desc	libtomcrypt/src/ciphers/aes/aes.c	/^const struct ltc_cipher_descriptor aes_desc =$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
aes_done	libtomcrypt/src/headers/tomcrypt_cipher.h	608;"	d	language:C++
aes_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	606;"	d	language:C++
aes_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	605;"	d	language:C++
aes_enc_desc	libtomcrypt/src/ciphers/aes/aes.c	/^const struct ltc_cipher_descriptor aes_enc_desc =$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
aes_enc_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	612;"	d	language:C++
aes_enc_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	613;"	d	language:C++
aes_enc_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	611;"	d	language:C++
aes_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	609;"	d	language:C++
aes_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	604;"	d	language:C++
aes_test	libtomcrypt/src/headers/tomcrypt_cipher.h	607;"	d	language:C++
af	sftp-server/addrmatch.c	/^	sa_family_t	af;$/;"	m	language:C	struct:xaddr	file:	access:public
agent_buf_sign	agentfwd.h	/^void agent_buf_sign(buffer *sigblob, sign_key *key, $/;"	p	language:C++	signature:(buffer *sigblob, sign_key *key, const unsigned char *data, unsigned int len)
agent_buf_sign	cli-agentfwd.c	/^void agent_buf_sign(buffer *sigblob, sign_key *key, $/;"	f	language:C	signature:(buffer *sigblob, sign_key *key, const unsigned char *data, unsigned int len)
agent_fd	runopts.h	/^	int agent_fd; \/* The agent fd is only set during authentication. Forwarded$/;"	m	language:C++	struct:cli_runopts	access:public
agent_fwd	runopts.h	/^	int agent_fwd;$/;"	m	language:C++	struct:cli_runopts	access:public
agent_get_key_list	cli-agentfwd.c	/^static void agent_get_key_list(m_list * ret_list)$/;"	f	language:C	file:	signature:(m_list * ret_list)
agent_keys_loaded	runopts.h	/^	int agent_keys_loaded; \/* whether pubkeys has been populated with a $/;"	m	language:C++	struct:cli_runopts	access:public
agent_request	cli-agentfwd.c	/^static buffer * agent_request(unsigned char type, buffer *data) {$/;"	f	language:C	file:	signature:(unsigned char type, buffer *data)
agentaccept	svr-agentfwd.c	/^static void agentaccept(struct Listener * listener, int sock);$/;"	p	language:C	file:	signature:(struct Listener * listener, int sock)
agentaccept	svr-agentfwd.c	/^static void agentaccept(struct Listener *UNUSED(listener), int sock) {$/;"	f	language:C	file:	signature:(struct Listener *UNUSED(listener), int sock)
agentdir	chansession.h	/^	char * agentdir;$/;"	m	language:C++	struct:ChanSess	access:public
agentfile	chansession.h	/^	char * agentfile;$/;"	m	language:C++	struct:ChanSess	access:public
agentlistener	chansession.h	/^	struct Listener * agentlistener;$/;"	m	language:C++	struct:ChanSess	typeref:struct:ChanSess::Listener	access:public
ai	sftp-server/channels.h	/^	struct addrinfo *ai, *aitop;$/;"	m	language:C++	struct:channel_connect	typeref:struct:channel_connect::addrinfo	access:public
ai_addr	fake-rfc2553.h	/^	struct sockaddr *ai_addr;	\/* binary address *\/$/;"	m	language:C++	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
ai_addr	sftp-server/openbsd-compat/fake-rfc2553.h	/^	struct sockaddr *ai_addr;	\/* binary address *\/$/;"	m	language:C++	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
ai_addrlen	fake-rfc2553.h	/^	size_t	ai_addrlen;	\/* length of ai_addr *\/$/;"	m	language:C++	struct:addrinfo	access:public
ai_addrlen	sftp-server/openbsd-compat/fake-rfc2553.h	/^	size_t	ai_addrlen;	\/* length of ai_addr *\/$/;"	m	language:C++	struct:addrinfo	access:public
ai_canonname	fake-rfc2553.h	/^	char	*ai_canonname;	\/* canonical name for hostname *\/$/;"	m	language:C++	struct:addrinfo	access:public
ai_canonname	sftp-server/openbsd-compat/fake-rfc2553.h	/^	char	*ai_canonname;	\/* canonical name for hostname *\/$/;"	m	language:C++	struct:addrinfo	access:public
ai_family	fake-rfc2553.h	/^	int	ai_family;	\/* PF_xxx *\/$/;"	m	language:C++	struct:addrinfo	access:public
ai_family	sftp-server/openbsd-compat/fake-rfc2553.h	/^	int	ai_family;	\/* PF_xxx *\/$/;"	m	language:C++	struct:addrinfo	access:public
ai_flags	fake-rfc2553.h	/^	int	ai_flags;	\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	language:C++	struct:addrinfo	access:public
ai_flags	sftp-server/openbsd-compat/fake-rfc2553.h	/^	int	ai_flags;	\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	language:C++	struct:addrinfo	access:public
ai_next	fake-rfc2553.h	/^	struct addrinfo *ai_next;	\/* next structure in linked list *\/$/;"	m	language:C++	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
ai_next	sftp-server/openbsd-compat/fake-rfc2553.h	/^	struct addrinfo *ai_next;	\/* next structure in linked list *\/$/;"	m	language:C++	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
ai_protocol	fake-rfc2553.h	/^	int	ai_protocol;	\/* 0 or IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	language:C++	struct:addrinfo	access:public
ai_protocol	sftp-server/openbsd-compat/fake-rfc2553.h	/^	int	ai_protocol;	\/* 0 or IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	language:C++	struct:addrinfo	access:public
ai_socktype	fake-rfc2553.h	/^	int	ai_socktype;	\/* SOCK_xxx *\/$/;"	m	language:C++	struct:addrinfo	access:public
ai_socktype	sftp-server/openbsd-compat/fake-rfc2553.h	/^	int	ai_socktype;	\/* SOCK_xxx *\/$/;"	m	language:C++	struct:addrinfo	access:public
aitop	sftp-server/channels.h	/^	struct addrinfo *ai, *aitop;$/;"	m	language:C++	struct:channel_connect	typeref:struct:channel_connect::	access:public
aix_krb5_get_principal_name	sftp-server/openbsd-compat/port-aix.h	/^char *aix_krb5_get_principal_name(char *);$/;"	p	language:C++	signature:(char *)
aix_remove_embedded_newlines	sftp-server/openbsd-compat/port-aix.h	/^void aix_remove_embedded_newlines(char *);$/;"	p	language:C++	signature:(char *)
aix_restoreauthdb	sftp-server/openbsd-compat/port-aix.h	/^void aix_restoreauthdb(void);$/;"	p	language:C++	signature:(void)
aix_setauthdb	sftp-server/openbsd-compat/port-aix.h	/^void aix_setauthdb(const char *);$/;"	p	language:C++	signature:(const char *)
aix_usrinfo	sftp-server/openbsd-compat/port-aix.h	/^void aix_usrinfo(struct passwd *);$/;"	p	language:C++	signature:(struct passwd *)
akey	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char akey[MAXBLOCKSIZE],$/;"	m	language:C++	struct:__anon53	access:public
algo_comp	session.h	/^	char algo_comp; \/* compression *\/$/;"	m	language:C++	struct:key_context_directional	access:public
algo_crypt	session.h	/^	const struct dropbear_cipher *algo_crypt; \/* NULL for none *\/$/;"	m	language:C++	struct:key_context_directional	typeref:struct:key_context_directional::dropbear_cipher	access:public
algo_hostkey	session.h	/^	char algo_hostkey;$/;"	m	language:C++	struct:key_context	access:public
algo_kex	session.h	/^	char algo_kex;$/;"	m	language:C++	struct:key_context	access:public
algo_mac	session.h	/^	const struct dropbear_hash *algo_mac; \/* NULL for none *\/$/;"	m	language:C++	struct:key_context_directional	typeref:struct:key_context_directional::dropbear_hash	access:public
algo_type	algo.h	/^typedef struct Algo_Type algo_type;$/;"	t	language:C++	typeref:struct:Algo_Type
algorithm and produces an output no longer than the output of the hash.  
alloc	libtommath/mtest/mpi.h	/^  mp_size       alloc;   \/* how many digits allocated  *\/$/;"	m	language:C++	struct:__anon23	access:public
alloc	libtommath/tommath.h	/^    int used, alloc, sign;$/;"	m	language:C++	struct:__anon18	access:public
alloc	sftp-server/buffer.h	/^	u_int	 alloc;		\/* Number of bytes allocated for data. *\/$/;"	m	language:C++	struct:__anon3	access:public
allocbuf	scp.c	/^BUF *allocbuf(BUF *, int, int);$/;"	p	language:C	file:	signature:(BUF *, int, int)
allocbuf	scp.c	/^allocbuf(BUF *bp, int fd, int blksize)$/;"	f	language:C	signature:(BUF *bp, int fd, int blksize)
allow_compress	session.h	/^	int allow_compress; \/* whether compression has started (useful in $/;"	m	language:C++	struct:key_context	access:public
allowprivport	session.h	/^	int allowprivport;$/;"	m	language:C++	struct:sshsession	access:public
always_accept_key	runopts.h	/^	int always_accept_key;$/;"	m	language:C++	struct:cli_runopts	access:public
anubis	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct anubis_key   anubis;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::anubis_key	access:public
anubis_crypt	libtomcrypt/src/ciphers/anubis.c	/^static void anubis_crypt(const unsigned char *plaintext, unsigned char *ciphertext,$/;"	f	language:C	file:	signature:(const unsigned char *plaintext, unsigned char *ciphertext, ulong32 roundKey[18 + 1][4], int R)
anubis_desc	libtomcrypt/src/ciphers/anubis.c	/^const struct ltc_cipher_descriptor anubis_desc = {$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
anubis_done	libtomcrypt/src/ciphers/anubis.c	/^void anubis_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
anubis_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void anubis_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
anubis_ecb_decrypt	libtomcrypt/src/ciphers/anubis.c	/^int anubis_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
anubis_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int anubis_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
anubis_ecb_encrypt	libtomcrypt/src/ciphers/anubis.c	/^int anubis_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
anubis_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int anubis_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
anubis_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct anubis_key { $/;"	s	language:C++
anubis_key::R	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int R; $/;"	m	language:C++	struct:anubis_key	access:public
anubis_key::keyBits	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int keyBits; $/;"	m	language:C++	struct:anubis_key	access:public
anubis_key::roundKeyDec	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 roundKeyDec[18 + 1][4]; $/;"	m	language:C++	struct:anubis_key	access:public
anubis_key::roundKeyEnc	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 roundKeyEnc[18 + 1][4]; $/;"	m	language:C++	struct:anubis_key	access:public
anubis_keysize	libtomcrypt/src/ciphers/anubis.c	/^int anubis_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
anubis_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int anubis_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
anubis_setup	libtomcrypt/src/ciphers/anubis.c	/^int  anubis_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
anubis_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int anubis_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
anubis_test	libtomcrypt/src/ciphers/anubis.c	/^int anubis_test(void)$/;"	f	language:C	signature:(void)
anubis_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int anubis_test(void);$/;"	p	language:C++	signature:(void)
arc4random	sftp-server/openbsd-compat/openbsd-compat.h	/^unsigned int arc4random(void);$/;"	p	language:C++	signature:(void)
arc4random_buf	sftp-server/openbsd-compat/openbsd-compat.h	/^void arc4random_buf(void *, size_t);$/;"	p	language:C++	signature:(void *, size_t)
arc4random_stir	sftp-server/openbsd-compat/openbsd-compat.h	/^void arc4random_stir(void);$/;"	p	language:C++	signature:(void)
arc4random_uniform	sftp-server/openbsd-compat/openbsd-compat.h	/^u_int32_t arc4random_uniform(u_int32_t);$/;"	p	language:C++	signature:(u_int32_t)
arglist	scpmisc.h	/^struct arglist {$/;"	s	language:C++
arglist	scpmisc.h	/^typedef struct arglist arglist;$/;"	t	language:C++	typeref:struct:arglist
arglist	sftp-server/misc.h	/^struct arglist {$/;"	s	language:C++
arglist	sftp-server/misc.h	/^typedef struct arglist arglist;$/;"	t	language:C++	typeref:struct:arglist
arglist::list	scpmisc.h	/^	char    **list;$/;"	m	language:C++	struct:arglist	access:public
arglist::list	sftp-server/misc.h	/^	char    **list;$/;"	m	language:C++	struct:arglist	access:public
arglist::nalloc	scpmisc.h	/^	int     nalloc;$/;"	m	language:C++	struct:arglist	access:public
arglist::nalloc	sftp-server/misc.h	/^	u_int   nalloc;$/;"	m	language:C++	struct:arglist	access:public
arglist::num	scpmisc.h	/^	int     num;$/;"	m	language:C++	struct:arglist	access:public
arglist::num	sftp-server/misc.h	/^	u_int   num;$/;"	m	language:C++	struct:arglist	access:public
args	scp.c	/^arglist args;$/;"	v	language:C
argv0	sftp-server/log.c	/^static char *argv0;$/;"	v	language:C	file:
ask_permission	sftp-server/misc.h	/^int	 ask_permission(const char *, ...) __attribute__((format(printf, 1, 2)));$/;"	p	language:C++	signature:(const char *, ...)
ask_to_confirm	cli-kex.c	/^static void ask_to_confirm(unsigned char* keyblob, unsigned int keybloblen) {$/;"	f	language:C	file:	signature:(unsigned char* keyblob, unsigned int keybloblen)
asprintf	sftp-server/openbsd-compat/openbsd-compat.h	/^int asprintf(char **, const char *, ...);$/;"	p	language:C++	signature:(char **, const char *, ...)
atime	scp.c	785;"	d	language:C	file:
atime	sftp-server/sftp-common.h	/^	u_int32_t	atime;$/;"	m	language:C++	struct:Attrib	access:public
atomicio	atomicio.c	/^atomicio(f, fd, _s, n)$/;"	f	language:C
atomicio	atomicio.h	/^ssize_t	atomicio(ssize_t (*)(), int, void *, size_t);$/;"	p	language:C++	signature:(ssize_t ()), int, void *, size_t)
attrib	sftp-server/sftp-server.c	/^	Attrib attrib;$/;"	m	language:C	struct:Stat	file:	access:public
attrib_clear	sftp-server/sftp-common.c	/^attrib_clear(Attrib *a)$/;"	f	language:C	signature:(Attrib *a)
attrib_clear	sftp-server/sftp-common.h	/^void	 attrib_clear(Attrib *);$/;"	p	language:C++	signature:(Attrib *)
attrib_to_stat	sftp-server/sftp-common.c	/^attrib_to_stat(const Attrib *a, struct stat *st)$/;"	f	language:C	signature:(const Attrib *a, struct stat *st)
attrib_to_stat	sftp-server/sftp-common.h	/^void	 attrib_to_stat(const Attrib *, struct stat *);$/;"	p	language:C++	signature:(const Attrib *, struct stat *)
attrib_to_tv	sftp-server/sftp-server.c	/^attrib_to_tv(const Attrib *a)$/;"	f	language:C	file:	signature:(const Attrib *a)
auth_interact_failed	session.h	/^	int auth_interact_failed; \/* flag whether interactive auth can still$/;"	m	language:C++	struct:clientsession	access:public
auth_request_forwarding	sftp-server/channels.h	/^void	 auth_request_forwarding(void);$/;"	p	language:C++	signature:(void)
authclear	svr-auth.c	/^static void authclear() {$/;"	f	language:C	file:
authclear	svr-auth.c	/^static void authclear();$/;"	p	language:C	file:
authdone	auth.h	/^	unsigned authdone : 1; \/* 0 if we haven't authed, 1 if we have. Applies for$/;"	m	language:C++	struct:AuthState	access:public
authenticate	sftp-server/openbsd-compat/port-aix.h	/^int authenticate(char *, char *, int *, char **);$/;"	p	language:C++	signature:(char *, char *, int *, char **)
authstate	session.h	/^	struct AuthState authstate; \/* Common amongst client and server, since most$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::AuthState	access:public
authtypes	auth.h	/^	unsigned char authtypes; \/* Flags indicating which auth types are still $/;"	m	language:C++	struct:AuthState	access:public
avg	libtomcrypt/testprof/tomcrypt_test.h	/^    unsigned long spd1, spd2, avg;$/;"	m	language:C++	struct:list	access:public
await_open	channel.h	/^	int await_open; \/* flag indicating whether we've sent an open request$/;"	m	language:C++	struct:Channel	access:public
b64_ntop	sftp-server/openbsd-compat/base64.h	/^int b64_ntop(u_char const *src, size_t srclength, char *target, $/;"	p	language:C++	signature:(u_char const *src, size_t srclength, char *target, size_t targsize)
b64_pton	sftp-server/openbsd-compat/base64.h	/^int b64_pton(char const *src, u_char *target, size_t targsize);$/;"	p	language:C++	signature:(char const *src, u_char *target, size_t targsize)
backgrounded	runopts.h	/^	int backgrounded;$/;"	m	language:C++	struct:cli_runopts	access:public
banner	runopts.h	/^	buffer * banner;$/;"	m	language:C++	struct:svr_runopts	access:public
bannerfile	runopts.h	/^	char * bannerfile;$/;"	m	language:C++	struct:svr_runopts	access:public
base64_decode	libtomcrypt/src/headers/tomcrypt_misc.h	/^int base64_decode(const unsigned char *in,  unsigned long len, $/;"	p	language:C++	signature:(const unsigned char *in, unsigned long len, unsigned char *out, unsigned long *outlen)
base64_decode	libtomcrypt/src/misc/base64/base64_decode.c	/^int base64_decode(const unsigned char *in,  unsigned long inlen, $/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
base64_encode	libtomcrypt/src/headers/tomcrypt_misc.h	/^int base64_encode(const unsigned char *in,  unsigned long len, $/;"	p	language:C++	signature:(const unsigned char *in, unsigned long len, unsigned char *out, unsigned long *outlen)
base64_encode	libtomcrypt/src/misc/base64/base64_encode.c	/^int base64_encode(const unsigned char *in,  unsigned long inlen, $/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
base64_encode_fp	keyimport.c	/^static void base64_encode_fp(FILE * fp, unsigned char *data,$/;"	f	language:C	file:	signature:(FILE * fp, unsigned char *data, int datalen, int cpl)
base64_gen	libtomcrypt/demos/tv_gen.c	/^void base64_gen(void)$/;"	f	language:C	signature:(void)
base64_test	libtomcrypt/testprof/base64_test.c	/^int base64_test(void)$/;"	f	language:C	signature:(void)
basename	compat.c	/^char *basename(const char *path) {$/;"	f	language:C	signature:(const char *path)
basename	compat.h	/^char *basename(const char* path);$/;"	p	language:C++	signature:(const char* path)
basename	sftp-server/openbsd-compat/openbsd-compat.h	/^char *basename(const char *path);$/;"	p	language:C++	signature:(const char *path)
baseten	libtomcrypt/src/pk/asn1/der/utctime/der_encode_utctime.c	/^static const char *baseten = "0123456789";$/;"	v	language:C	file:
begin{alltt}
begin{verbatim}
ber_read_id_len	keyimport.c	/^static int ber_read_id_len(void *source, int sourcelen,$/;"	f	language:C	file:	signature:(void *source, int sourcelen, int *id, int *length, int *flags)
ber_write_id_len	keyimport.c	/^static int ber_write_id_len(void *dest, int id, int length, int flags)$/;"	f	language:C	file:	signature:(void *dest, int id, int length, int flags)
bigbyte	libtomcrypt/src/ciphers/des.c	/^static const ulong32 bigbyte[24] =$/;"	v	language:C	file:
binary_open	sftp-server/openbsd-compat/bsd-cygwin_util.h	/^int binary_open(const char *, int , ...);$/;"	p	language:C++	signature:(const char *, int , ...)
binary_pipe	sftp-server/openbsd-compat/bsd-cygwin_util.h	/^int binary_pipe(int fd[2]);$/;"	p	language:C++	signature:(int fd[2])
bindagent	svr-agentfwd.c	/^static int bindagent(int fd, struct ChanSess * chansess) {$/;"	f	language:C	file:	signature:(int fd, struct ChanSess * chansess)
bindagent	svr-agentfwd.c	/^static int bindagent(int fd, struct ChanSess * chansess);$/;"	p	language:C	file:	signature:(int fd, struct ChanSess * chansess)
bindport	svr-x11fwd.c	/^static int bindport(int fd) {$/;"	f	language:C	file:	signature:(int fd)
bindport	svr-x11fwd.c	/^static int bindport(int fd);$/;"	p	language:C	file:	signature:(int fd)
bindresvport_sa	sftp-server/openbsd-compat/openbsd-compat.h	/^int bindresvport_sa(int sd, struct sockaddr *sa);$/;"	p	language:C++	signature:(int sd, struct sockaddr *sa)
bitcount	sftp-server/openbsd-compat/sha2.h	/^	u_int64_t	bitcount;$/;"	m	language:C++	struct:_SHA256_CTX	access:public
bitcount	sftp-server/openbsd-compat/sha2.h	/^	u_int64_t	bitcount[2];$/;"	m	language:C++	struct:_SHA512_CTX	access:public
bits_per_digit	libtomcrypt/src/headers/tomcrypt_math.h	/^   int  bits_per_digit;$/;"	m	language:C++	struct:__anon54	access:public
blklen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                   blklen;$/;"	m	language:C++	struct:__anon47	access:public
block	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     block[MAXBLOCKSIZE],     \/* currently accumulated block *\/$/;"	m	language:C++	struct:__anon48	access:public
block	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned char   block[MAXBLOCKSIZE],$/;"	m	language:C++	struct:__anon47	access:public
block_index	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned long     block_index;             \/* index # for current block *\/$/;"	m	language:C++	struct:__anon48	access:public
block_index	libtomcrypt/src/headers/tomcrypt_mac.h	/^   unsigned long     block_index;             \/* index # for current block *\/$/;"	m	language:C++	struct:__anon50	access:public
block_len	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     block_len,               \/* length of block *\/$/;"	m	language:C++	struct:__anon48	access:public
block_len	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     block_len;               \/* length of block *\/$/;"	m	language:C++	struct:__anon50	access:public
block_length	libtomcrypt/src/headers/tomcrypt_cipher.h	/^        block_length, $/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
blockcnt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32             blockcnt;$/;"	m	language:C++	struct:__anon46	access:public
blocklen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       blocklen, $/;"	m	language:C++	struct:__anon41	access:public
blocklen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       blocklen, $/;"	m	language:C++	struct:__anon42	access:public
blocklen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       blocklen, $/;"	m	language:C++	struct:__anon44	access:public
blocklen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       blocklen, $/;"	m	language:C++	struct:__anon46	access:public
blocklen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       blocklen;$/;"	m	language:C++	struct:__anon40	access:public
blocklen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       blocklen;$/;"	m	language:C++	struct:__anon43	access:public
blocksize	algo.h	/^	unsigned char blocksize;$/;"	m	language:C++	struct:dropbear_cipher	access:public
blocksize	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned long blocksize;$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
blocksize	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 blocksize;$/;"	m	language:C++	struct:__anon52	access:public
blocksize	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 blocksize;$/;"	m	language:C++	struct:__anon53	access:public
blowfish	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct blowfish_key blowfish;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::blowfish_key	access:public
blowfish_desc	libtomcrypt/src/ciphers/blowfish.c	/^const struct ltc_cipher_descriptor blowfish_desc =$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
blowfish_done	libtomcrypt/src/ciphers/blowfish.c	/^void blowfish_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
blowfish_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void blowfish_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
blowfish_ecb_decrypt	libtomcrypt/src/ciphers/blowfish.c	/^int blowfish_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
blowfish_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int blowfish_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
blowfish_ecb_encrypt	libtomcrypt/src/ciphers/blowfish.c	/^int blowfish_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
blowfish_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int blowfish_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
blowfish_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct blowfish_key {$/;"	s	language:C++
blowfish_key::K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 K[18];$/;"	m	language:C++	struct:blowfish_key	access:public
blowfish_key::S	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 S[4][256];$/;"	m	language:C++	struct:blowfish_key	access:public
blowfish_keysize	libtomcrypt/src/ciphers/blowfish.c	/^int blowfish_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
blowfish_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int blowfish_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
blowfish_setup	libtomcrypt/src/ciphers/blowfish.c	/^int blowfish_setup(const unsigned char *key, int keylen, int num_rounds,$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
blowfish_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int blowfish_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
blowfish_test	libtomcrypt/src/ciphers/blowfish.c	/^int blowfish_test(void)$/;"	f	language:C	signature:(void)
blowfish_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int blowfish_test(void);$/;"	p	language:C++	signature:(void)
bn_reverse	libtommath/bn_reverse.c	/^bn_reverse (unsigned char *s, int len)$/;"	f	language:C	signature:(unsigned char *s, int len)
bn_reverse	libtommath/pre_gen/mpi.c	/^bn_reverse (unsigned char *s, int len)$/;"	f	language:C	signature:(unsigned char *s, int len)
bn_reverse	libtommath/tommath.h	/^void bn_reverse(unsigned char *s, int len);$/;"	p	language:C++	signature:(unsigned char *s, int len)
buf	buffer.h	/^struct buf {$/;"	s	language:C++
buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[128];$/;"	m	language:C++	struct:sha512_state	access:public
buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:md4_state	access:public
buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:md5_state	access:public
buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:rmd128_state	access:public
buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:rmd160_state	access:public
buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:rmd256_state	access:public
buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:rmd320_state	access:public
buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:sha1_state	access:public
buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:sha256_state	access:public
buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:tiger_state	access:public
buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:whirlpool_state	access:public
buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char chksum[16], X[48], buf[16];$/;"	m	language:C++	struct:md2_state	access:public
buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char state[MAXBLOCKSIZE], buf[MAXBLOCKSIZE];$/;"	m	language:C++	struct:chc_state	access:public
buf	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       buf[16];      \/* buffer for stuff *\/$/;"	m	language:C++	struct:__anon51	access:public
buf	libtomcrypt/src/headers/tomcrypt_prng.h	/^    unsigned char buf[256];$/;"	m	language:C++	struct:rc4_prng	access:public
buf	libtommath/demo/demo.c	/^char cmd[4096], buf[4096];$/;"	v	language:C
buf	scp.c	/^	char *buf;$/;"	m	language:C	struct:__anon17	file:	access:public
buf	sftp-server/buffer.h	/^	u_char	*buf;		\/* Buffer for data. *\/$/;"	m	language:C++	struct:__anon3	access:public
buf::data	buffer.h	/^	unsigned char * data;$/;"	m	language:C++	struct:buf	access:public
buf::len	buffer.h	/^	unsigned int len; \/* the used size *\/$/;"	m	language:C++	struct:buf	access:public
buf::pos	buffer.h	/^	unsigned int pos;$/;"	m	language:C++	struct:buf	access:public
buf::size	buffer.h	/^	unsigned int size; \/* the memory size *\/$/;"	m	language:C++	struct:buf	access:public
buf_burn	buffer.c	/^void buf_burn(buffer* buf) {$/;"	f	language:C	signature:(buffer* buf)
buf_burn	buffer.h	/^void buf_burn(buffer* buf);$/;"	p	language:C++	signature:(buffer* buf)
buf_compress	packet.c	/^static void buf_compress(buffer * dest, buffer * src, unsigned int len) {$/;"	f	language:C	file:	signature:(buffer * dest, buffer * src, unsigned int len)
buf_compress	packet.c	/^static void buf_compress(buffer * dest, buffer * src, unsigned int len);$/;"	p	language:C	file:	signature:(buffer * dest, buffer * src, unsigned int len)
buf_decompress	packet.c	/^static buffer* buf_decompress(buffer* buf, unsigned int len) {$/;"	f	language:C	file:	signature:(buffer* buf, unsigned int len)
buf_decompress	packet.c	/^static buffer* buf_decompress(buffer* buf, unsigned int len);$/;"	p	language:C	file:	signature:(buffer* buf, unsigned int len)
buf_dss_verify	dss.c	/^int buf_dss_verify(buffer* buf, dropbear_dss_key *key, const unsigned char* data,$/;"	f	language:C	signature:(buffer* buf, dropbear_dss_key *key, const unsigned char* data, unsigned int len)
buf_dss_verify	dss.h	/^int buf_dss_verify(buffer* buf, dropbear_dss_key *key, const unsigned char* data,$/;"	p	language:C++	signature:(buffer* buf, dropbear_dss_key *key, const unsigned char* data, unsigned int len)
buf_eatstring	buffer.c	/^void buf_eatstring(buffer *buf) {$/;"	f	language:C	signature:(buffer *buf)
buf_eatstring	buffer.h	/^void buf_eatstring(buffer *buf);$/;"	p	language:C++	signature:(buffer *buf)
buf_free	buffer.c	/^void buf_free(buffer* buf) {$/;"	f	language:C	signature:(buffer* buf)
buf_free	buffer.h	/^void buf_free(buffer* buf);$/;"	p	language:C++	signature:(buffer* buf)
buf_get_dss_priv_key	dss.c	/^int buf_get_dss_priv_key(buffer* buf, dropbear_dss_key *key) {$/;"	f	language:C	signature:(buffer* buf, dropbear_dss_key *key)
buf_get_dss_priv_key	dss.h	/^int buf_get_dss_priv_key(buffer* buf, dropbear_dss_key *key);$/;"	p	language:C++	signature:(buffer* buf, dropbear_dss_key *key)
buf_get_dss_pub_key	dss.c	/^int buf_get_dss_pub_key(buffer* buf, dropbear_dss_key *key) {$/;"	f	language:C	signature:(buffer* buf, dropbear_dss_key *key)
buf_get_dss_pub_key	dss.h	/^int buf_get_dss_pub_key(buffer* buf, dropbear_dss_key *key);$/;"	p	language:C++	signature:(buffer* buf, dropbear_dss_key *key)
buf_get_priv_key	signkey.c	/^int buf_get_priv_key(buffer *buf, sign_key *key, int *type) {$/;"	f	language:C	signature:(buffer *buf, sign_key *key, int *type)
buf_get_priv_key	signkey.h	/^int buf_get_priv_key(buffer* buf, sign_key *key, int *type);$/;"	p	language:C++	signature:(buffer* buf, sign_key *key, int *type)
buf_get_pub_key	signkey.c	/^int buf_get_pub_key(buffer *buf, sign_key *key, int *type) {$/;"	f	language:C	signature:(buffer *buf, sign_key *key, int *type)
buf_get_pub_key	signkey.h	/^int buf_get_pub_key(buffer *buf, sign_key *key, int *type);$/;"	p	language:C++	signature:(buffer *buf, sign_key *key, int *type)
buf_get_rsa_priv_key	rsa.c	/^int buf_get_rsa_priv_key(buffer* buf, dropbear_rsa_key *key) {$/;"	f	language:C	signature:(buffer* buf, dropbear_rsa_key *key)
buf_get_rsa_priv_key	rsa.h	/^int buf_get_rsa_priv_key(buffer* buf, dropbear_rsa_key *key);$/;"	p	language:C++	signature:(buffer* buf, dropbear_rsa_key *key)
buf_get_rsa_pub_key	rsa.c	/^int buf_get_rsa_pub_key(buffer* buf, dropbear_rsa_key *key) {$/;"	f	language:C	signature:(buffer* buf, dropbear_rsa_key *key)
buf_get_rsa_pub_key	rsa.h	/^int buf_get_rsa_pub_key(buffer* buf, dropbear_rsa_key *key);$/;"	p	language:C++	signature:(buffer* buf, dropbear_rsa_key *key)
buf_getbool	buffer.c	/^unsigned char buf_getbool(buffer* buf) {$/;"	f	language:C	signature:(buffer* buf)
buf_getbool	buffer.h	/^unsigned char buf_getbool(buffer* buf);$/;"	p	language:C++	signature:(buffer* buf)
buf_getbyte	buffer.c	/^unsigned char buf_getbyte(buffer* buf) {$/;"	f	language:C	signature:(buffer* buf)
buf_getbyte	buffer.h	/^unsigned char buf_getbyte(buffer* buf);$/;"	p	language:C++	signature:(buffer* buf)
buf_getint	buffer.c	/^unsigned int buf_getint(buffer* buf) {$/;"	f	language:C	signature:(buffer* buf)
buf_getint	buffer.h	/^unsigned int buf_getint(buffer* buf);$/;"	p	language:C++	signature:(buffer* buf)
buf_getline	dbutil.c	/^int buf_getline(buffer * line, FILE * authfile) {$/;"	f	language:C	signature:(buffer * line, FILE * authfile)
buf_getline	dbutil.h	/^int buf_getline(buffer * line, FILE * authfile);$/;"	p	language:C++	signature:(buffer * line, FILE * authfile)
buf_getmpint	buffer.c	/^int buf_getmpint(buffer* buf, mp_int* mp) {$/;"	f	language:C	signature:(buffer* buf, mp_int* mp)
buf_getmpint	buffer.h	/^int buf_getmpint(buffer* buf, mp_int* mp);$/;"	p	language:C++	signature:(buffer* buf, mp_int* mp)
buf_getptr	buffer.c	/^unsigned char* buf_getptr(buffer* buf, unsigned int len) {$/;"	f	language:C	signature:(buffer* buf, unsigned int len)
buf_getptr	buffer.h	/^unsigned char* buf_getptr(buffer* buf, unsigned int len);$/;"	p	language:C++	signature:(buffer* buf, unsigned int len)
buf_getstring	buffer.c	/^unsigned char* buf_getstring(buffer* buf, unsigned int *retlen) {$/;"	f	language:C	signature:(buffer* buf, unsigned int *retlen)
buf_getstring	buffer.h	/^unsigned char* buf_getstring(buffer* buf, unsigned int *retlen);$/;"	p	language:C++	signature:(buffer* buf, unsigned int *retlen)
buf_getstringbuf	buffer.c	/^buffer * buf_getstringbuf(buffer *buf) {$/;"	f	language:C	signature:(buffer *buf)
buf_getstringbuf	buffer.h	/^buffer * buf_getstringbuf(buffer *buf);$/;"	p	language:C++	signature:(buffer *buf)
buf_getwriteptr	buffer.c	/^unsigned char* buf_getwriteptr(buffer* buf, unsigned int len) {$/;"	f	language:C	signature:(buffer* buf, unsigned int len)
buf_getwriteptr	buffer.h	/^unsigned char* buf_getwriteptr(buffer* buf, unsigned int len);$/;"	p	language:C++	signature:(buffer* buf, unsigned int len)
buf_incrlen	buffer.c	/^void buf_incrlen(buffer* buf, unsigned int incr) {$/;"	f	language:C	signature:(buffer* buf, unsigned int incr)
buf_incrlen	buffer.h	/^void buf_incrlen(buffer* buf, unsigned int incr);$/;"	p	language:C++	signature:(buffer* buf, unsigned int incr)
buf_incrpos	buffer.c	/^void buf_incrpos(buffer* buf,  int incr) {$/;"	f	language:C	signature:(buffer* buf, int incr)
buf_incrpos	buffer.h	/^void buf_incrpos(buffer* buf, int incr); \/* -ve is ok, to go backwards *\/$/;"	p	language:C++	signature:(buffer* buf, int incr)
buf_incrwritepos	buffer.c	/^void buf_incrwritepos(buffer* buf, unsigned int incr) {$/;"	f	language:C	signature:(buffer* buf, unsigned int incr)
buf_incrwritepos	buffer.h	/^void buf_incrwritepos(buffer* buf, unsigned int incr);$/;"	p	language:C++	signature:(buffer* buf, unsigned int incr)
buf_match_algo	session.h	/^	algo_type*(*buf_match_algo)(buffer*buf, algo_type localalgos[],$/;"	m	language:C++	struct:sshsession	access:public
buf_new	buffer.c	/^buffer* buf_new(unsigned int size) {$/;"	f	language:C	signature:(unsigned int size)
buf_new	buffer.h	/^buffer * buf_new(unsigned int size);$/;"	p	language:C++	signature:(unsigned int size)
buf_newcopy	buffer.c	/^buffer* buf_newcopy(buffer* buf) {$/;"	f	language:C	signature:(buffer* buf)
buf_newcopy	buffer.h	/^buffer* buf_newcopy(buffer* buf);$/;"	p	language:C++	signature:(buffer* buf)
buf_put_algolist	algo.h	/^void buf_put_algolist(buffer * buf, algo_type localalgos[]);$/;"	p	language:C++	signature:(buffer * buf, algo_type localalgos[])
buf_put_algolist	common-algo.c	/^void buf_put_algolist(buffer * buf, algo_type localalgos[]) {$/;"	f	language:C	signature:(buffer * buf, algo_type localalgos[])
buf_put_dss_priv_key	dss.c	/^void buf_put_dss_priv_key(buffer* buf, dropbear_dss_key *key) {$/;"	f	language:C	signature:(buffer* buf, dropbear_dss_key *key)
buf_put_dss_priv_key	dss.h	/^void buf_put_dss_priv_key(buffer* buf, dropbear_dss_key *key);$/;"	p	language:C++	signature:(buffer* buf, dropbear_dss_key *key)
buf_put_dss_pub_key	dss.c	/^void buf_put_dss_pub_key(buffer* buf, dropbear_dss_key *key) {$/;"	f	language:C	signature:(buffer* buf, dropbear_dss_key *key)
buf_put_dss_pub_key	dss.h	/^void buf_put_dss_pub_key(buffer* buf, dropbear_dss_key *key);$/;"	p	language:C++	signature:(buffer* buf, dropbear_dss_key *key)
buf_put_dss_sign	dss.c	/^void buf_put_dss_sign(buffer* buf, dropbear_dss_key *key, const unsigned char* data,$/;"	f	language:C	signature:(buffer* buf, dropbear_dss_key *key, const unsigned char* data, unsigned int len)
buf_put_dss_sign	dss.h	/^void buf_put_dss_sign(buffer* buf, dropbear_dss_key *key, const unsigned char* data,$/;"	p	language:C++	signature:(buffer* buf, dropbear_dss_key *key, const unsigned char* data, unsigned int len)
buf_put_priv_key	signkey.c	/^void buf_put_priv_key(buffer* buf, sign_key *key, int type) {$/;"	f	language:C	signature:(buffer* buf, sign_key *key, int type)
buf_put_priv_key	signkey.h	/^void buf_put_priv_key(buffer* buf, sign_key *key, int type);$/;"	p	language:C++	signature:(buffer* buf, sign_key *key, int type)
buf_put_pub_key	signkey.c	/^void buf_put_pub_key(buffer* buf, sign_key *key, int type) {$/;"	f	language:C	signature:(buffer* buf, sign_key *key, int type)
buf_put_pub_key	signkey.h	/^void buf_put_pub_key(buffer* buf, sign_key *key, int type);$/;"	p	language:C++	signature:(buffer* buf, sign_key *key, int type)
buf_put_rsa_priv_key	rsa.c	/^void buf_put_rsa_priv_key(buffer* buf, dropbear_rsa_key *key) {$/;"	f	language:C	signature:(buffer* buf, dropbear_rsa_key *key)
buf_put_rsa_priv_key	rsa.h	/^void buf_put_rsa_priv_key(buffer* buf, dropbear_rsa_key *key);$/;"	p	language:C++	signature:(buffer* buf, dropbear_rsa_key *key)
buf_put_rsa_pub_key	rsa.c	/^void buf_put_rsa_pub_key(buffer* buf, dropbear_rsa_key *key) {$/;"	f	language:C	signature:(buffer* buf, dropbear_rsa_key *key)
buf_put_rsa_pub_key	rsa.h	/^void buf_put_rsa_pub_key(buffer* buf, dropbear_rsa_key *key);$/;"	p	language:C++	signature:(buffer* buf, dropbear_rsa_key *key)
buf_put_rsa_sign	rsa.c	/^void buf_put_rsa_sign(buffer* buf, dropbear_rsa_key *key, const unsigned char* data,$/;"	f	language:C	signature:(buffer* buf, dropbear_rsa_key *key, const unsigned char* data, unsigned int len)
buf_put_rsa_sign	rsa.h	/^void buf_put_rsa_sign(buffer* buf, dropbear_rsa_key *key, const unsigned char* data,$/;"	p	language:C++	signature:(buffer* buf, dropbear_rsa_key *key, const unsigned char* data, unsigned int len)
buf_put_sign	signkey.c	/^void buf_put_sign(buffer* buf, sign_key *key, int type, $/;"	f	language:C	signature:(buffer* buf, sign_key *key, int type, const unsigned char *data, unsigned int len)
buf_put_sign	signkey.h	/^void buf_put_sign(buffer* buf, sign_key *key, int type, $/;"	p	language:C++	signature:(buffer* buf, sign_key *key, int type, const unsigned char *data, unsigned int len)
buf_putbyte	buffer.c	/^void buf_putbyte(buffer* buf, unsigned char val) {$/;"	f	language:C	signature:(buffer* buf, unsigned char val)
buf_putbyte	buffer.h	/^void buf_putbyte(buffer* buf, unsigned char val);$/;"	p	language:C++	signature:(buffer* buf, unsigned char val)
buf_putbytes	buffer.c	/^void buf_putbytes(buffer *buf, const unsigned char *bytes, unsigned int len) {$/;"	f	language:C	signature:(buffer *buf, const unsigned char *bytes, unsigned int len)
buf_putbytes	buffer.h	/^void buf_putbytes(buffer *buf, const unsigned char *bytes, unsigned int len);$/;"	p	language:C++	signature:(buffer *buf, const unsigned char *bytes, unsigned int len)
buf_putint	buffer.c	/^void buf_putint(buffer* buf, int unsigned val) {$/;"	f	language:C	signature:(buffer* buf, int unsigned val)
buf_putint	buffer.h	/^void buf_putint(buffer* buf, unsigned int val);$/;"	p	language:C++	signature:(buffer* buf, unsigned int val)
buf_putmpint	buffer.c	/^void buf_putmpint(buffer* buf, mp_int * mp) {$/;"	f	language:C	signature:(buffer* buf, mp_int * mp)
buf_putmpint	buffer.h	/^void buf_putmpint(buffer* buf, mp_int * mp);$/;"	p	language:C++	signature:(buffer* buf, mp_int * mp)
buf_putstring	buffer.c	/^void buf_putstring(buffer* buf, const unsigned char* str, unsigned int len) {$/;"	f	language:C	signature:(buffer* buf, const unsigned char* str, unsigned int len)
buf_putstring	buffer.h	/^void buf_putstring(buffer* buf, const unsigned char* str, unsigned int len);$/;"	p	language:C++	signature:(buffer* buf, const unsigned char* str, unsigned int len)
buf_readfile	dbutil.c	/^int buf_readfile(buffer* buf, const char* filename) {$/;"	f	language:C	signature:(buffer* buf, const char* filename)
buf_readfile	dbutil.h	/^int buf_readfile(buffer* buf, const char* filename);$/;"	p	language:C++	signature:(buffer* buf, const char* filename)
buf_resize	buffer.c	/^void buf_resize(buffer *buf, unsigned int newsize) {$/;"	f	language:C	signature:(buffer *buf, unsigned int newsize)
buf_resize	buffer.h	/^void buf_resize(buffer *buf, unsigned int newsize);$/;"	p	language:C++	signature:(buffer *buf, unsigned int newsize)
buf_rsa_verify	rsa.c	/^int buf_rsa_verify(buffer * buf, dropbear_rsa_key *key, const unsigned char* data,$/;"	f	language:C	signature:(buffer * buf, dropbear_rsa_key *key, const unsigned char* data, unsigned int len)
buf_rsa_verify	rsa.h	/^int buf_rsa_verify(buffer * buf, dropbear_rsa_key *key, const unsigned char* data,$/;"	p	language:C++	signature:(buffer * buf, dropbear_rsa_key *key, const unsigned char* data, unsigned int len)
buf_setlen	buffer.c	/^void buf_setlen(buffer* buf, unsigned int len) {$/;"	f	language:C	signature:(buffer* buf, unsigned int len)
buf_setlen	buffer.h	/^void buf_setlen(buffer* buf, unsigned int len);$/;"	p	language:C++	signature:(buffer* buf, unsigned int len)
buf_setpos	buffer.c	/^void buf_setpos(buffer* buf, unsigned int pos) {$/;"	f	language:C	signature:(buffer* buf, unsigned int pos)
buf_setpos	buffer.h	/^void buf_setpos(buffer* buf, unsigned int pos);$/;"	p	language:C++	signature:(buffer* buf, unsigned int pos)
buf_verify	signkey.c	/^int buf_verify(buffer * buf, sign_key *key, const unsigned char *data,$/;"	f	language:C	signature:(buffer * buf, sign_key *key, const unsigned char *data, unsigned int len)
buf_verify	signkey.h	/^int buf_verify(buffer * buf, sign_key *key, const unsigned char *data,$/;"	p	language:C++	signature:(buffer * buf, sign_key *key, const unsigned char *data, unsigned int len)
buf_writefile	dropbearkey.c	/^static void buf_writefile(buffer * buf, const char * filename) {$/;"	f	language:C	file:	signature:(buffer * buf, const char * filename)
buf_writefile	dropbearkey.c	/^static void buf_writefile(buffer * buf, const char * filename);$/;"	p	language:C	file:	signature:(buffer * buf, const char * filename)
buffer	buffer.h	/^typedef struct buf buffer;$/;"	t	language:C++	typeref:struct:buf
buffer	sftp-server/openbsd-compat/sha2.h	/^	u_int8_t	buffer[SHA256_BLOCK_LENGTH];$/;"	m	language:C++	struct:_SHA256_CTX	access:public
buffer	sftp-server/openbsd-compat/sha2.h	/^	u_int8_t	buffer[SHA512_BLOCK_LENGTH];$/;"	m	language:C++	struct:_SHA512_CTX	access:public
buffer_append	sftp-server/buffer.c	/^buffer_append(Buffer *buffer, const void *data, u_int len)$/;"	f	language:C	signature:(Buffer *buffer, const void *data, u_int len)
buffer_append	sftp-server/buffer.h	/^void	 buffer_append(Buffer *, const void *, u_int);$/;"	p	language:C++	signature:(Buffer *, const void *, u_int)
buffer_append_space	sftp-server/buffer.c	/^buffer_append_space(Buffer *buffer, u_int len)$/;"	f	language:C	signature:(Buffer *buffer, u_int len)
buffer_append_space	sftp-server/buffer.h	/^void	*buffer_append_space(Buffer *, u_int);$/;"	p	language:C++	signature:(Buffer *, u_int)
buffer_check_alloc	sftp-server/buffer.c	/^buffer_check_alloc(Buffer *buffer, u_int len)$/;"	f	language:C	signature:(Buffer *buffer, u_int len)
buffer_check_alloc	sftp-server/buffer.h	/^int	 buffer_check_alloc(Buffer *, u_int);$/;"	p	language:C++	signature:(Buffer *, u_int)
buffer_clear	sftp-server/buffer.c	/^buffer_clear(Buffer *buffer)$/;"	f	language:C	signature:(Buffer *buffer)
buffer_clear	sftp-server/buffer.h	/^void	 buffer_clear(Buffer *);$/;"	p	language:C++	signature:(Buffer *)
buffer_compact	sftp-server/buffer.c	/^buffer_compact(Buffer *buffer)$/;"	f	language:C	file:	signature:(Buffer *buffer)
buffer_consume	sftp-server/buffer.c	/^buffer_consume(Buffer *buffer, u_int bytes)$/;"	f	language:C	signature:(Buffer *buffer, u_int bytes)
buffer_consume	sftp-server/buffer.h	/^void	 buffer_consume(Buffer *, u_int);$/;"	p	language:C++	signature:(Buffer *, u_int)
buffer_consume_end	sftp-server/buffer.c	/^buffer_consume_end(Buffer *buffer, u_int bytes)$/;"	f	language:C	signature:(Buffer *buffer, u_int bytes)
buffer_consume_end	sftp-server/buffer.h	/^void	 buffer_consume_end(Buffer *, u_int);$/;"	p	language:C++	signature:(Buffer *, u_int)
buffer_consume_end_ret	sftp-server/buffer.c	/^buffer_consume_end_ret(Buffer *buffer, u_int bytes)$/;"	f	language:C	signature:(Buffer *buffer, u_int bytes)
buffer_consume_end_ret	sftp-server/buffer.h	/^int	 buffer_consume_end_ret(Buffer *, u_int);$/;"	p	language:C++	signature:(Buffer *, u_int)
buffer_consume_ret	sftp-server/buffer.c	/^buffer_consume_ret(Buffer *buffer, u_int bytes)$/;"	f	language:C	signature:(Buffer *buffer, u_int bytes)
buffer_consume_ret	sftp-server/buffer.h	/^int	 buffer_consume_ret(Buffer *, u_int);$/;"	p	language:C++	signature:(Buffer *, u_int)
buffer_dump	sftp-server/buffer.c	/^buffer_dump(const Buffer *buffer)$/;"	f	language:C	signature:(const Buffer *buffer)
buffer_dump	sftp-server/buffer.h	/^void     buffer_dump(const Buffer *);$/;"	p	language:C++	signature:(const Buffer *)
buffer_free	sftp-server/buffer.c	/^buffer_free(Buffer *buffer)$/;"	f	language:C	signature:(Buffer *buffer)
buffer_free	sftp-server/buffer.h	/^void	 buffer_free(Buffer *);$/;"	p	language:C++	signature:(Buffer *)
buffer_get	sftp-server/buffer.c	/^buffer_get(Buffer *buffer, void *buf, u_int len)$/;"	f	language:C	signature:(Buffer *buffer, void *buf, u_int len)
buffer_get	sftp-server/buffer.h	/^void	 buffer_get(Buffer *, void *, u_int);$/;"	p	language:C++	signature:(Buffer *, void *, u_int)
buffer_get_bignum	sftp-server/buffer.h	/^void	buffer_get_bignum(Buffer *, BIGNUM *);$/;"	p	language:C++	signature:(Buffer *, BIGNUM *)
buffer_get_bignum2	sftp-server/buffer.h	/^void	buffer_get_bignum2(Buffer *, BIGNUM *);$/;"	p	language:C++	signature:(Buffer *, BIGNUM *)
buffer_get_bignum2_ret	sftp-server/buffer.h	/^int	buffer_get_bignum2_ret(Buffer *, BIGNUM *);$/;"	p	language:C++	signature:(Buffer *, BIGNUM *)
buffer_get_bignum_ret	sftp-server/buffer.h	/^int	buffer_get_bignum_ret(Buffer *, BIGNUM *);$/;"	p	language:C++	signature:(Buffer *, BIGNUM *)
buffer_get_char	sftp-server/bufaux.c	/^buffer_get_char(Buffer *buffer)$/;"	f	language:C	signature:(Buffer *buffer)
buffer_get_char	sftp-server/buffer.h	/^int     buffer_get_char(Buffer *);$/;"	p	language:C++	signature:(Buffer *)
buffer_get_char_ret	sftp-server/bufaux.c	/^buffer_get_char_ret(char *ret, Buffer *buffer)$/;"	f	language:C	signature:(char *ret, Buffer *buffer)
buffer_get_char_ret	sftp-server/buffer.h	/^int	buffer_get_char_ret(char *, Buffer *);$/;"	p	language:C++	signature:(char *, Buffer *)
buffer_get_int	sftp-server/bufaux.c	/^buffer_get_int(Buffer *buffer)$/;"	f	language:C	signature:(Buffer *buffer)
buffer_get_int	sftp-server/buffer.h	/^u_int	buffer_get_int(Buffer *);$/;"	p	language:C++	signature:(Buffer *)
buffer_get_int64	sftp-server/bufaux.c	/^buffer_get_int64(Buffer *buffer)$/;"	f	language:C	signature:(Buffer *buffer)
buffer_get_int64	sftp-server/buffer.h	/^u_int64_t buffer_get_int64(Buffer *);$/;"	p	language:C++	signature:(Buffer *)
buffer_get_int64_ret	sftp-server/bufaux.c	/^buffer_get_int64_ret(u_int64_t *ret, Buffer *buffer)$/;"	f	language:C	signature:(u_int64_t *ret, Buffer *buffer)
buffer_get_int64_ret	sftp-server/buffer.h	/^int	buffer_get_int64_ret(u_int64_t *, Buffer *);$/;"	p	language:C++	signature:(u_int64_t *, Buffer *)
buffer_get_int_ret	sftp-server/bufaux.c	/^buffer_get_int_ret(u_int *ret, Buffer *buffer)$/;"	f	language:C	signature:(u_int *ret, Buffer *buffer)
buffer_get_int_ret	sftp-server/buffer.h	/^int	buffer_get_int_ret(u_int *, Buffer *);$/;"	p	language:C++	signature:(u_int *, Buffer *)
buffer_get_ret	sftp-server/buffer.c	/^buffer_get_ret(Buffer *buffer, void *buf, u_int len)$/;"	f	language:C	signature:(Buffer *buffer, void *buf, u_int len)
buffer_get_ret	sftp-server/buffer.h	/^int	 buffer_get_ret(Buffer *, void *, u_int);$/;"	p	language:C++	signature:(Buffer *, void *, u_int)
buffer_get_short	sftp-server/bufaux.c	/^buffer_get_short(Buffer *buffer)$/;"	f	language:C	signature:(Buffer *buffer)
buffer_get_short	sftp-server/buffer.h	/^u_short	buffer_get_short(Buffer *);$/;"	p	language:C++	signature:(Buffer *)
buffer_get_short_ret	sftp-server/bufaux.c	/^buffer_get_short_ret(u_short *ret, Buffer *buffer)$/;"	f	language:C	signature:(u_short *ret, Buffer *buffer)
buffer_get_short_ret	sftp-server/buffer.h	/^int	buffer_get_short_ret(u_short *, Buffer *);$/;"	p	language:C++	signature:(u_short *, Buffer *)
buffer_get_string	sftp-server/bufaux.c	/^buffer_get_string(Buffer *buffer, u_int *length_ptr)$/;"	f	language:C	signature:(Buffer *buffer, u_int *length_ptr)
buffer_get_string	sftp-server/buffer.h	/^void   *buffer_get_string(Buffer *, u_int *);$/;"	p	language:C++	signature:(Buffer *, u_int *)
buffer_get_string_ptr	sftp-server/bufaux.c	/^buffer_get_string_ptr(Buffer *buffer, u_int *length_ptr)$/;"	f	language:C	signature:(Buffer *buffer, u_int *length_ptr)
buffer_get_string_ptr	sftp-server/buffer.h	/^void   *buffer_get_string_ptr(Buffer *, u_int *);$/;"	p	language:C++	signature:(Buffer *, u_int *)
buffer_get_string_ptr_ret	sftp-server/bufaux.c	/^buffer_get_string_ptr_ret(Buffer *buffer, u_int *length_ptr)$/;"	f	language:C	signature:(Buffer *buffer, u_int *length_ptr)
buffer_get_string_ptr_ret	sftp-server/buffer.h	/^void	*buffer_get_string_ptr_ret(Buffer *, u_int *);$/;"	p	language:C++	signature:(Buffer *, u_int *)
buffer_get_string_ret	sftp-server/bufaux.c	/^buffer_get_string_ret(Buffer *buffer, u_int *length_ptr)$/;"	f	language:C	signature:(Buffer *buffer, u_int *length_ptr)
buffer_get_string_ret	sftp-server/buffer.h	/^void	*buffer_get_string_ret(Buffer *, u_int *);$/;"	p	language:C++	signature:(Buffer *, u_int *)
buffer_init	sftp-server/buffer.c	/^buffer_init(Buffer *buffer)$/;"	f	language:C	signature:(Buffer *buffer)
buffer_init	sftp-server/buffer.h	/^void	 buffer_init(Buffer *);$/;"	p	language:C++	signature:(Buffer *)
buffer_len	sftp-server/buffer.c	/^buffer_len(const Buffer *buffer)$/;"	f	language:C	signature:(const Buffer *buffer)
buffer_len	sftp-server/buffer.h	/^u_int	 buffer_len(const Buffer *);$/;"	p	language:C++	signature:(const Buffer *)
buffer_ptr	sftp-server/buffer.c	/^buffer_ptr(const Buffer *buffer)$/;"	f	language:C	signature:(const Buffer *buffer)
buffer_ptr	sftp-server/buffer.h	/^void	*buffer_ptr(const Buffer *);$/;"	p	language:C++	signature:(const Buffer *)
buffer_put_bignum	sftp-server/buffer.h	/^void    buffer_put_bignum(Buffer *, const BIGNUM *);$/;"	p	language:C++	signature:(Buffer *, const BIGNUM *)
buffer_put_bignum2	sftp-server/buffer.h	/^void    buffer_put_bignum2(Buffer *, const BIGNUM *);$/;"	p	language:C++	signature:(Buffer *, const BIGNUM *)
buffer_put_bignum2_ret	sftp-server/buffer.h	/^int	buffer_put_bignum2_ret(Buffer *, const BIGNUM *);$/;"	p	language:C++	signature:(Buffer *, const BIGNUM *)
buffer_put_bignum_ret	sftp-server/buffer.h	/^int	buffer_put_bignum_ret(Buffer *, const BIGNUM *);$/;"	p	language:C++	signature:(Buffer *, const BIGNUM *)
buffer_put_char	sftp-server/bufaux.c	/^buffer_put_char(Buffer *buffer, int value)$/;"	f	language:C	signature:(Buffer *buffer, int value)
buffer_put_char	sftp-server/buffer.h	/^void    buffer_put_char(Buffer *, int);$/;"	p	language:C++	signature:(Buffer *, int)
buffer_put_cstring	sftp-server/bufaux.c	/^buffer_put_cstring(Buffer *buffer, const char *s)$/;"	f	language:C	signature:(Buffer *buffer, const char *s)
buffer_put_cstring	sftp-server/buffer.h	/^void	buffer_put_cstring(Buffer *, const char *);$/;"	p	language:C++	signature:(Buffer *, const char *)
buffer_put_int	sftp-server/bufaux.c	/^buffer_put_int(Buffer *buffer, u_int value)$/;"	f	language:C	signature:(Buffer *buffer, u_int value)
buffer_put_int	sftp-server/buffer.h	/^void    buffer_put_int(Buffer *, u_int);$/;"	p	language:C++	signature:(Buffer *, u_int)
buffer_put_int64	sftp-server/bufaux.c	/^buffer_put_int64(Buffer *buffer, u_int64_t value)$/;"	f	language:C	signature:(Buffer *buffer, u_int64_t value)
buffer_put_int64	sftp-server/buffer.h	/^void	buffer_put_int64(Buffer *, u_int64_t);$/;"	p	language:C++	signature:(Buffer *, u_int64_t)
buffer_put_short	sftp-server/bufaux.c	/^buffer_put_short(Buffer *buffer, u_short value)$/;"	f	language:C	signature:(Buffer *buffer, u_short value)
buffer_put_short	sftp-server/buffer.h	/^void	buffer_put_short(Buffer *, u_short);$/;"	p	language:C++	signature:(Buffer *, u_short)
buffer_put_string	sftp-server/bufaux.c	/^buffer_put_string(Buffer *buffer, const void *buf, u_int len)$/;"	f	language:C	signature:(Buffer *buffer, const void *buf, u_int len)
buffer_put_string	sftp-server/buffer.h	/^void    buffer_put_string(Buffer *, const void *, u_int);$/;"	p	language:C++	signature:(Buffer *, const void *, u_int)
buffer_skip_string	sftp-server/buffer.h	73;"	d	language:C++
buflen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       buflen;       \/* length of data in buf *\/$/;"	m	language:C++	struct:__anon51	access:public
buflen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     buflen;                  \/* number of bytes in the buffer *\/$/;"	m	language:C++	struct:__anon48	access:public
buflen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                   buflen,$/;"	m	language:C++	struct:__anon47	access:public
buflen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 buflen,$/;"	m	language:C++	struct:__anon52	access:public
buflen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 buflen,$/;"	m	language:C++	struct:__anon53	access:public
buflen	libtomcrypt/src/headers/tomcrypt_mac.h	/^    int           buflen;$/;"	m	language:C++	struct:pelican_state	access:public
build_lut	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^static int build_lut(int idx, void *modulus, void *mp, void *mu)$/;"	f	language:C	file:	signature:(int idx, void *modulus, void *mp, void *mu)
burn_stack	libtomcrypt/src/headers/tomcrypt_misc.h	/^void burn_stack(unsigned long len);$/;"	p	language:C++	signature:(unsigned long len)
burn_stack	libtomcrypt/src/misc/burn_stack.c	/^void burn_stack(unsigned long len)$/;"	f	language:C	signature:(unsigned long len)
byte	libtomcrypt/src/headers/tomcrypt_macros.h	417;"	d	language:C++
byte	libtomcrypt/src/headers/tomcrypt_macros.h	419;"	d	language:C++
bytebit	libtomcrypt/src/ciphers/des.c	/^static const ulong32 bytebit[8] =$/;"	v	language:C	file:
bytes	keyimport.c	/^struct mpint_pos { void *start; int bytes; };$/;"	m	language:C	struct:mpint_pos	file:	access:public
bytes_per_second	progressmeter.c	/^static int bytes_per_second;	\/* current speed in bytes per second *\/$/;"	v	language:C	file:
bytes_read	sftp-server/sftp-server.c	/^	u_int64_t bytes_read, bytes_write;$/;"	m	language:C	struct:Handle	file:	access:public
bytes_to_mp	bignum.c	/^void bytes_to_mp(mp_int *mp, const unsigned char* bytes, unsigned int len) {$/;"	f	language:C	signature:(mp_int *mp, const unsigned char* bytes, unsigned int len)
bytes_to_mp	bignum.h	/^void bytes_to_mp(mp_int *mp, const unsigned char* bytes, unsigned int len);$/;"	p	language:C++	signature:(mp_int *mp, const unsigned char* bytes, unsigned int len)
bytes_write	sftp-server/sftp-server.c	/^	u_int64_t bytes_read, bytes_write;$/;"	m	language:C	struct:Handle	file:	access:public
c	libtomcrypt/src/ciphers/khazad.c	/^static const ulong64 c[R + 1] = {$/;"	v	language:C	file:
can_output	progressmeter.c	/^can_output(void)$/;"	f	language:C	file:	signature:(void)
can_output	progressmeter.c	/^static int can_output(void);$/;"	p	language:C	file:	signature:(void)
cast5	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct cast5_key    cast5;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::cast5_key	access:public
cast5_desc	libtomcrypt/src/ciphers/cast5.c	/^const struct ltc_cipher_descriptor cast5_desc = {$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
cast5_done	libtomcrypt/src/ciphers/cast5.c	/^void cast5_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
cast5_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void cast5_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
cast5_ecb_decrypt	libtomcrypt/src/ciphers/cast5.c	/^int cast5_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
cast5_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cast5_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
cast5_ecb_encrypt	libtomcrypt/src/ciphers/cast5.c	/^int cast5_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
cast5_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cast5_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
cast5_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct cast5_key {$/;"	s	language:C++
cast5_key::K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 K[32], keylen;$/;"	m	language:C++	struct:cast5_key	access:public
cast5_key::keylen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 K[32], keylen;$/;"	m	language:C++	struct:cast5_key	access:public
cast5_keysize	libtomcrypt/src/ciphers/cast5.c	/^int cast5_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
cast5_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cast5_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
cast5_setup	libtomcrypt/src/ciphers/cast5.c	/^int cast5_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
cast5_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cast5_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
cast5_test	libtomcrypt/src/ciphers/cast5.c	/^int cast5_test(void)$/;"	f	language:C	signature:(void)
cast5_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cast5_test(void);$/;"	p	language:C++	signature:(void)
cb	sftp-server/channels.h	/^	channel_confirm_cb *cb;$/;"	m	language:C++	struct:channel_confirm	access:public
cbc	session.h	/^		symmetric_CBC cbc;$/;"	m	language:C++	union:key_context_directional::__anon12	access:public
cbc_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cbc_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CBC *cbc);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CBC *cbc)
cbc_decrypt	libtomcrypt/src/modes/cbc/cbc_decrypt.c	/^int cbc_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CBC *cbc)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CBC *cbc)
cbc_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cbc_done(symmetric_CBC *cbc);$/;"	p	language:C++	signature:(symmetric_CBC *cbc)
cbc_done	libtomcrypt/src/modes/cbc/cbc_done.c	/^int cbc_done(symmetric_CBC *cbc)$/;"	f	language:C	signature:(symmetric_CBC *cbc)
cbc_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cbc_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CBC *cbc);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CBC *cbc)
cbc_encrypt	libtomcrypt/src/modes/cbc/cbc_encrypt.c	/^int cbc_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CBC *cbc)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CBC *cbc)
cbc_getiv	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cbc_getiv(unsigned char *IV, unsigned long *len, symmetric_CBC *cbc);$/;"	p	language:C++	signature:(unsigned char *IV, unsigned long *len, symmetric_CBC *cbc)
cbc_getiv	libtomcrypt/src/modes/cbc/cbc_getiv.c	/^int cbc_getiv(unsigned char *IV, unsigned long *len, symmetric_CBC *cbc)$/;"	f	language:C	signature:(unsigned char *IV, unsigned long *len, symmetric_CBC *cbc)
cbc_setiv	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cbc_setiv(const unsigned char *IV, unsigned long len, symmetric_CBC *cbc);$/;"	p	language:C++	signature:(const unsigned char *IV, unsigned long len, symmetric_CBC *cbc)
cbc_setiv	libtomcrypt/src/modes/cbc/cbc_setiv.c	/^int cbc_setiv(const unsigned char *IV, unsigned long len, symmetric_CBC *cbc)$/;"	f	language:C	signature:(const unsigned char *IV, unsigned long len, symmetric_CBC *cbc)
cbc_start	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cbc_start(int cipher, const unsigned char *IV, const unsigned char *key,$/;"	p	language:C++	signature:(int cipher, const unsigned char *IV, const unsigned char *key, int keylen, int num_rounds, symmetric_CBC *cbc)
cbc_start	libtomcrypt/src/modes/cbc/cbc_start.c	/^int cbc_start(int cipher, const unsigned char *IV, const unsigned char *key, $/;"	f	language:C	signature:(int cipher, const unsigned char *IV, const unsigned char *key, int keylen, int num_rounds, symmetric_CBC *cbc)
cbuf_free	circbuffer.c	/^void cbuf_free(circbuffer * cbuf) {$/;"	f	language:C	signature:(circbuffer * cbuf)
cbuf_free	circbuffer.h	/^void cbuf_free(circbuffer * cbuf);$/;"	p	language:C++	signature:(circbuffer * cbuf)
cbuf_getavail	circbuffer.c	/^unsigned int cbuf_getavail(circbuffer * cbuf) {$/;"	f	language:C	signature:(circbuffer * cbuf)
cbuf_getavail	circbuffer.h	/^unsigned int cbuf_getavail(circbuffer * cbuf); \/* how much we can write *\/$/;"	p	language:C++	signature:(circbuffer * cbuf)
cbuf_getused	circbuffer.c	/^unsigned int cbuf_getused(circbuffer * cbuf) {$/;"	f	language:C	signature:(circbuffer * cbuf)
cbuf_getused	circbuffer.h	/^unsigned int cbuf_getused(circbuffer * cbuf); \/* how much data stored *\/$/;"	p	language:C++	signature:(circbuffer * cbuf)
cbuf_incrread	circbuffer.c	/^void cbuf_incrread(circbuffer *cbuf, unsigned int len) {$/;"	f	language:C	signature:(circbuffer *cbuf, unsigned int len)
cbuf_incrread	circbuffer.h	/^void cbuf_incrread(circbuffer *cbuf, unsigned int len);$/;"	p	language:C++	signature:(circbuffer *cbuf, unsigned int len)
cbuf_incrwrite	circbuffer.c	/^void cbuf_incrwrite(circbuffer *cbuf, unsigned int len) {$/;"	f	language:C	signature:(circbuffer *cbuf, unsigned int len)
cbuf_incrwrite	circbuffer.h	/^void cbuf_incrwrite(circbuffer *cbuf, unsigned int len);$/;"	p	language:C++	signature:(circbuffer *cbuf, unsigned int len)
cbuf_new	circbuffer.c	/^circbuffer * cbuf_new(unsigned int size) {$/;"	f	language:C	signature:(unsigned int size)
cbuf_new	circbuffer.h	/^circbuffer * cbuf_new(unsigned int size);$/;"	p	language:C++	signature:(unsigned int size)
cbuf_readlen	circbuffer.c	/^unsigned int cbuf_readlen(circbuffer *cbuf) {$/;"	f	language:C	signature:(circbuffer *cbuf)
cbuf_readlen	circbuffer.h	/^unsigned int cbuf_readlen(circbuffer *cbuf); \/* max linear read len *\/$/;"	p	language:C++	signature:(circbuffer *cbuf)
cbuf_readptr	circbuffer.c	/^unsigned char* cbuf_readptr(circbuffer *cbuf, unsigned int len) {$/;"	f	language:C	signature:(circbuffer *cbuf, unsigned int len)
cbuf_readptr	circbuffer.h	/^unsigned char* cbuf_readptr(circbuffer *cbuf, unsigned int len);$/;"	p	language:C++	signature:(circbuffer *cbuf, unsigned int len)
cbuf_writelen	circbuffer.c	/^unsigned int cbuf_writelen(circbuffer *cbuf) {$/;"	f	language:C	signature:(circbuffer *cbuf)
cbuf_writelen	circbuffer.h	/^unsigned int cbuf_writelen(circbuffer *cbuf); \/* max linear write len *\/$/;"	p	language:C++	signature:(circbuffer *cbuf)
cbuf_writeptr	circbuffer.c	/^unsigned char* cbuf_writeptr(circbuffer *cbuf, unsigned int len) {$/;"	f	language:C	signature:(circbuffer *cbuf, unsigned int len)
cbuf_writeptr	circbuffer.h	/^unsigned char* cbuf_writeptr(circbuffer *cbuf, unsigned int len);$/;"	p	language:C++	signature:(circbuffer *cbuf, unsigned int len)
ccm_gen	libtomcrypt/demos/tv_gen.c	/^void ccm_gen(void)$/;"	f	language:C	signature:(void)
ccm_memory	libtomcrypt/src/encauth/ccm/ccm_memory.c	/^int ccm_memory(int cipher,$/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, symmetric_key *uskey, const unsigned char *nonce, unsigned long noncelen, const unsigned char *header, unsigned long headerlen, unsigned char *pt, unsigned long ptlen, unsigned char *ct, unsigned char *tag, unsigned long *taglen, int direction)
ccm_memory	libtomcrypt/src/headers/tomcrypt_mac.h	/^int ccm_memory(int cipher,$/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, symmetric_key *uskey, const unsigned char *nonce, unsigned long noncelen, const unsigned char *header, unsigned long headerlen, unsigned char *pt, unsigned long ptlen, unsigned char *ct, unsigned char *tag, unsigned long *taglen, int direction)
ccm_test	libtomcrypt/src/encauth/ccm/ccm_test.c	/^int ccm_test(void)$/;"	f	language:C	signature:(void)
ccm_test	libtomcrypt/src/headers/tomcrypt_mac.h	/^int ccm_test(void);$/;"	p	language:C++	signature:(void)
cfb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cfb_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CFB *cfb);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CFB *cfb)
cfb_decrypt	libtomcrypt/src/modes/cfb/cfb_decrypt.c	/^int cfb_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CFB *cfb)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CFB *cfb)
cfb_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cfb_done(symmetric_CFB *cfb);$/;"	p	language:C++	signature:(symmetric_CFB *cfb)
cfb_done	libtomcrypt/src/modes/cfb/cfb_done.c	/^int cfb_done(symmetric_CFB *cfb)$/;"	f	language:C	signature:(symmetric_CFB *cfb)
cfb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cfb_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CFB *cfb);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CFB *cfb)
cfb_encrypt	libtomcrypt/src/modes/cfb/cfb_encrypt.c	/^int cfb_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CFB *cfb)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CFB *cfb)
cfb_getiv	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cfb_getiv(unsigned char *IV, unsigned long *len, symmetric_CFB *cfb);$/;"	p	language:C++	signature:(unsigned char *IV, unsigned long *len, symmetric_CFB *cfb)
cfb_getiv	libtomcrypt/src/modes/cfb/cfb_getiv.c	/^int cfb_getiv(unsigned char *IV, unsigned long *len, symmetric_CFB *cfb)$/;"	f	language:C	signature:(unsigned char *IV, unsigned long *len, symmetric_CFB *cfb)
cfb_setiv	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cfb_setiv(const unsigned char *IV, unsigned long len, symmetric_CFB *cfb);$/;"	p	language:C++	signature:(const unsigned char *IV, unsigned long len, symmetric_CFB *cfb)
cfb_setiv	libtomcrypt/src/modes/cfb/cfb_setiv.c	/^int cfb_setiv(const unsigned char *IV, unsigned long len, symmetric_CFB *cfb)$/;"	f	language:C	signature:(const unsigned char *IV, unsigned long len, symmetric_CFB *cfb)
cfb_start	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cfb_start(int cipher, const unsigned char *IV, const unsigned char *key, $/;"	p	language:C++	signature:(int cipher, const unsigned char *IV, const unsigned char *key, int keylen, int num_rounds, symmetric_CFB *cfb)
cfb_start	libtomcrypt/src/modes/cfb/cfb_start.c	/^int cfb_start(int cipher, const unsigned char *IV, const unsigned char *key, $/;"	f	language:C	signature:(int cipher, const unsigned char *IV, const unsigned char *key, int keylen, int num_rounds, symmetric_CFB *cfb)
cfgetispeed	sftp-server/openbsd-compat/bsd-nextstep.h	/^speed_t cfgetispeed(const struct termios *);$/;"	p	language:C++	signature:(const struct termios *)
cfgetospeed	sftp-server/openbsd-compat/bsd-nextstep.h	/^speed_t cfgetospeed(const struct termios *);$/;"	p	language:C++	signature:(const struct termios *)
cfsetispeed	sftp-server/openbsd-compat/bsd-nextstep.h	/^int cfsetispeed(struct termios *, int);$/;"	p	language:C++	signature:(struct termios *, int)
cfsetospeed	sftp-server/openbsd-compat/bsd-nextstep.h	/^int cfsetospeed(struct termios *, int);$/;"	p	language:C++	signature:(struct termios *, int)
chan_ibuf_empty	sftp-server/channels.h	/^void	 chan_ibuf_empty(Channel *);$/;"	p	language:C++	signature:(Channel *)
chan_is_dead	sftp-server/channels.h	/^int	 chan_is_dead(Channel *, int);$/;"	p	language:C++	signature:(Channel *, int)
chan_mark_dead	sftp-server/channels.h	/^void	 chan_mark_dead(Channel *);$/;"	p	language:C++	signature:(Channel *)
chan_obuf_empty	sftp-server/channels.h	/^void	 chan_obuf_empty(Channel *);$/;"	p	language:C++	signature:(Channel *)
chan_rcvd_eow	sftp-server/channels.h	/^void	 chan_rcvd_eow(Channel *);	\/* SSH2-only *\/$/;"	p	language:C++	signature:(Channel *)
chan_rcvd_ieof	sftp-server/channels.h	/^void	 chan_rcvd_ieof(Channel *);$/;"	p	language:C++	signature:(Channel *)
chan_rcvd_oclose	sftp-server/channels.h	/^void	 chan_rcvd_oclose(Channel *);$/;"	p	language:C++	signature:(Channel *)
chan_read_failed	sftp-server/channels.h	/^void	 chan_read_failed(Channel *);$/;"	p	language:C++	signature:(Channel *)
chan_svr_agent	svr-agentfwd.c	/^static const struct ChanType chan_svr_agent = {$/;"	v	language:C	typeref:struct:ChanType	file:
chan_write_failed	sftp-server/channels.h	/^void	 chan_write_failed(Channel *);$/;"	p	language:C++	signature:(Channel *)
chan_x11	svr-x11fwd.c	/^static const struct ChanType chan_x11 = {$/;"	v	language:C	typeref:struct:ChanType	file:
chancleanup	channel.h	/^void chancleanup();$/;"	p	language:C++	signature:()
chancleanup	common-channel.c	/^void chancleanup() {$/;"	f	language:C
chancount	session.h	/^	unsigned int chancount; \/* the number of Channel*s in use *\/$/;"	m	language:C++	struct:sshsession	access:public
chaninitialise	channel.h	/^void chaninitialise(const struct ChanType *chantypes[]);$/;"	p	language:C++	signature:(const struct ChanType *chantypes[])
chaninitialise	common-channel.c	/^void chaninitialise(const struct ChanType *chantypes[]) {$/;"	f	language:C	signature:(const struct ChanType *chantypes[])
channel_add_adm_permitted_opens	sftp-server/channels.h	/^int	 channel_add_adm_permitted_opens(char *, int);$/;"	p	language:C++	signature:(char *, int)
channel_add_permitted_opens	sftp-server/channels.h	/^void	 channel_add_permitted_opens(char *, int);$/;"	p	language:C++	signature:(char *, int)
channel_after_select	sftp-server/channels.h	/^void     channel_after_select(fd_set *, fd_set *);$/;"	p	language:C++	signature:(fd_set *, fd_set *)
channel_by_id	sftp-server/channels.h	/^Channel	*channel_by_id(int);$/;"	p	language:C++	signature:(int)
channel_callback_fn	sftp-server/channels.h	/^typedef void channel_callback_fn(int, void *);$/;"	t	language:C++
channel_cancel_cleanup	sftp-server/channels.h	/^void	 channel_cancel_cleanup(int);$/;"	p	language:C++	signature:(int)
channel_cancel_rport_listener	sftp-server/channels.h	/^int	 channel_cancel_rport_listener(const char *, u_short);$/;"	p	language:C++	signature:(const char *, u_short)
channel_clear_adm_permitted_opens	sftp-server/channels.h	/^void	 channel_clear_adm_permitted_opens(void);$/;"	p	language:C++	signature:(void)
channel_clear_permitted_opens	sftp-server/channels.h	/^void	 channel_clear_permitted_opens(void);$/;"	p	language:C++	signature:(void)
channel_close_all	sftp-server/channels.h	/^void     channel_close_all(void);$/;"	p	language:C++	signature:(void)
channel_close_fd	sftp-server/channels.h	/^int	 channel_close_fd(int *);$/;"	p	language:C++	signature:(int *)
channel_confirm	sftp-server/channels.h	/^struct channel_confirm {$/;"	s	language:C++
channel_confirm::abandon_cb	sftp-server/channels.h	/^	channel_confirm_abandon_cb *abandon_cb;$/;"	m	language:C++	struct:channel_confirm	access:public
channel_confirm::cb	sftp-server/channels.h	/^	channel_confirm_cb *cb;$/;"	m	language:C++	struct:channel_confirm	access:public
channel_confirm::ctx	sftp-server/channels.h	/^	void *ctx;$/;"	m	language:C++	struct:channel_confirm	access:public
channel_confirm::entry	sftp-server/channels.h	/^	TAILQ_ENTRY(channel_confirm) entry;$/;"	m	language:C++	struct:channel_confirm	access:public
channel_confirm_abandon_cb	sftp-server/channels.h	/^typedef void channel_confirm_abandon_cb(struct Channel *, void *);$/;"	t	language:C++
channel_confirm_cb	sftp-server/channels.h	/^typedef void channel_confirm_cb(int, struct Channel *, void *);$/;"	t	language:C++
channel_connect	sftp-server/channels.h	/^struct channel_connect {$/;"	s	language:C++
channel_connect::ai	sftp-server/channels.h	/^	struct addrinfo *ai, *aitop;$/;"	m	language:C++	struct:channel_connect	typeref:struct:channel_connect::addrinfo	access:public
channel_connect::aitop	sftp-server/channels.h	/^	struct addrinfo *ai, *aitop;$/;"	m	language:C++	struct:channel_connect	typeref:struct:channel_connect::	access:public
channel_connect::host	sftp-server/channels.h	/^	char *host;$/;"	m	language:C++	struct:channel_connect	access:public
channel_connect::port	sftp-server/channels.h	/^	int port;$/;"	m	language:C++	struct:channel_connect	access:public
channel_connect_by_listen_address	sftp-server/channels.h	/^Channel	*channel_connect_by_listen_address(u_short, char *, char *);$/;"	p	language:C++	signature:(u_short, char *, char *)
channel_connect_stdio_fwd	sftp-server/channels.h	/^Channel	*channel_connect_stdio_fwd(const char*, u_short, int, int);$/;"	p	language:C++	signature:(const char*, u_short, int, int)
channel_connect_to	sftp-server/channels.h	/^Channel	*channel_connect_to(const char *, u_short, char *, char *);$/;"	p	language:C++	signature:(const char *, u_short, char *, char *)
channel_filter_cleanup_fn	sftp-server/channels.h	/^typedef void channel_filter_cleanup_fn(int, void *);$/;"	t	language:C++
channel_find_open	sftp-server/channels.h	/^int	 channel_find_open(void);$/;"	p	language:C++	signature:(void)
channel_free	sftp-server/channels.h	/^void	 channel_free(Channel *);$/;"	p	language:C++	signature:(Channel *)
channel_free_all	sftp-server/channels.h	/^void	 channel_free_all(void);$/;"	p	language:C++	signature:(void)
channel_infilter_fn	sftp-server/channels.h	/^typedef int channel_infilter_fn(struct Channel *, char *, int);$/;"	t	language:C++
channel_input_close	sftp-server/channels.h	/^void	 channel_input_close(int, u_int32_t, void *);$/;"	p	language:C++	signature:(int, u_int32_t, void *)
channel_input_close_confirmation	sftp-server/channels.h	/^void	 channel_input_close_confirmation(int, u_int32_t, void *);$/;"	p	language:C++	signature:(int, u_int32_t, void *)
channel_input_data	sftp-server/channels.h	/^void	 channel_input_data(int, u_int32_t, void *);$/;"	p	language:C++	signature:(int, u_int32_t, void *)
channel_input_extended_data	sftp-server/channels.h	/^void	 channel_input_extended_data(int, u_int32_t, void *);$/;"	p	language:C++	signature:(int, u_int32_t, void *)
channel_input_ieof	sftp-server/channels.h	/^void	 channel_input_ieof(int, u_int32_t, void *);$/;"	p	language:C++	signature:(int, u_int32_t, void *)
channel_input_oclose	sftp-server/channels.h	/^void	 channel_input_oclose(int, u_int32_t, void *);$/;"	p	language:C++	signature:(int, u_int32_t, void *)
channel_input_open_confirmation	sftp-server/channels.h	/^void	 channel_input_open_confirmation(int, u_int32_t, void *);$/;"	p	language:C++	signature:(int, u_int32_t, void *)
channel_input_open_failure	sftp-server/channels.h	/^void	 channel_input_open_failure(int, u_int32_t, void *);$/;"	p	language:C++	signature:(int, u_int32_t, void *)
channel_input_port_forward_request	sftp-server/channels.h	/^int      channel_input_port_forward_request(int, int);$/;"	p	language:C++	signature:(int, int)
channel_input_port_open	sftp-server/channels.h	/^void	 channel_input_port_open(int, u_int32_t, void *);$/;"	p	language:C++	signature:(int, u_int32_t, void *)
channel_input_status_confirm	sftp-server/channels.h	/^void	 channel_input_status_confirm(int, u_int32_t, void *);$/;"	p	language:C++	signature:(int, u_int32_t, void *)
channel_input_window_adjust	sftp-server/channels.h	/^void	 channel_input_window_adjust(int, u_int32_t, void *);$/;"	p	language:C++	signature:(int, u_int32_t, void *)
channel_lookup	sftp-server/channels.h	/^Channel	*channel_lookup(int);$/;"	p	language:C++	signature:(int)
channel_new	sftp-server/channels.h	/^Channel *channel_new(char *, int, int, int, int, u_int, u_int, int, char *, int);$/;"	p	language:C++	signature:(char *, int, int, int, int, u_int, u_int, int, char *, int)
channel_not_very_much_buffered_data	sftp-server/channels.h	/^int      channel_not_very_much_buffered_data(void);$/;"	p	language:C++	signature:(void)
channel_open_message	sftp-server/channels.h	/^char	*channel_open_message(void);$/;"	p	language:C++	signature:(void)
channel_outfilter_fn	sftp-server/channels.h	/^typedef u_char *channel_outfilter_fn(struct Channel *, u_char **, u_int *);$/;"	t	language:C++
channel_output_poll	sftp-server/channels.h	/^void     channel_output_poll(void);$/;"	p	language:C++	signature:(void)
channel_permit_all_opens	sftp-server/channels.h	/^void     channel_permit_all_opens(void);$/;"	p	language:C++	signature:(void)
channel_prepare_select	sftp-server/channels.h	/^void	 channel_prepare_select(fd_set **, fd_set **, int *, u_int*, int);$/;"	p	language:C++	signature:(fd_set **, fd_set **, int *, u_int*, int)
channel_print_adm_permitted_opens	sftp-server/channels.h	/^void 	 channel_print_adm_permitted_opens(void);$/;"	p	language:C++	signature:(void)
channel_register_cleanup	sftp-server/channels.h	/^void	 channel_register_cleanup(int, channel_callback_fn *, int);$/;"	p	language:C++	signature:(int, channel_callback_fn *, int)
channel_register_filter	sftp-server/channels.h	/^void	 channel_register_filter(int, channel_infilter_fn *,$/;"	p	language:C++	signature:(int, channel_infilter_fn *, channel_outfilter_fn *, channel_filter_cleanup_fn *, void *)
channel_register_open_confirm	sftp-server/channels.h	/^void	 channel_register_open_confirm(int, channel_callback_fn *, void *);$/;"	p	language:C++	signature:(int, channel_callback_fn *, void *)
channel_register_status_confirm	sftp-server/channels.h	/^void	 channel_register_status_confirm(int, channel_confirm_cb *,$/;"	p	language:C++	signature:(int, channel_confirm_cb *, channel_confirm_abandon_cb *, void *)
channel_request_remote_forwarding	sftp-server/channels.h	/^int	 channel_request_remote_forwarding(const char *, u_short,$/;"	p	language:C++	signature:(const char *, u_short, const char *, u_short)
channel_request_rforward_cancel	sftp-server/channels.h	/^void	 channel_request_rforward_cancel(const char *host, u_short port);$/;"	p	language:C++	signature:(const char *host, u_short port)
channel_request_start	sftp-server/channels.h	/^void	 channel_request_start(int, char *, int);$/;"	p	language:C++	signature:(int, char *, int)
channel_send_open	sftp-server/channels.h	/^void	 channel_send_open(int);$/;"	p	language:C++	signature:(int)
channel_send_window_changes	sftp-server/channels.h	/^void	 channel_send_window_changes(void);$/;"	p	language:C++	signature:(void)
channel_set_af	sftp-server/channels.h	/^void	 channel_set_af(int af);$/;"	p	language:C++	signature:(int af)
channel_set_fds	sftp-server/channels.h	/^void	 channel_set_fds(int, int, int, int, int, int, int, u_int);$/;"	p	language:C++	signature:(int, int, int, int, int, int, int, u_int)
channel_setup_local_fwd_listener	sftp-server/channels.h	/^int	 channel_setup_local_fwd_listener(const char *, u_short,$/;"	p	language:C++	signature:(const char *, u_short, const char *, u_short, int)
channel_setup_remote_fwd_listener	sftp-server/channels.h	/^int	 channel_setup_remote_fwd_listener(const char *, u_short, int *, int);$/;"	p	language:C++	signature:(const char *, u_short, int *, int)
channel_still_open	sftp-server/channels.h	/^int      channel_still_open(void);$/;"	p	language:C++	signature:(void)
channel_stop_listening	sftp-server/channels.h	/^void	 channel_stop_listening(void);$/;"	p	language:C++	signature:(void)
channelio	channel.h	/^void channelio(fd_set *readfd, fd_set *writefd);$/;"	p	language:C++	signature:(fd_set *readfd, fd_set *writefd)
channelio	common-channel.c	/^void channelio(fd_set *readfds, fd_set *writefds) {$/;"	f	language:C	signature:(fd_set *readfds, fd_set *writefds)
channels	session.h	/^	struct Channel ** channels; \/* these pointers may be null *\/$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::Channel	access:public
chansess	chansession.h	/^	struct ChanSess * chansess;$/;"	m	language:C++	struct:ChildPid	typeref:struct:ChildPid::ChanSess	access:public
chansess_login_alloc	svr-chansession.c	/^chansess_login_alloc(struct ChanSess *chansess) {$/;"	f	language:C	file:	signature:(struct ChanSess *chansess)
chansessionrequest	svr-chansession.c	/^static void chansessionrequest(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
chansessionrequest	svr-chansession.c	/^static void chansessionrequest(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
chansize	session.h	/^	unsigned int chansize; \/* the number of Channel*s allocated for channels *\/$/;"	m	language:C++	struct:sshsession	access:public
chantype	tcpfwd.h	/^	const struct ChanType *chantype;$/;"	m	language:C++	struct:TCPListener	typeref:struct:TCPListener::ChanType	access:public
chantypes	session.h	/^	const struct ChanType **chantypes; \/* The valid channel types *\/$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::ChanType	access:public
char_to_int	libtomcrypt/src/pk/asn1/der/utctime/der_decode_utctime.c	/^static int char_to_int(unsigned char x)$/;"	f	language:C	file:	signature:(unsigned char x)
chc	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct chc_state chc;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::chc_state	access:public
chc_compress	libtomcrypt/src/hashes/chc/chc.c	/^static int chc_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
chc_desc	libtomcrypt/src/hashes/chc/chc.c	/^const struct ltc_hash_descriptor chc_desc = {$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
chc_done	libtomcrypt/src/hashes/chc/chc.c	/^int chc_done(hash_state *md, unsigned char *out)$/;"	f	language:C	signature:(hash_state *md, unsigned char *out)
chc_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int chc_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
chc_init	libtomcrypt/src/hashes/chc/chc.c	/^int chc_init(hash_state *md)$/;"	f	language:C	signature:(hash_state *md)
chc_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int chc_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
chc_process	libtomcrypt/src/hashes/chc/chc.c	/^int chc_process(hash_state * md, const unsigned char *in, unsigned long inlen)$/;"	f	language:C	signature:(hash_state * md, const unsigned char *in, unsigned long inlen)
chc_process	libtomcrypt/src/headers/tomcrypt_hash.h	/^int chc_process(hash_state * md, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(hash_state * md, const unsigned char *in, unsigned long inlen)
chc_register	libtomcrypt/src/hashes/chc/chc.c	/^int chc_register(int cipher)$/;"	f	language:C	signature:(int cipher)
chc_register	libtomcrypt/src/headers/tomcrypt_hash.h	/^int chc_register(int cipher);$/;"	p	language:C++	signature:(int cipher)
chc_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^struct chc_state {$/;"	s	language:C++
chc_state::buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char state[MAXBLOCKSIZE], buf[MAXBLOCKSIZE];$/;"	m	language:C++	struct:chc_state	access:public
chc_state::curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen;$/;"	m	language:C++	struct:chc_state	access:public
chc_state::length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:chc_state	access:public
chc_state::state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char state[MAXBLOCKSIZE], buf[MAXBLOCKSIZE];$/;"	m	language:C++	struct:chc_state	access:public
chc_test	libtomcrypt/src/hashes/chc/chc.c	/^int chc_test(void)$/;"	f	language:C	signature:(void)
chc_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int chc_test(void);$/;"	p	language:C++	signature:(void)
check_close	channel.h	/^	int (*check_close)(struct Channel*);$/;"	m	language:C++	struct:ChanType	access:public
check_close	common-channel.c	/^static void check_close(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
check_close	common-channel.c	/^static void check_close(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
check_in_progress	common-channel.c	/^static void check_in_progress(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
check_in_progress	common-channel.c	/^static void check_in_progress(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
check_ntsec	sftp-server/openbsd-compat/bsd-cygwin_util.h	/^int check_ntsec(const char *);$/;"	p	language:C++	signature:(const char *)
checkfileperm	svr-authpubkey.c	/^static int checkfileperm(char * filename) {$/;"	f	language:C	file:	signature:(char * filename)
checkfileperm	svr-authpubkey.c	/^static int checkfileperm(char * filename);$/;"	p	language:C	file:	signature:(char * filename)
checkhostkey	cli-kex.c	/^static void checkhostkey(unsigned char* keyblob, unsigned int keybloblen) {$/;"	f	language:C	file:	signature:(unsigned char* keyblob, unsigned int keybloblen)
checkhostkey	cli-kex.c	/^static void checkhostkey(unsigned char* keyblob, unsigned int keybloblen);$/;"	p	language:C	file:	signature:(unsigned char* keyblob, unsigned int keybloblen)
checkmac	packet.c	/^static int checkmac() {$/;"	f	language:C	file:
checkmac	packet.c	/^static int checkmac();$/;"	p	language:C	file:
checkpubkey	svr-authpubkey.c	/^static int checkpubkey(unsigned char* algo, unsigned int algolen,$/;"	f	language:C	file:	signature:(unsigned char* algo, unsigned int algolen, unsigned char* keyblob, unsigned int keybloblen)
checkpubkey	svr-authpubkey.c	/^static int checkpubkey(unsigned char* algo, unsigned int algolen,$/;"	p	language:C	file:	signature:(unsigned char* algo, unsigned int algolen, unsigned char* keyblob, unsigned int keybloblen)
checkpubkeyperms	svr-authpubkey.c	/^static int checkpubkeyperms() {$/;"	f	language:C	file:
checkpubkeyperms	svr-authpubkey.c	/^static int checkpubkeyperms();$/;"	p	language:C	file:
checksum	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     checksum[MAXBLOCKSIZE];  \/* current checksum *\/$/;"	m	language:C++	struct:__anon48	access:public
checksum	libtomcrypt/src/headers/tomcrypt_mac.h	/^                     checksum[MAXBLOCKSIZE];  \/* current checksum *\/$/;"	m	language:C++	struct:__anon50	access:public
checktimeouts	common-session.c	/^static void checktimeouts() {$/;"	f	language:C	file:
checktimeouts	common-session.c	/^static void checktimeouts();$/;"	p	language:C	file:
checkusername	svr-auth.c	/^static int checkusername(unsigned char *username, unsigned int userlen) {$/;"	f	language:C	file:	signature:(unsigned char *username, unsigned int userlen)
checkusername	svr-auth.c	/^static int checkusername(unsigned char *username, unsigned int userlen);$/;"	p	language:C	file:	signature:(unsigned char *username, unsigned int userlen)
child	libtomcrypt/src/headers/tomcrypt_pk.h	/^   struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	language:C++	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::	access:public
childpids	session.h	/^	struct ChildPid * childpids; \/* array of mappings childpid<->channel *\/$/;"	m	language:C++	struct:serversession	typeref:struct:serversession::ChildPid	access:public
childpidsize	session.h	/^	unsigned int childpidsize;$/;"	m	language:C++	struct:serversession	access:public
childpipe	session.h	/^	int childpipe; \/* kept open until we successfully authenticate *\/$/;"	m	language:C++	struct:serversession	access:public
chksum	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char chksum[16], X[48], buf[16];$/;"	m	language:C++	struct:md2_state	access:public
chop	scpmisc.h	/^char	*chop(char *);$/;"	p	language:C++	signature:(char *)
chop	sftp-server/misc.c	/^chop(char *s)$/;"	f	language:C	signature:(char *s)
chop	sftp-server/misc.h	/^char	*chop(char *);$/;"	p	language:C++	signature:(char *)
cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    int               cipher;$/;"	m	language:C++	struct:__anon45	access:public
cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	language:C++	struct:__anon40	access:public
cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	language:C++	struct:__anon41	access:public
cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	language:C++	struct:__anon42	access:public
cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	language:C++	struct:__anon43	access:public
cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int                 cipher, $/;"	m	language:C++	struct:__anon46	access:public
cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int                 cipher,$/;"	m	language:C++	struct:__anon44	access:public
cipher	libtomcrypt/src/headers/tomcrypt_mac.h	/^             int cipher,$/;"	m	language:C++	struct:__anon52	access:public
cipher	libtomcrypt/src/headers/tomcrypt_mac.h	/^             int cipher,$/;"	m	language:C++	struct:__anon53	access:public
cipher	libtomcrypt/src/headers/tomcrypt_mac.h	/^   int                 cipher,       \/* which cipher *\/$/;"	m	language:C++	struct:__anon51	access:public
cipher	libtomcrypt/src/headers/tomcrypt_mac.h	/^   int               cipher,                  \/* cipher idx *\/$/;"	m	language:C++	struct:__anon50	access:public
cipher	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int                   cipher, hash;$/;"	m	language:C++	struct:yarrow_prng	access:public
cipher_blocksize	libtomcrypt/src/hashes/chc/chc.c	/^                      cipher_blocksize;               \/* blocksize of cipher *\/$/;"	v	language:C	file:
cipher_descriptor	libtomcrypt/src/misc/crypt/crypt_cipher_descriptor.c	/^struct ltc_cipher_descriptor cipher_descriptor[TAB_SIZE] = {$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
cipher_gen	libtomcrypt/demos/tv_gen.c	/^void cipher_gen(void)$/;"	f	language:C	signature:(void)
cipher_hash_test	libtomcrypt/testprof/cipher_hash_test.c	/^int cipher_hash_test(void)$/;"	f	language:C	signature:(void)
cipher_hash_test	libtomcrypt/testprof/tomcrypt_test.h	/^int cipher_hash_test(void);$/;"	p	language:C++	signature:(void)
cipher_idx	libtomcrypt/src/hashes/chc/chc.c	/^static int            cipher_idx=UNDEFED_HASH,        \/* which cipher *\/$/;"	v	language:C	file:
cipher_idx	libtomcrypt/src/headers/tomcrypt_mac.h	/^   int               cipher_idx,              \/* cipher idx *\/$/;"	m	language:C++	struct:__anon48	access:public
cipher_idx	libtomcrypt/src/headers/tomcrypt_mac.h	/^   int             cipher_idx, $/;"	m	language:C++	struct:__anon47	access:public
cipher_is_valid	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int cipher_is_valid(int idx);$/;"	p	language:C++	signature:(int idx)
cipher_is_valid	libtomcrypt/src/misc/crypt/crypt_cipher_is_valid.c	/^int cipher_is_valid(int idx)$/;"	f	language:C	signature:(int idx)
cipher_state	session.h	/^	} cipher_state;$/;"	m	language:C++	struct:key_context_directional	typeref:union:key_context_directional::__anon12	access:public
cipherdesc	algo.h	/^	const struct ltc_cipher_descriptor *cipherdesc;$/;"	m	language:C++	struct:dropbear_cipher	typeref:struct:dropbear_cipher::ltc_cipher_descriptor	access:public
cir	libtomcrypt/notes/etc/whirlgen.c	/^unsigned cir[8][8] = { $/;"	v	language:C
circbuf	circbuffer.h	/^struct circbuf {$/;"	s	language:C++
circbuf::data	circbuffer.h	/^	unsigned char* data;$/;"	m	language:C++	struct:circbuf	access:public
circbuf::readpos	circbuffer.h	/^	unsigned int readpos;$/;"	m	language:C++	struct:circbuf	access:public
circbuf::size	circbuffer.h	/^	unsigned int size;$/;"	m	language:C++	struct:circbuf	access:public
circbuf::used	circbuffer.h	/^	unsigned int used;$/;"	m	language:C++	struct:circbuf	access:public
circbuf::writepos	circbuffer.h	/^	unsigned int writepos;$/;"	m	language:C++	struct:circbuf	access:public
circbuffer	circbuffer.h	/^typedef struct circbuf circbuffer;$/;"	t	language:C++	typeref:struct:circbuf
cleanhostname	scpmisc.c	/^cleanhostname(char *host)$/;"	f	language:C	signature:(char *host)
cleanhostname	scpmisc.h	/^char	*cleanhostname(char *);$/;"	p	language:C++	signature:(char *)
cleanhostname	sftp-server/misc.c	/^cleanhostname(char *host)$/;"	f	language:C	signature:(char *host)
cleanhostname	sftp-server/misc.h	/^char	*cleanhostname(char *);$/;"	p	language:C++	signature:(char *)
cleantext	cli-session.c	/^void cleantext(unsigned char* dirtytext) {$/;"	f	language:C	signature:(unsigned char* dirtytext)
cleantext	session.h	/^void cleantext(unsigned char* dirtytext);$/;"	p	language:C++	signature:(unsigned char* dirtytext)
cleanup	listener.h	/^	void (*cleanup)(struct Listener*);$/;"	m	language:C++	struct:Listener	access:public
cleanup_exit	sftp-server/log.h	/^void	 cleanup_exit(int) __attribute__((noreturn));$/;"	p	language:C++	signature:(int)
cleanup_exit	sftp-server/sftp-server-main.c	/^cleanup_exit(int i)$/;"	f	language:C	signature:(int i)
cleanup_tcp	tcp-accept.c	/^static void cleanup_tcp(struct Listener *listener) {$/;"	f	language:C	file:	signature:(struct Listener *listener)
cli_auth_getmethods	auth.h	/^void cli_auth_getmethods();$/;"	p	language:C++	signature:()
cli_auth_getmethods	cli-auth.c	/^void cli_auth_getmethods() {$/;"	f	language:C
cli_auth_interactive	auth.h	/^void cli_auth_interactive();$/;"	p	language:C++	signature:()
cli_auth_interactive	cli-authinteract.c	/^void cli_auth_interactive() {$/;"	f	language:C
cli_auth_password	auth.h	/^void cli_auth_password();$/;"	p	language:C++	signature:()
cli_auth_password	cli-authpasswd.c	/^void cli_auth_password() {$/;"	f	language:C
cli_auth_pubkey	auth.h	/^int cli_auth_pubkey();$/;"	p	language:C++	signature:()
cli_auth_pubkey	cli-authpubkey.c	/^int cli_auth_pubkey() {$/;"	f	language:C
cli_auth_pubkey_cleanup	auth.h	/^void cli_auth_pubkey_cleanup();$/;"	p	language:C++	signature:()
cli_auth_pubkey_cleanup	cli-authpubkey.c	/^void cli_auth_pubkey_cleanup() {$/;"	f	language:C
cli_auth_try	auth.h	/^void cli_auth_try();$/;"	p	language:C++	signature:()
cli_auth_try	cli-auth.c	/^void cli_auth_try() {$/;"	f	language:C
cli_authinitialise	auth.h	/^void cli_authinitialise();$/;"	p	language:C++	signature:()
cli_authinitialise	cli-auth.c	/^void cli_authinitialise() {$/;"	f	language:C
cli_buf_match_algo	algo.h	/^algo_type * cli_buf_match_algo(buffer* buf, algo_type localalgos[],$/;"	p	language:C++	signature:(buffer* buf, algo_type localalgos[], int *goodguess)
cli_buf_match_algo	cli-algo.c	/^algo_type * cli_buf_match_algo(buffer* buf, algo_type localalgos[],$/;"	f	language:C	signature:(buffer* buf, algo_type localalgos[], int *goodguess)
cli_buf_put_sign	cli-authpubkey.c	/^void cli_buf_put_sign(buffer* buf, sign_key *key, int type, $/;"	f	language:C	signature:(buffer* buf, sign_key *key, int type, const unsigned char *data, unsigned int len)
cli_chan_agent	cli-agentfwd.c	/^const struct ChanType cli_chan_agent = {$/;"	v	language:C	typeref:struct:ChanType
cli_chan_netcat	cli-chansession.c	/^static const struct ChanType cli_chan_netcat = {$/;"	v	language:C	typeref:struct:ChanType	file:
cli_chan_tcplocal	cli-tcpfwd.c	/^static const struct ChanType cli_chan_tcplocal = {$/;"	v	language:C	typeref:struct:ChanType	file:
cli_chan_tcpremote	cli-tcpfwd.c	/^const struct ChanType cli_chan_tcpremote = {$/;"	v	language:C	typeref:struct:ChanType
cli_chansess_winchange	chansession.h	/^void cli_chansess_winchange();$/;"	p	language:C++	signature:()
cli_chansess_winchange	cli-chansession.c	/^void cli_chansess_winchange() {$/;"	f	language:C
cli_chansessreq	cli-chansession.c	/^static void cli_chansessreq(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
cli_chansessreq	cli-chansession.c	/^static void cli_chansessreq(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
cli_chantypes	cli-session.c	/^static const struct ChanType *cli_chantypes[] = {$/;"	v	language:C	typeref:struct:ChanType	file:
cli_closechansess	cli-chansession.c	/^static void cli_closechansess(struct Channel *UNUSED(channel)) {$/;"	f	language:C	file:	signature:(struct Channel *UNUSED(channel))
cli_closechansess	cli-chansession.c	/^static void cli_closechansess(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
cli_dropbear_exit	cli-main.c	/^static void cli_dropbear_exit(int exitcode, const char* format, va_list param) {$/;"	f	language:C	file:	signature:(int exitcode, const char* format, va_list param)
cli_dropbear_exit	cli-main.c	/^static void cli_dropbear_exit(int exitcode, const char* format, va_list param);$/;"	p	language:C	file:	signature:(int exitcode, const char* format, va_list param)
cli_dropbear_log	cli-main.c	/^static void cli_dropbear_log(int UNUSED(priority), $/;"	f	language:C	file:	signature:(int UNUSED(priority), const char* format, va_list param)
cli_dropbear_log	cli-main.c	/^static void cli_dropbear_log(int priority, const char* format, va_list param);$/;"	p	language:C	file:	signature:(int priority, const char* format, va_list param)
cli_finished	cli-session.c	/^static void cli_finished() {$/;"	f	language:C	file:
cli_finished	cli-session.c	/^static void cli_finished();$/;"	p	language:C	file:
cli_get_user	auth.h	/^void cli_get_user();$/;"	p	language:C++	signature:()
cli_getopts	cli-runopts.c	/^void cli_getopts(int argc, char ** argv) {$/;"	f	language:C	signature:(int argc, char ** argv)
cli_getopts	runopts.h	/^void cli_getopts(int argc, char ** argv);$/;"	p	language:C++	signature:(int argc, char ** argv)
cli_init_stdpipe_sess	cli-chansession.c	/^static int cli_init_stdpipe_sess(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
cli_initchansess	cli-chansession.c	/^static int cli_initchansess(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
cli_initchansess	cli-chansession.c	/^static int cli_initchansess(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
cli_kex_state	session.h	/^} cli_kex_state;$/;"	t	language:C++	typeref:enum:__anon13
cli_load_agent_keys	agentfwd.h	/^void cli_load_agent_keys(m_list * ret_list);$/;"	p	language:C++	signature:(m_list * ret_list)
cli_load_agent_keys	cli-agentfwd.c	/^void cli_load_agent_keys(m_list *ret_list) {$/;"	f	language:C	signature:(m_list *ret_list)
cli_localtcp	cli-tcpfwd.c	/^static int cli_localtcp(const char* listenaddr, $/;"	f	language:C	file:	signature:(const char* listenaddr, unsigned int listenport, const char* remoteaddr, unsigned int remoteport)
cli_localtcp	cli-tcpfwd.c	/^static int cli_localtcp(const char* listenaddr, $/;"	p	language:C	file:	signature:(const char* listenaddr, unsigned int listenport, const char* remoteaddr, unsigned int remoteport)
cli_main	cli-main.c	/^int cli_main(int argc, char ** argv) {$/;"	f	language:C	signature:(int argc, char ** argv)
cli_opts	cli-runopts.c	/^cli_runopts cli_opts; \/* GLOBAL *\/$/;"	v	language:C
cli_packettypes	cli-session.c	/^static const packettype cli_packettypes[] = {$/;"	v	language:C	file:
cli_proxy_cmd	cli-main.c	/^static void cli_proxy_cmd(int *sock_in, int *sock_out) {$/;"	f	language:C	file:	signature:(int *sock_in, int *sock_out)
cli_proxy_cmd	cli-main.c	/^static void cli_proxy_cmd(int *sock_in, int *sock_out);$/;"	p	language:C	file:	signature:(int *sock_in, int *sock_out)
cli_pubkeyfail	auth.h	/^void cli_pubkeyfail();$/;"	p	language:C++	signature:()
cli_pubkeyfail	cli-authpubkey.c	/^void cli_pubkeyfail() {$/;"	f	language:C
cli_recv_msg_request_failure	cli-tcpfwd.c	/^void cli_recv_msg_request_failure() {$/;"	f	language:C
cli_recv_msg_request_failure	tcpfwd.h	/^void cli_recv_msg_request_failure();$/;"	p	language:C++	signature:()
cli_recv_msg_request_success	cli-tcpfwd.c	/^void cli_recv_msg_request_success() {$/;"	f	language:C
cli_recv_msg_request_success	tcpfwd.h	/^void cli_recv_msg_request_success();$/;"	p	language:C++	signature:()
cli_remoteclosed	cli-session.c	/^static void cli_remoteclosed() {$/;"	f	language:C	file:
cli_remoteclosed	cli-session.c	/^static void cli_remoteclosed();$/;"	p	language:C	file:
cli_runopts	runopts.h	/^typedef struct cli_runopts {$/;"	s	language:C++
cli_runopts	runopts.h	/^} cli_runopts;$/;"	t	language:C++	typeref:struct:cli_runopts
cli_runopts::agent_fd	runopts.h	/^	int agent_fd; \/* The agent fd is only set during authentication. Forwarded$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::agent_fwd	runopts.h	/^	int agent_fwd;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::agent_keys_loaded	runopts.h	/^	int agent_keys_loaded; \/* whether pubkeys has been populated with a $/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::always_accept_key	runopts.h	/^	int always_accept_key;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::backgrounded	runopts.h	/^	int backgrounded;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::cmd	runopts.h	/^	char *cmd;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::is_subsystem	runopts.h	/^	int is_subsystem;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::localfwds	runopts.h	/^	m_list * localfwds;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::netcat_host	runopts.h	/^	char *netcat_host;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::netcat_port	runopts.h	/^	unsigned int netcat_port;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::no_cmd	runopts.h	/^	int no_cmd;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::own_user	runopts.h	/^	char *own_user;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::privkeys	runopts.h	/^	m_list *privkeys; \/* Keys to use for public-key auth *\/$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::progname	runopts.h	/^	char *progname;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::proxycmd	runopts.h	/^	char *proxycmd;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::remotefwds	runopts.h	/^	m_list * remotefwds;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::remotehost	runopts.h	/^	char *remotehost;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::remoteport	runopts.h	/^	char *remoteport;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::username	runopts.h	/^	char *username;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_runopts::wantpty	runopts.h	/^	int wantpty;$/;"	m	language:C++	struct:cli_runopts	access:public
cli_send_chansess_request	chansession.h	/^void cli_send_chansess_request();$/;"	p	language:C++	signature:()
cli_send_chansess_request	cli-chansession.c	/^void cli_send_chansess_request() {$/;"	f	language:C
cli_send_netcat_request	chansession.h	/^void cli_send_netcat_request();$/;"	p	language:C++	signature:()
cli_send_netcat_request	cli-chansession.c	/^void cli_send_netcat_request() {$/;"	f	language:C
cli_ses	cli-session.c	/^struct clientsession cli_ses; \/* GLOBAL *\/$/;"	v	language:C	typeref:struct:clientsession
cli_session	cli-session.c	/^void cli_session(int sock_in, int sock_out) {$/;"	f	language:C	signature:(int sock_in, int sock_out)
cli_session	session.h	/^void cli_session(int sock_in, int sock_out);$/;"	p	language:C++	signature:(int sock_in, int sock_out)
cli_session_cleanup	cli-session.c	/^void cli_session_cleanup() {$/;"	f	language:C
cli_session_cleanup	session.h	/^void cli_session_cleanup();$/;"	p	language:C++	signature:()
cli_session_init	cli-session.c	/^static void cli_session_init() {$/;"	f	language:C	file:
cli_session_init	cli-session.c	/^static void cli_session_init();$/;"	p	language:C	file:
cli_sessionloop	cli-session.c	/^static void cli_sessionloop() {$/;"	f	language:C	file:
cli_sessionloop	cli-session.c	/^static void cli_sessionloop();$/;"	p	language:C	file:
cli_setup_agent	agentfwd.h	/^void cli_setup_agent(struct Channel *channel);$/;"	p	language:C++	signature:(struct Channel *channel)
cli_setup_agent	cli-agentfwd.c	/^void cli_setup_agent(struct Channel *channel) {$/;"	f	language:C	signature:(struct Channel *channel)
cli_start_send_channel_request	chansession.h	/^void cli_start_send_channel_request(struct Channel *channel, unsigned char *type);$/;"	p	language:C++	signature:(struct Channel *channel, unsigned char *type)
cli_start_send_channel_request	cli-chansession.c	/^void cli_start_send_channel_request(struct Channel *channel, $/;"	f	language:C	signature:(struct Channel *channel, unsigned char *type)
cli_state	session.h	/^} cli_state;$/;"	t	language:C++	typeref:enum:__anon14
cli_tty_cleanup	chansession.h	/^void cli_tty_cleanup();$/;"	p	language:C++	signature:()
cli_tty_cleanup	cli-chansession.c	/^void cli_tty_cleanup() {$/;"	f	language:C
cli_tty_setup	cli-chansession.c	/^static void cli_tty_setup() {$/;"	f	language:C	file:
cli_tty_setup	cli-chansession.c	/^static void cli_tty_setup();$/;"	p	language:C	file:
clichansess	cli-chansession.c	/^const struct ChanType clichansess = {$/;"	v	language:C	typeref:struct:ChanType
client_addr	sftp-server/sftp-server.c	/^char *client_addr = NULL;$/;"	v	language:C
client_tty	sftp-server/channels.h	/^	int	client_tty;	\/* (client) TTY has been requested *\/$/;"	m	language:C++	struct:Channel	access:public
clientsession	session.h	/^struct clientsession {$/;"	s	language:C++
clientsession::auth_interact_failed	session.h	/^	int auth_interact_failed; \/* flag whether interactive auth can still$/;"	m	language:C++	struct:clientsession	access:public
clientsession::dh_e	session.h	/^	mp_int *dh_e, *dh_x; \/* Used during KEX *\/$/;"	m	language:C++	struct:clientsession	access:public
clientsession::dh_x	session.h	/^	mp_int *dh_e, *dh_x; \/* Used during KEX *\/$/;"	m	language:C++	struct:clientsession	access:public
clientsession::donefirstkex	session.h	/^	unsigned donefirstkex : 1; \/* Set when we set sentnewkeys, never reset *\/$/;"	m	language:C++	struct:clientsession	access:public
clientsession::interact_request_received	session.h	/^	int interact_request_received; \/* flag whether we've received an $/;"	m	language:C++	struct:clientsession	access:public
clientsession::kex_state	session.h	/^	cli_kex_state kex_state; \/* Used for progressing KEX *\/$/;"	m	language:C++	struct:clientsession	access:public
clientsession::lastauthtype	session.h	/^	int lastauthtype; \/* either AUTH_TYPE_PUBKEY or AUTH_TYPE_PASSWORD,$/;"	m	language:C++	struct:clientsession	access:public
clientsession::lastprivkey	session.h	/^	sign_key *lastprivkey;$/;"	m	language:C++	struct:clientsession	access:public
clientsession::retval	session.h	/^	int retval; \/* What the command exit status was - we emulate it *\/$/;"	m	language:C++	struct:clientsession	access:public
clientsession::saved_tio	session.h	/^	struct termios saved_tio;$/;"	m	language:C++	struct:clientsession	typeref:struct:clientsession::termios	access:public
clientsession::state	session.h	/^	cli_state state; \/* Used to progress auth\/channelsession etc *\/$/;"	m	language:C++	struct:clientsession	access:public
clientsession::stderrcopy	session.h	/^	int stderrcopy;$/;"	m	language:C++	struct:clientsession	access:public
clientsession::stderrflags	session.h	/^	int stderrflags;$/;"	m	language:C++	struct:clientsession	access:public
clientsession::stdincopy	session.h	/^	int stdincopy;$/;"	m	language:C++	struct:clientsession	access:public
clientsession::stdinflags	session.h	/^	int stdinflags;$/;"	m	language:C++	struct:clientsession	access:public
clientsession::stdoutcopy	session.h	/^	int stdoutcopy;$/;"	m	language:C++	struct:clientsession	access:public
clientsession::stdoutflags	session.h	/^	int stdoutflags;$/;"	m	language:C++	struct:clientsession	access:public
clientsession::tty_raw_mode	session.h	/^	int tty_raw_mode; \/* Whether we're in raw mode (and have to clean up) *\/$/;"	m	language:C++	struct:clientsession	access:public
clientsession::winchange	session.h	/^	int winchange; \/* Set to 1 when a windowchange signal happens *\/$/;"	m	language:C++	struct:clientsession	access:public
clock_t	sftp-server/defines.h	/^typedef long clock_t;$/;"	t	language:C++
close_chan_fd	common-channel.c	/^static void close_chan_fd(struct Channel *channel, int fd, int how) {$/;"	f	language:C	file:	signature:(struct Channel *channel, int fd, int how)
close_chan_fd	common-channel.c	/^static void close_chan_fd(struct Channel *channel, int fd, int how);$/;"	p	language:C	file:	signature:(struct Channel *channel, int fd, int how)
closechansess	svr-chansession.c	/^static void closechansess(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
closechansess	svr-chansession.c	/^static void closechansess(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
closefrom	sftp-server/openbsd-compat/openbsd-compat.h	/^void closefrom(int);$/;"	p	language:C++	signature:(int)
closehandler	channel.h	/^	void (*closehandler)(struct Channel*);$/;"	m	language:C++	struct:ChanType	access:public
cmd	chansession.h	/^	unsigned char * cmd; \/* command to exec *\/$/;"	m	language:C++	struct:ChanSess	access:public
cmd	libtommath/demo/demo.c	/^char cmd[4096], buf[4096];$/;"	v	language:C
cmd	runopts.h	/^	char *cmd;$/;"	m	language:C++	struct:cli_runopts	access:public
cmd	scp.c	/^char cmd[CMDNEEDS];		\/* must hold "rcp -r -p -d\\0" *\/$/;"	v	language:C
cmp_base64_key	signkey.c	/^int cmp_base64_key(const unsigned char* keyblob, unsigned int keybloblen, $/;"	f	language:C	signature:(const unsigned char* keyblob, unsigned int keybloblen, const unsigned char* algoname, unsigned int algolen, buffer * line, char ** fingerprint)
cmp_base64_key	signkey.h	/^int cmp_base64_key(const unsigned char* keyblob, unsigned int keybloblen, $/;"	p	language:C++	signature:(const unsigned char* keyblob, unsigned int keybloblen, const unsigned char* algoname, unsigned int algolen, buffer * line, char ** fingerprint)
cnt	scp.c	/^	size_t cnt;$/;"	m	language:C	struct:__anon17	file:	access:public
code	libtomcrypt/src/pk/asn1/der/ia5/der_length_ia5_string.c	/^   int code, value;$/;"	m	language:C	struct:__anon24	file:	access:public
code	libtomcrypt/src/pk/asn1/der/printable_string/der_length_printable_string.c	/^   int code, value;$/;"	m	language:C	struct:__anon25	file:	access:public
code	libtommath/bn_error.c	/^     int code;$/;"	m	language:C	struct:__anon19	file:	access:public
code	libtommath/pre_gen/mpi.c	/^     int code;$/;"	m	language:C	struct:__anon21	file:	access:public
codes	libtomcrypt/src/misc/base64/base64_encode.c	/^static const char *codes = $/;"	v	language:C	file:
colon	scpmisc.c	/^colon(char *cp)$/;"	f	language:C	signature:(char *cp)
colon	scpmisc.h	/^char	*colon(char *);$/;"	p	language:C++	signature:(char *)
colon	sftp-server/misc.c	/^colon(char *cp)$/;"	f	language:C	signature:(char *cp)
colon	sftp-server/misc.h	/^char	*colon(char *);$/;"	p	language:C++	signature:(char *)
common_recv_msg_channel_data	channel.h	/^void common_recv_msg_channel_data(struct Channel *channel, int fd, $/;"	p	language:C++	signature:(struct Channel *channel, int fd, circbuffer * buf)
common_recv_msg_channel_data	common-channel.c	/^void common_recv_msg_channel_data(struct Channel *channel, int fd, $/;"	f	language:C	signature:(struct Channel *channel, int fd, circbuffer * cbuf)
common_session_cleanup	common-session.c	/^void common_session_cleanup() {$/;"	f	language:C
common_session_cleanup	session.h	/^void common_session_cleanup();$/;"	p	language:C++	signature:()
common_session_init	common-session.c	/^void common_session_init(int sock_in, int sock_out) {$/;"	f	language:C	signature:(int sock_in, int sock_out)
common_session_init	session.h	/^void common_session_init(int sock_in, int sock_out);$/;"	p	language:C++	signature:(int sock_in, int sock_out)
commonsetup	svr-main.c	/^static void commonsetup() {$/;"	f	language:C	file:
commonsetup	svr-main.c	/^static void commonsetup();$/;"	p	language:C	file:
compare	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*compare)(void *a, void *b);$/;"	m	language:C++	struct:__anon54	access:public
compare	libtomcrypt/src/math/gmp_desc.c	/^static int compare(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
compare	libtomcrypt/src/math/ltm_desc.c	/^static int compare(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
compare	libtomcrypt/src/math/tfm_desc.c	/^static int compare(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
compare_d	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*compare_d)(void *a, unsigned long n);$/;"	m	language:C++	struct:__anon54	access:public
compare_d	libtomcrypt/src/math/gmp_desc.c	/^static int compare_d(void *a, unsigned long b)$/;"	f	language:C	file:	signature:(void *a, unsigned long b)
compare_d	libtomcrypt/src/math/ltm_desc.c	/^static int compare_d(void *a, unsigned long b)$/;"	f	language:C	file:	signature:(void *a, unsigned long b)
compare_d	libtomcrypt/src/math/tfm_desc.c	/^static int compare_d(void *a, unsigned long b)$/;"	f	language:C	file:	signature:(void *a, unsigned long b)
compat13	sftp-server/compat.c	/^int compat13 = 0;$/;"	v	language:C
compat20	sftp-server/compat.c	/^int compat20 = 0;$/;"	v	language:C
compat_cipher_proposal	sftp-server/compat.c	/^compat_cipher_proposal(char *cipher_prop)$/;"	f	language:C	signature:(char *cipher_prop)
compat_cipher_proposal	sftp-server/compat.h	/^char	*compat_cipher_proposal(char *);$/;"	p	language:C++	signature:(char *)
compat_datafellows	sftp-server/compat.c	/^compat_datafellows(const char *version)$/;"	f	language:C	signature:(const char *version)
compat_datafellows	sftp-server/compat.h	/^void     compat_datafellows(const char *);$/;"	p	language:C++	signature:(const char *)
compat_init_setproctitle	sftp-server/openbsd-compat/openbsd-compat.h	/^void compat_init_setproctitle(int argc, char *argv[]);$/;"	p	language:C++	signature:(int argc, char *argv[])
compress_algos	session.h	/^	algo_type *compress_algos;$/;"	m	language:C++	struct:sshsession	access:public
connect_agent	cli-agentfwd.c	/^static int connect_agent() {$/;"	f	language:C	file:
connect_ctx	sftp-server/channels.h	/^	struct channel_connect	connect_ctx;$/;"	m	language:C++	struct:Channel	typeref:struct:Channel::channel_connect	access:public
connect_remote	dbutil.c	/^int connect_remote(const char* remotehost, const char* remoteport,$/;"	f	language:C	signature:(const char* remotehost, const char* remoteport, int nonblocking, char ** errstring)
connect_remote	dbutil.h	/^int connect_remote(const char* remotehost, const char* remoteport,$/;"	p	language:C++	signature:(const char* remotehost, const char* remoteport, int nonblocking, char ** errstring)
connect_time	session.h	/^	time_t connect_time; \/* time the connection was established$/;"	m	language:C++	struct:sshsession	access:public
connect_unix	dbutil.c	/^int connect_unix(const char* path) {$/;"	f	language:C	signature:(const char* path)
connect_unix	dbutil.h	/^int connect_unix(const char* addr);$/;"	p	language:C++	signature:(const char* addr)
connectaddr	tcpfwd.h	/^	const unsigned char* connectaddr;$/;"	m	language:C++	struct:TCPFwdEntry	access:public
connection_string	chansession.h	/^	char *connection_string;$/;"	m	language:C++	struct:ChanSess	access:public
connectport	tcpfwd.h	/^	unsigned int connectport;$/;"	m	language:C++	struct:TCPFwdEntry	access:public
construct_utmp	loginrec.c	/^construct_utmp(struct logininfo *li,$/;"	f	language:C	signature:(struct logininfo *li, struct utmp *ut)
construct_utmp	loginrec.c	/^void construct_utmp(struct logininfo *li, struct utmp *ut);$/;"	p	language:C	file:	signature:(struct logininfo *li, struct utmp *ut)
construct_utmpx	loginrec.c	/^construct_utmpx(struct logininfo *li, struct utmpx *utx)$/;"	f	language:C	signature:(struct logininfo *li, struct utmpx *utx)
construct_utmpx	loginrec.c	/^void construct_utmpx(struct logininfo *li, struct utmpx *ut);$/;"	p	language:C	file:	signature:(struct logininfo *li, struct utmpx *ut)
cont	libtomcrypt/src/hashes/whirl/whirltab.c	/^static const ulong64 cont[] = {$/;"	v	language:C	file:
convtime	scpmisc.h	/^long	 convtime(const char *);$/;"	p	language:C++	signature:(const char *)
convtime	sftp-server/misc.c	/^convtime(const char *s)$/;"	f	language:C	signature:(const char *s)
convtime	sftp-server/misc.h	/^long	 convtime(const char *);$/;"	p	language:C++	signature:(const char *)
cookey	libtomcrypt/src/ciphers/des.c	/^static void cookey(const ulong32 *raw1, ulong32 *keyout)$/;"	f	language:C	file:	signature:(const ulong32 *raw1, ulong32 *keyout)
cookey	libtomcrypt/src/ciphers/des.c	/^static void cookey(const ulong32 *raw1, ulong32 *keyout);$/;"	p	language:C	file:	signature:(const ulong32 *raw1, ulong32 *keyout)
copy	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*copy)(void *src, void *dst);$/;"	m	language:C++	struct:__anon54	access:public
copy	libtomcrypt/src/math/gmp_desc.c	/^static int copy(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
copy	libtomcrypt/src/math/ltm_desc.c	/^static int copy(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
copy	libtomcrypt/src/math/tfm_desc.c	/^static int copy(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
count	queue.h	/^	unsigned int count; \/* safety value *\/$/;"	m	language:C++	struct:Queue	access:public
count_bits	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*count_bits)(void * a);$/;"	m	language:C++	struct:__anon54	access:public
count_bits	libtomcrypt/src/math/gmp_desc.c	/^static int count_bits(void *a)$/;"	f	language:C	file:	signature:(void *a)
count_bits	libtomcrypt/src/math/ltm_desc.c	/^static int count_bits(void *a)$/;"	f	language:C	file:	signature:(void *a)
count_bits	libtomcrypt/src/math/tfm_desc.c	/^static int count_bits(void *a)$/;"	f	language:C	file:	signature:(void *a)
count_lsb_bits	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*count_lsb_bits)(void *a);$/;"	m	language:C++	struct:__anon54	access:public
count_lsb_bits	libtomcrypt/src/math/gmp_desc.c	/^static int count_lsb_bits(void *a)$/;"	f	language:C	file:	signature:(void *a)
count_lsb_bits	libtomcrypt/src/math/ltm_desc.c	/^static int count_lsb_bits(void *a)$/;"	f	language:C	file:	signature:(void *a)
count_lsb_bits	libtomcrypt/src/math/tfm_desc.c	/^static int count_lsb_bits(void *a)$/;"	f	language:C	file:	signature:(void *a)
counter	progressmeter.c	/^static volatile off_t *counter;	\/* progress counter *\/$/;"	v	language:C	file:
counter	random.c	/^static uint32_t counter = 0;$/;"	v	language:C	file:
cray_access_denied	sftp-server/openbsd-compat/bsd-cray.h	/^int cray_access_denied(char *);$/;"	p	language:C++	signature:(char *)
cray_init_job	sftp-server/openbsd-compat/bsd-cray.h	/^void cray_init_job(struct passwd *);$/;"	p	language:C++	signature:(struct passwd *)
cray_job_termination_handler	sftp-server/openbsd-compat/bsd-cray.h	/^void cray_job_termination_handler(int);$/;"	p	language:C++	signature:(int)
cray_login_failure	sftp-server/openbsd-compat/bsd-cray.h	/^void cray_login_failure(char *, int );$/;"	p	language:C++	signature:(char *, int )
crypt	sftp-server/defines.h	/^  char *crypt (const char *, const char *);$/;"	p	language:C++	signature:(const char *, const char *)
crypt	svr-runopts.c	333;"	d	language:C	file:
crypt_argchk	libtomcrypt/src/headers/tomcrypt_argchk.h	/^void crypt_argchk(char *v, char *s, int d);$/;"	p	language:C++	signature:(char *v, char *s, int d)
crypt_argchk	libtomcrypt/src/misc/crypt/crypt_argchk.c	/^void crypt_argchk(char *v, char *s, int d)$/;"	f	language:C	signature:(char *v, char *s, int d)
crypt_fsa	libtomcrypt/src/headers/tomcrypt_misc.h	/^int crypt_fsa(void *mp, ...);$/;"	p	language:C++	signature:(void *mp, ...)
crypt_fsa	libtomcrypt/src/misc/crypt/crypt_fsa.c	/^int crypt_fsa(void *mp, ...)$/;"	f	language:C	signature:(void *mp, ...)
crypt_mode	session.h	/^	const struct dropbear_cipher_mode *crypt_mode;$/;"	m	language:C++	struct:key_context_directional	typeref:struct:key_context_directional::dropbear_cipher_mode	access:public
crypto_init	algo.h	/^void crypto_init();$/;"	p	language:C++	signature:()
crypto_init	common-algo.c	/^void crypto_init() {$/;"	f	language:C
ctl_chan	sftp-server/channels.h	/^	int     ctl_chan;	\/* control channel (multiplexed connections) *\/$/;"	m	language:C++	struct:Channel	access:public
ctomac	libtomcrypt/src/headers/tomcrypt_mac.h	/^   omac_state    headeromac, ctomac;$/;"	m	language:C++	struct:__anon49	access:public
ctr	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned char       ctr[MAXBLOCKSIZE], $/;"	m	language:C++	struct:__anon44	access:public
ctr	libtomcrypt/src/headers/tomcrypt_mac.h	/^   symmetric_CTR ctr;$/;"	m	language:C++	struct:__anon49	access:public
ctr	libtomcrypt/src/headers/tomcrypt_prng.h	/^    symmetric_CTR         ctr;$/;"	m	language:C++	struct:yarrow_prng	access:public
ctr	session.h	/^		symmetric_CTR ctr;$/;"	m	language:C++	union:key_context_directional::__anon12	access:public
ctr_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ctr_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CTR *ctr);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CTR *ctr)
ctr_decrypt	libtomcrypt/src/modes/ctr/ctr_decrypt.c	/^int ctr_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CTR *ctr)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_CTR *ctr)
ctr_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ctr_done(symmetric_CTR *ctr);$/;"	p	language:C++	signature:(symmetric_CTR *ctr)
ctr_done	libtomcrypt/src/modes/ctr/ctr_done.c	/^int ctr_done(symmetric_CTR *ctr)$/;"	f	language:C	signature:(symmetric_CTR *ctr)
ctr_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ctr_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CTR *ctr);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CTR *ctr)
ctr_encrypt	libtomcrypt/src/modes/ctr/ctr_encrypt.c	/^int ctr_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CTR *ctr)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_CTR *ctr)
ctr_getiv	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ctr_getiv(unsigned char *IV, unsigned long *len, symmetric_CTR *ctr);$/;"	p	language:C++	signature:(unsigned char *IV, unsigned long *len, symmetric_CTR *ctr)
ctr_getiv	libtomcrypt/src/modes/ctr/ctr_getiv.c	/^int ctr_getiv(unsigned char *IV, unsigned long *len, symmetric_CTR *ctr)$/;"	f	language:C	signature:(unsigned char *IV, unsigned long *len, symmetric_CTR *ctr)
ctr_setiv	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ctr_setiv(const unsigned char *IV, unsigned long len, symmetric_CTR *ctr);$/;"	p	language:C++	signature:(const unsigned char *IV, unsigned long len, symmetric_CTR *ctr)
ctr_setiv	libtomcrypt/src/modes/ctr/ctr_setiv.c	/^int ctr_setiv(const unsigned char *IV, unsigned long len, symmetric_CTR *ctr)$/;"	f	language:C	signature:(const unsigned char *IV, unsigned long len, symmetric_CTR *ctr)
ctr_start	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ctr_start(               int   cipher,$/;"	p	language:C++	signature:( int cipher, const unsigned char *IV, const unsigned char *key, int keylen, int num_rounds, int ctr_mode, symmetric_CTR *ctr)
ctr_start	libtomcrypt/src/modes/ctr/ctr_start.c	/^int ctr_start(               int   cipher, $/;"	f	language:C	signature:( int cipher, const unsigned char *IV, const unsigned char *key, int keylen, int num_rounds, int ctr_mode, symmetric_CTR *ctr)
ctr_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ctr_test(void);$/;"	p	language:C++	signature:(void)
ctr_test	libtomcrypt/src/modes/ctr/ctr_test.c	/^int ctr_test(void)$/;"	f	language:C	signature:(void)
ctx	sftp-server/channels.h	/^	void *ctx;$/;"	m	language:C++	struct:channel_confirm	access:public
ctype	sftp-server/channels.h	/^	char   *ctype;		\/* type *\/$/;"	m	language:C++	struct:Channel	access:public
cur_pos	progressmeter.c	/^static off_t cur_pos;		\/* transfer position as of last refresh *\/$/;"	v	language:C	file:
curfile	scp.c	/^char *curfile;$/;"	v	language:C
curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[10];$/;"	m	language:C++	struct:rmd320_state	access:public
curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[4];$/;"	m	language:C++	struct:rmd128_state	access:public
curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[5];$/;"	m	language:C++	struct:rmd160_state	access:public
curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[8];$/;"	m	language:C++	struct:rmd256_state	access:public
curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen;$/;"	m	language:C++	struct:chc_state	access:public
curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen;$/;"	m	language:C++	struct:whirlpool_state	access:public
curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[4], curlen;$/;"	m	language:C++	struct:md4_state	access:public
curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[4], curlen;$/;"	m	language:C++	struct:md5_state	access:public
curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[5], curlen;$/;"	m	language:C++	struct:sha1_state	access:public
curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[8], curlen;$/;"	m	language:C++	struct:sha256_state	access:public
curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned long curlen;$/;"	m	language:C++	struct:md2_state	access:public
curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned long curlen;$/;"	m	language:C++	struct:sha512_state	access:public
curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned long curlen;$/;"	m	language:C++	struct:tiger_state	access:public
curshell	compat.c	/^static char **curshell, **shells, *strings;$/;"	v	language:C	file:
cycle	libtomcrypt/src/prngs/sober128.c	/^static void cycle(ulong32 *R)$/;"	f	language:C	file:	signature:(ulong32 *R)
d	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *d; $/;"	m	language:C++	struct:KAT_key	access:public
d	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *d; $/;"	m	language:C++	struct:Rsa_key	access:public
d	rsa.h	/^	mp_int* d;$/;"	m	language:C++	struct:__anon1	access:public
dK	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 K[32], dK[32];$/;"	m	language:C++	struct:kseed_key	access:public
dK	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 K[4], dK[4];$/;"	m	language:C++	struct:noekeon_key	access:public
dK	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 eK[60], dK[60];$/;"	m	language:C++	struct:rijndael_key	access:public
dP	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *dP; $/;"	m	language:C++	struct:KAT_key	access:public
dP	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *dP; $/;"	m	language:C++	struct:Rsa_key	access:public
dQ	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *dQ;$/;"	m	language:C++	struct:KAT_key	access:public
dQ	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *dQ;$/;"	m	language:C++	struct:Rsa_key	access:public
daemon	compat.c	/^int daemon(int nochdir, int noclose) {$/;"	f	language:C	signature:(int nochdir, int noclose)
daemon	compat.h	/^int daemon(int nochdir, int noclose);$/;"	p	language:C++	signature:(int nochdir, int noclose)
daemon	sftp-server/openbsd-compat/openbsd-compat.h	/^int daemon(int nochdir, int noclose);$/;"	p	language:C++	signature:(int nochdir, int noclose)
data	algo.h	/^	const void *data; \/* algorithm specific data *\/$/;"	m	language:C++	struct:Algo_Type	access:public
data	buffer.h	/^	unsigned char * data;$/;"	m	language:C++	struct:buf	access:public
data	circbuffer.h	/^	unsigned char* data;$/;"	m	language:C++	struct:circbuf	access:public
data	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   void   *data;$/;"	m	language:C++	union:Symmetric_key	access:public
data	libtomcrypt/src/headers/tomcrypt_hash.h	/^    void *data;$/;"	m	language:C++	union:Hash_state	access:public
data	libtomcrypt/src/headers/tomcrypt_pk.h	/^   void         *data;$/;"	m	language:C++	struct:ltc_asn1_list_	access:public
dataallowed	session.h	/^	unsigned dataallowed : 1; \/* whether we can send data packets or we are in$/;"	m	language:C++	struct:sshsession	access:public
datafellows	sftp-server/compat.c	/^int datafellows = 0;$/;"	v	language:C
datagram	sftp-server/channels.h	/^	int     		datagram;$/;"	m	language:C++	struct:Channel	access:public
datarecv	kex.h	/^	unsigned int datarecv; \/* data received since last kex *\/$/;"	m	language:C++	struct:KEXState	access:public
datatrans	kex.h	/^	unsigned int datatrans; \/* data transmitted since last kex *\/$/;"	m	language:C++	struct:KEXState	access:public
debug	sftp-server/log.c	/^debug(const char *fmt,...)$/;"	f	language:C	signature:(const char *fmt,...)
debug	sftp-server/log.h	/^void     debug(const char *, ...) __attribute__((format(printf, 1, 2)));$/;"	p	language:C++	signature:(const char *, ...)
debug2	sftp-server/log.c	/^debug2(const char *fmt,...)$/;"	f	language:C	signature:(const char *fmt,...)
debug2	sftp-server/log.h	/^void     debug2(const char *, ...) __attribute__((format(printf, 1, 2)));$/;"	p	language:C++	signature:(const char *, ...)
debug3	sftp-server/log.c	/^debug3(const char *fmt,...)$/;"	f	language:C	signature:(const char *fmt,...)
debug3	sftp-server/log.h	/^void     debug3(const char *, ...) __attribute__((format(printf, 1, 2)));$/;"	p	language:C++	signature:(const char *, ...)
debug_trace	dbutil.c	/^int debug_trace = 0;$/;"	v	language:C
decode_attrib	sftp-server/sftp-common.c	/^decode_attrib(Buffer *b)$/;"	f	language:C	signature:(Buffer *b)
decode_attrib	sftp-server/sftp-common.h	/^Attrib	*decode_attrib(Buffer *);$/;"	p	language:C++	signature:(Buffer *)
decrypt	algo.h	/^	int (*decrypt)(const unsigned char *ct, unsigned char *pt, $/;"	m	language:C++	struct:dropbear_cipher_mode	access:public
decrypt_packet	packet.c	/^void decrypt_packet() {$/;"	f	language:C
decrypt_packet	packet.h	/^void decrypt_packet();$/;"	p	language:C++	signature:()
default_rounds	libtomcrypt/src/headers/tomcrypt_cipher.h	/^        default_rounds;$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
deinit	libtomcrypt/src/headers/tomcrypt_math.h	/^   void (*deinit)(void *a);$/;"	m	language:C++	struct:__anon54	access:public
deinit	libtomcrypt/src/math/gmp_desc.c	/^static void deinit(void *a)$/;"	f	language:C	file:	signature:(void *a)
deinit	libtomcrypt/src/math/ltm_desc.c	/^static void deinit(void *a)$/;"	f	language:C	file:	signature:(void *a)
deinit	libtomcrypt/src/math/tfm_desc.c	/^static void deinit(void *a)$/;"	f	language:C	file:	signature:(void *a)
delayed	sftp-server/channels.h	/^	int     delayed;	\/* post-select handlers for newly created$/;"	m	language:C++	struct:Channel	access:public
delete_channel	common-channel.c	/^static void delete_channel(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
delete_channel	common-channel.c	/^static void delete_channel(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
deny_input_open	sftp-server/channels.h	/^void	 deny_input_open(int, u_int32_t, void *);$/;"	p	language:C++	signature:(int, u_int32_t, void *)
dequeue	queue.c	/^void* dequeue(struct Queue* queue) {$/;"	f	language:C	signature:(struct Queue* queue)
dequeue	queue.h	/^void* dequeue(struct Queue* queue);$/;"	p	language:C++	signature:(struct Queue* queue)
der_choice_test	libtomcrypt/testprof/der_tests.c	/^static int der_choice_test(void)$/;"	f	language:C	file:	signature:(void)
der_decode_bit_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_decode_bit_string(const unsigned char *in, unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_decode_bit_string	libtomcrypt/src/pk/asn1/der/bit/der_decode_bit_string.c	/^int der_decode_bit_string(const unsigned char *in,  unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_decode_boolean	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_decode_boolean(const unsigned char *in, unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, int *out)
der_decode_boolean	libtomcrypt/src/pk/asn1/der/boolean/der_decode_boolean.c	/^int der_decode_boolean(const unsigned char *in, unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, int *out)
der_decode_choice	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_decode_choice(const unsigned char *in,   unsigned long *inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long *inlen, ltc_asn1_list *list, unsigned long outlen)
der_decode_choice	libtomcrypt/src/pk/asn1/der/choice/der_decode_choice.c	/^int der_decode_choice(const unsigned char *in,   unsigned long *inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long *inlen, ltc_asn1_list *list, unsigned long outlen)
der_decode_ia5_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_decode_ia5_string(const unsigned char *in, unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_decode_ia5_string	libtomcrypt/src/pk/asn1/der/ia5/der_decode_ia5_string.c	/^int der_decode_ia5_string(const unsigned char *in, unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_decode_integer	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_decode_integer(const unsigned char *in, unsigned long inlen, void *num);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, void *num)
der_decode_integer	libtomcrypt/src/pk/asn1/der/integer/der_decode_integer.c	/^int der_decode_integer(const unsigned char *in, unsigned long inlen, void *num)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, void *num)
der_decode_object_identifier	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_decode_object_identifier(const unsigned char *in,    unsigned long  inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned long *words, unsigned long *outlen)
der_decode_object_identifier	libtomcrypt/src/pk/asn1/der/object_identifier/der_decode_object_identifier.c	/^int der_decode_object_identifier(const unsigned char *in,    unsigned long  inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned long *words, unsigned long *outlen)
der_decode_octet_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_decode_octet_string(const unsigned char *in, unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_decode_octet_string	libtomcrypt/src/pk/asn1/der/octet/der_decode_octet_string.c	/^int der_decode_octet_string(const unsigned char *in, unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_decode_printable_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_decode_printable_string(const unsigned char *in, unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_decode_printable_string	libtomcrypt/src/pk/asn1/der/printable_string/der_decode_printable_string.c	/^int der_decode_printable_string(const unsigned char *in, unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_decode_sequence	libtomcrypt/src/headers/tomcrypt_pk.h	417;"	d	language:C++
der_decode_sequence_ex	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_decode_sequence_ex(const unsigned char *in, unsigned long  inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, ltc_asn1_list *list, unsigned long outlen, int ordered)
der_decode_sequence_ex	libtomcrypt/src/pk/asn1/der/sequence/der_decode_sequence_ex.c	/^int der_decode_sequence_ex(const unsigned char *in, unsigned long  inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, ltc_asn1_list *list, unsigned long outlen, int ordered)
der_decode_sequence_flexi	libtomcrypt/src/headers/tomcrypt_pk.h	/^int  der_decode_sequence_flexi(const unsigned char *in, unsigned long *inlen, ltc_asn1_list **out);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long *inlen, ltc_asn1_list **out)
der_decode_sequence_flexi	libtomcrypt/src/pk/asn1/der/sequence/der_decode_sequence_flexi.c	/^int der_decode_sequence_flexi(const unsigned char *in, unsigned long *inlen, ltc_asn1_list **out)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long *inlen, ltc_asn1_list **out)
der_decode_sequence_multi	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_decode_sequence_multi(const unsigned char *in, unsigned long inlen, ...);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, ...)
der_decode_sequence_multi	libtomcrypt/src/pk/asn1/der/sequence/der_decode_sequence_multi.c	/^int der_decode_sequence_multi(const unsigned char *in, unsigned long inlen, ...)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, ...)
der_decode_set	libtomcrypt/src/headers/tomcrypt_pk.h	423;"	d	language:C++
der_decode_short_integer	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_decode_short_integer(const unsigned char *in, unsigned long inlen, unsigned long *num);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned long *num)
der_decode_short_integer	libtomcrypt/src/pk/asn1/der/short_integer/der_decode_short_integer.c	/^int der_decode_short_integer(const unsigned char *in, unsigned long inlen, unsigned long *num)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned long *num)
der_decode_utctime	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_decode_utctime(const unsigned char *in, unsigned long *inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long *inlen, ltc_utctime *out)
der_decode_utctime	libtomcrypt/src/pk/asn1/der/utctime/der_decode_utctime.c	/^int der_decode_utctime(const unsigned char *in, unsigned long *inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long *inlen, ltc_utctime *out)
der_decode_utf8_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_decode_utf8_string(const unsigned char *in,  unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, wchar_t *out, unsigned long *outlen)
der_decode_utf8_string	libtomcrypt/src/pk/asn1/der/utf8/der_decode_utf8_string.c	/^int der_decode_utf8_string(const unsigned char *in,  unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, wchar_t *out, unsigned long *outlen)
der_encode_bit_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_encode_bit_string(const unsigned char *in, unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_encode_bit_string	libtomcrypt/src/pk/asn1/der/bit/der_encode_bit_string.c	/^int der_encode_bit_string(const unsigned char *in, unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_encode_boolean	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_encode_boolean(int in, $/;"	p	language:C++	signature:(int in, unsigned char *out, unsigned long *outlen)
der_encode_boolean	libtomcrypt/src/pk/asn1/der/boolean/der_encode_boolean.c	/^int der_encode_boolean(int in, $/;"	f	language:C	signature:(int in, unsigned char *out, unsigned long *outlen)
der_encode_ia5_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_encode_ia5_string(const unsigned char *in, unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_encode_ia5_string	libtomcrypt/src/pk/asn1/der/ia5/der_encode_ia5_string.c	/^int der_encode_ia5_string(const unsigned char *in, unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_encode_integer	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_encode_integer(void *num, unsigned char *out, unsigned long *outlen);$/;"	p	language:C++	signature:(void *num, unsigned char *out, unsigned long *outlen)
der_encode_integer	libtomcrypt/src/pk/asn1/der/integer/der_encode_integer.c	/^int der_encode_integer(void *num, unsigned char *out, unsigned long *outlen)$/;"	f	language:C	signature:(void *num, unsigned char *out, unsigned long *outlen)
der_encode_object_identifier	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_encode_object_identifier(unsigned long *words, unsigned long  nwords,$/;"	p	language:C++	signature:(unsigned long *words, unsigned long nwords, unsigned char *out, unsigned long *outlen)
der_encode_object_identifier	libtomcrypt/src/pk/asn1/der/object_identifier/der_encode_object_identifier.c	/^int der_encode_object_identifier(unsigned long *words, unsigned long  nwords,$/;"	f	language:C	signature:(unsigned long *words, unsigned long nwords, unsigned char *out, unsigned long *outlen)
der_encode_octet_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_encode_octet_string(const unsigned char *in, unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_encode_octet_string	libtomcrypt/src/pk/asn1/der/octet/der_encode_octet_string.c	/^int der_encode_octet_string(const unsigned char *in, unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_encode_printable_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_encode_printable_string(const unsigned char *in, unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_encode_printable_string	libtomcrypt/src/pk/asn1/der/printable_string/der_encode_printable_string.c	/^int der_encode_printable_string(const unsigned char *in, unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_encode_sequence	libtomcrypt/src/headers/tomcrypt_pk.h	412;"	d	language:C++
der_encode_sequence_ex	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_encode_sequence_ex(ltc_asn1_list *list, unsigned long inlen,$/;"	p	language:C++	signature:(ltc_asn1_list *list, unsigned long inlen, unsigned char *out, unsigned long *outlen, int type_of)
der_encode_sequence_ex	libtomcrypt/src/pk/asn1/der/sequence/der_encode_sequence_ex.c	/^int der_encode_sequence_ex(ltc_asn1_list *list, unsigned long inlen,$/;"	f	language:C	signature:(ltc_asn1_list *list, unsigned long inlen, unsigned char *out, unsigned long *outlen, int type_of)
der_encode_sequence_multi	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_encode_sequence_multi(unsigned char *out, unsigned long *outlen, ...);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long *outlen, ...)
der_encode_sequence_multi	libtomcrypt/src/pk/asn1/der/sequence/der_encode_sequence_multi.c	/^int der_encode_sequence_multi(unsigned char *out, unsigned long *outlen, ...)$/;"	f	language:C	signature:(unsigned char *out, unsigned long *outlen, ...)
der_encode_set	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_encode_set(ltc_asn1_list *list, unsigned long inlen,$/;"	p	language:C++	signature:(ltc_asn1_list *list, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_encode_set	libtomcrypt/src/pk/asn1/der/set/der_encode_set.c	/^int der_encode_set(ltc_asn1_list *list, unsigned long inlen,$/;"	f	language:C	signature:(ltc_asn1_list *list, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_encode_setof	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_encode_setof(ltc_asn1_list *list, unsigned long inlen,$/;"	p	language:C++	signature:(ltc_asn1_list *list, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_encode_setof	libtomcrypt/src/pk/asn1/der/set/der_encode_setof.c	/^int der_encode_setof(ltc_asn1_list *list, unsigned long inlen,$/;"	f	language:C	signature:(ltc_asn1_list *list, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_encode_short_integer	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_encode_short_integer(unsigned long num, unsigned char *out, unsigned long *outlen);$/;"	p	language:C++	signature:(unsigned long num, unsigned char *out, unsigned long *outlen)
der_encode_short_integer	libtomcrypt/src/pk/asn1/der/short_integer/der_encode_short_integer.c	/^int der_encode_short_integer(unsigned long num, unsigned char *out, unsigned long *outlen)$/;"	f	language:C	signature:(unsigned long num, unsigned char *out, unsigned long *outlen)
der_encode_utctime	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_encode_utctime(ltc_utctime *utctime, $/;"	p	language:C++	signature:(ltc_utctime *utctime, unsigned char *out, unsigned long *outlen)
der_encode_utctime	libtomcrypt/src/pk/asn1/der/utctime/der_encode_utctime.c	/^int der_encode_utctime(ltc_utctime *utctime, $/;"	f	language:C	signature:(ltc_utctime *utctime, unsigned char *out, unsigned long *outlen)
der_encode_utf8_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_encode_utf8_string(const wchar_t *in,  unsigned long inlen,$/;"	p	language:C++	signature:(const wchar_t *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_encode_utf8_string	libtomcrypt/src/pk/asn1/der/utf8/der_encode_utf8_string.c	/^int der_encode_utf8_string(const wchar_t *in,  unsigned long inlen,$/;"	f	language:C	signature:(const wchar_t *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
der_flexi_test	libtomcrypt/testprof/der_tests.c	/^static void der_flexi_test(void)$/;"	f	language:C	file:	signature:(void)
der_free_sequence_flexi	libtomcrypt/src/headers/tomcrypt_pk.h	/^void der_free_sequence_flexi(ltc_asn1_list *list);$/;"	p	language:C++	signature:(ltc_asn1_list *list)
der_ia5_char_encode	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_ia5_char_encode(int c);$/;"	p	language:C++	signature:(int c)
der_ia5_char_encode	libtomcrypt/src/pk/asn1/der/ia5/der_length_ia5_string.c	/^int der_ia5_char_encode(int c)$/;"	f	language:C	signature:(int c)
der_ia5_value_decode	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_ia5_value_decode(int v);$/;"	p	language:C++	signature:(int v)
der_ia5_value_decode	libtomcrypt/src/pk/asn1/der/ia5/der_length_ia5_string.c	/^int der_ia5_value_decode(int v)$/;"	f	language:C	signature:(int v)
der_length_bit_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_length_bit_string(unsigned long nbits, unsigned long *outlen);$/;"	p	language:C++	signature:(unsigned long nbits, unsigned long *outlen)
der_length_bit_string	libtomcrypt/src/pk/asn1/der/bit/der_length_bit_string.c	/^int der_length_bit_string(unsigned long nbits, unsigned long *outlen)$/;"	f	language:C	signature:(unsigned long nbits, unsigned long *outlen)
der_length_boolean	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_length_boolean(unsigned long *outlen);$/;"	p	language:C++	signature:(unsigned long *outlen)
der_length_boolean	libtomcrypt/src/pk/asn1/der/boolean/der_length_boolean.c	/^int der_length_boolean(unsigned long *outlen)$/;"	f	language:C	signature:(unsigned long *outlen)
der_length_ia5_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_length_ia5_string(const unsigned char *octets, unsigned long noctets, unsigned long *outlen);$/;"	p	language:C++	signature:(const unsigned char *octets, unsigned long noctets, unsigned long *outlen)
der_length_ia5_string	libtomcrypt/src/pk/asn1/der/ia5/der_length_ia5_string.c	/^int der_length_ia5_string(const unsigned char *octets, unsigned long noctets, unsigned long *outlen)$/;"	f	language:C	signature:(const unsigned char *octets, unsigned long noctets, unsigned long *outlen)
der_length_integer	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_length_integer(void *num, unsigned long *len);$/;"	p	language:C++	signature:(void *num, unsigned long *len)
der_length_integer	libtomcrypt/src/pk/asn1/der/integer/der_length_integer.c	/^int der_length_integer(void *num, unsigned long *outlen)$/;"	f	language:C	signature:(void *num, unsigned long *outlen)
der_length_object_identifier	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_length_object_identifier(unsigned long *words, unsigned long nwords, unsigned long *outlen);$/;"	p	language:C++	signature:(unsigned long *words, unsigned long nwords, unsigned long *outlen)
der_length_object_identifier	libtomcrypt/src/pk/asn1/der/object_identifier/der_length_object_identifier.c	/^int der_length_object_identifier(unsigned long *words, unsigned long nwords, unsigned long *outlen)$/;"	f	language:C	signature:(unsigned long *words, unsigned long nwords, unsigned long *outlen)
der_length_octet_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_length_octet_string(unsigned long noctets, unsigned long *outlen);$/;"	p	language:C++	signature:(unsigned long noctets, unsigned long *outlen)
der_length_octet_string	libtomcrypt/src/pk/asn1/der/octet/der_length_octet_string.c	/^int der_length_octet_string(unsigned long noctets, unsigned long *outlen)$/;"	f	language:C	signature:(unsigned long noctets, unsigned long *outlen)
der_length_printable_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_length_printable_string(const unsigned char *octets, unsigned long noctets, unsigned long *outlen);$/;"	p	language:C++	signature:(const unsigned char *octets, unsigned long noctets, unsigned long *outlen)
der_length_printable_string	libtomcrypt/src/pk/asn1/der/printable_string/der_length_printable_string.c	/^int der_length_printable_string(const unsigned char *octets, unsigned long noctets, unsigned long *outlen)$/;"	f	language:C	signature:(const unsigned char *octets, unsigned long noctets, unsigned long *outlen)
der_length_sequence	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_length_sequence(ltc_asn1_list *list, unsigned long inlen,$/;"	p	language:C++	signature:(ltc_asn1_list *list, unsigned long inlen, unsigned long *outlen)
der_length_sequence	libtomcrypt/src/pk/asn1/der/sequence/der_length_sequence.c	/^int der_length_sequence(ltc_asn1_list *list, unsigned long inlen,$/;"	f	language:C	signature:(ltc_asn1_list *list, unsigned long inlen, unsigned long *outlen)
der_length_set	libtomcrypt/src/headers/tomcrypt_pk.h	424;"	d	language:C++
der_length_short_integer	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_length_short_integer(unsigned long num, unsigned long *outlen);$/;"	p	language:C++	signature:(unsigned long num, unsigned long *outlen)
der_length_short_integer	libtomcrypt/src/pk/asn1/der/short_integer/der_length_short_integer.c	/^int der_length_short_integer(unsigned long num, unsigned long *outlen)$/;"	f	language:C	signature:(unsigned long num, unsigned long *outlen)
der_length_utctime	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_length_utctime(ltc_utctime *utctime, unsigned long *outlen);$/;"	p	language:C++	signature:(ltc_utctime *utctime, unsigned long *outlen)
der_length_utctime	libtomcrypt/src/pk/asn1/der/utctime/der_length_utctime.c	/^int der_length_utctime(ltc_utctime *utctime, unsigned long *outlen)$/;"	f	language:C	signature:(ltc_utctime *utctime, unsigned long *outlen)
der_length_utf8_string	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_length_utf8_string(const wchar_t *in, unsigned long noctets, unsigned long *outlen);$/;"	p	language:C++	signature:(const wchar_t *in, unsigned long noctets, unsigned long *outlen)
der_length_utf8_string	libtomcrypt/src/pk/asn1/der/utf8/der_length_utf8_string.c	/^int der_length_utf8_string(const wchar_t *in, unsigned long noctets, unsigned long *outlen)$/;"	f	language:C	signature:(const wchar_t *in, unsigned long noctets, unsigned long *outlen)
der_object_identifier_bits	libtomcrypt/src/headers/tomcrypt_pk.h	/^unsigned long der_object_identifier_bits(unsigned long x);$/;"	p	language:C++	signature:(unsigned long x)
der_object_identifier_bits	libtomcrypt/src/pk/asn1/der/object_identifier/der_length_object_identifier.c	/^unsigned long der_object_identifier_bits(unsigned long x)$/;"	f	language:C	signature:(unsigned long x)
der_printable_char_encode	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_printable_char_encode(int c);$/;"	p	language:C++	signature:(int c)
der_printable_char_encode	libtomcrypt/src/pk/asn1/der/printable_string/der_length_printable_string.c	/^int der_printable_char_encode(int c)$/;"	f	language:C	signature:(int c)
der_printable_value_decode	libtomcrypt/src/headers/tomcrypt_pk.h	/^int der_printable_value_decode(int v);$/;"	p	language:C++	signature:(int v)
der_printable_value_decode	libtomcrypt/src/pk/asn1/der/printable_string/der_length_printable_string.c	/^int der_printable_value_decode(int v)$/;"	f	language:C	signature:(int v)
der_sequence_free	libtomcrypt/src/headers/tomcrypt_pk.h	/^void der_sequence_free(ltc_asn1_list *in);$/;"	p	language:C++	signature:(ltc_asn1_list *in)
der_sequence_free	libtomcrypt/src/pk/asn1/der/sequence/der_sequence_free.c	/^void der_sequence_free(ltc_asn1_list *in)$/;"	f	language:C	signature:(ltc_asn1_list *in)
der_set_test	libtomcrypt/testprof/der_tests.c	/^static void der_set_test(void)$/;"	f	language:C	file:	signature:(void)
der_tests	libtomcrypt/testprof/der_tests.c	/^int der_tests(void)$/;"	f	language:C	signature:(void)
der_tests	libtomcrypt/testprof/tomcrypt_test.h	/^int der_tests(void);$/;"	p	language:C++	signature:(void)
der_utf8_charsize	libtomcrypt/src/headers/tomcrypt_pk.h	/^unsigned long der_utf8_charsize(const wchar_t c);$/;"	p	language:C++	signature:(const wchar_t c)
der_utf8_charsize	libtomcrypt/src/pk/asn1/der/utf8/der_length_utf8_string.c	/^unsigned long der_utf8_charsize(const wchar_t c)$/;"	f	language:C	signature:(const wchar_t c)
des	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct des_key des;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::des_key	access:public
des3	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct des3_key des3;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::des3_key	access:public
des3_desc	libtomcrypt/src/ciphers/des.c	/^const struct ltc_cipher_descriptor des3_desc =$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
des3_done	libtomcrypt/src/ciphers/des.c	/^void des3_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
des3_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void des3_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
des3_ecb_decrypt	libtomcrypt/src/ciphers/des.c	/^int des3_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
des3_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int des3_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
des3_ecb_encrypt	libtomcrypt/src/ciphers/des.c	/^int des3_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
des3_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int des3_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
des3_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct des3_key {$/;"	s	language:C++
des3_key::dk	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 ek[3][32], dk[3][32];$/;"	m	language:C++	struct:des3_key	access:public
des3_key::ek	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 ek[3][32], dk[3][32];$/;"	m	language:C++	struct:des3_key	access:public
des3_keysize	libtomcrypt/src/ciphers/des.c	/^int des3_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
des3_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int des3_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
des3_setup	libtomcrypt/src/ciphers/des.c	/^int des3_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
des3_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int des3_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
des3_test	libtomcrypt/src/ciphers/des.c	/^int des3_test(void)$/;"	f	language:C	signature:(void)
des3_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int des3_test(void);$/;"	p	language:C++	signature:(void)
des_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void des_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
des_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int des_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
des_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int des_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
des_fp	libtomcrypt/src/ciphers/des.c	/^static const ulong64 des_fp[8][256] = {$/;"	v	language:C	file:
des_ip	libtomcrypt/src/ciphers/des.c	/^static const ulong64 des_ip[8][256] = {$/;"	v	language:C	file:
des_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct des_key {$/;"	s	language:C++
des_key::dk	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 ek[32], dk[32];$/;"	m	language:C++	struct:des_key	access:public
des_key::ek	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 ek[32], dk[32];$/;"	m	language:C++	struct:des_key	access:public
des_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int des_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
des_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int des_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
des_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int des_test(void);$/;"	p	language:C++	signature:(void)
desfunc	libtomcrypt/src/ciphers/des.c	/^static void desfunc(ulong32 *block, const ulong32 *keys)$/;"	f	language:C	file:	signature:(ulong32 *block, const ulong32 *keys)
deskey	libtomcrypt/src/ciphers/des.c	/^static void deskey(const unsigned char *key, short edf, ulong32 *keyout)$/;"	f	language:C	file:	signature:(const unsigned char *key, short edf, ulong32 *keyout)
detach_close	sftp-server/channels.h	/^	int			detach_close;$/;"	m	language:C++	struct:Channel	access:public
detach_user	sftp-server/channels.h	/^	channel_callback_fn	*detach_user;$/;"	m	language:C++	struct:Channel	access:public
dh_K	session.h	/^	mp_int * dh_K; \/* SSH_MSG_KEXDH_REPLY and sending SSH_MSH_NEWKEYS *\/$/;"	m	language:C++	struct:sshsession	access:public
dh_e	session.h	/^	mp_int *dh_e, *dh_x; \/* Used during KEX *\/$/;"	m	language:C++	struct:clientsession	access:public
dh_p_1	common-kex.c	/^static const unsigned char dh_p_1[DH_P_1_LEN] = {$/;"	v	language:C	file:
dh_p_14	common-kex.c	/^static const unsigned char dh_p_14[DH_P_14_LEN] = {$/;"	v	language:C	file:
dh_x	session.h	/^	mp_int *dh_e, *dh_x; \/* Used during KEX *\/$/;"	m	language:C++	struct:clientsession	access:public
direct	tcpfwd.h	/^	enum {direct, forwarded} tcp_type;$/;"	e	language:C++	enum:TCPListener::__anon57
dirent	sftp-server/openbsd-compat/bsd-nextstep.h	39;"	d	language:C++
dirname	sftp-server/openbsd-compat/openbsd-compat.h	/^char *dirname(const char *path);$/;"	p	language:C++	signature:(const char *path)
dirp	sftp-server/sftp-server.c	/^	DIR *dirp;$/;"	m	language:C	struct:Handle	file:	access:public
disablekey	svr-runopts.c	/^static void disablekey(int type, const char* filename) {$/;"	f	language:C	file:	signature:(int type, const char* filename)
disallow_core	dbutil.c	/^void disallow_core() {$/;"	f	language:C
disallow_core	dbutil.h	/^void disallow_core();$/;"	p	language:C++	signature:()
div_2	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*div_2)(void *a, void *b);$/;"	m	language:C++	struct:__anon54	access:public
div_2	libtomcrypt/src/math/gmp_desc.c	/^static int div_2(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
div_2	libtomcrypt/src/math/ltm_desc.c	/^static int div_2(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
div_2	libtomcrypt/src/math/tfm_desc.c	/^static int div_2(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
divide	libtomcrypt/src/math/gmp_desc.c	/^static int divide(void *a, void *b, void *c, void *d)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c, void *d)
divide	libtomcrypt/src/math/ltm_desc.c	/^static int divide(void *a, void *b, void *c, void *d)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c, void *d)
divide	libtomcrypt/src/math/tfm_desc.c	/^static int divide(void *a, void *b, void *c, void *d)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c, void *d)
dk	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 ek[32], dk[32];$/;"	m	language:C++	struct:des_key	access:public
dk	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 ek[3][32], dk[3][32];$/;"	m	language:C++	struct:des3_key	access:public
do_close	sftp-server/sftp-client.h	/^int do_close(struct sftp_conn *, char *, u_int);$/;"	p	language:C++	signature:(struct sftp_conn *, char *, u_int)
do_cmd	scp.c	/^do_cmd(char *host, char *remuser, char *cmd, int *fdin, int *fdout, int argc)$/;"	f	language:C	signature:(char *host, char *remuser, char *cmd, int *fdin, int *fdout, int argc)
do_cmd_pid	scp.c	/^pid_t do_cmd_pid = -1;$/;"	v	language:C
do_convert	dropbearconvert.c	/^static int do_convert(int intype, const char* infile, int outtype,$/;"	f	language:C	file:	signature:(int intype, const char* infile, int outtype, const char* outfile)
do_convert	dropbearconvert.c	/^static int do_convert(int intype, const char* infile, int outtype,$/;"	p	language:C	file:	signature:(int intype, const char* infile, int outtype, const char* outfile)
do_download	sftp-server/sftp-client.h	/^int do_download(struct sftp_conn *, char *, char *, Attrib *, int);$/;"	p	language:C++	signature:(struct sftp_conn *, char *, char *, Attrib *, int)
do_fsetstat	sftp-server/sftp-client.h	/^int do_fsetstat(struct sftp_conn *, char *, u_int, Attrib *);$/;"	p	language:C++	signature:(struct sftp_conn *, char *, u_int, Attrib *)
do_init	sftp-server/sftp-client.h	/^struct sftp_conn *do_init(int, int, u_int, u_int);$/;"	p	language:C++	signature:(int, int, u_int, u_int)
do_local_cmd	scp.c	/^do_local_cmd(arglist *a)$/;"	f	language:C	file:	signature:(arglist *a)
do_log	sftp-server/log.c	/^do_log(LogLevel level, const char *fmt, va_list args)$/;"	f	language:C	signature:(LogLevel level, const char *fmt, va_list args)
do_log	sftp-server/log.h	/^void	 do_log(LogLevel, const char *, va_list);$/;"	p	language:C++	signature:(LogLevel, const char *, va_list)
do_lstat	sftp-server/sftp-client.h	/^Attrib *do_lstat(struct sftp_conn *, char *, int);$/;"	p	language:C++	signature:(struct sftp_conn *, char *, int)
do_mkdir	sftp-server/sftp-client.h	/^int do_mkdir(struct sftp_conn *, char *, Attrib *, int);$/;"	p	language:C++	signature:(struct sftp_conn *, char *, Attrib *, int)
do_readdir	sftp-server/sftp-client.h	/^int do_readdir(struct sftp_conn *, char *, SFTP_DIRENT ***);$/;"	p	language:C++	signature:(struct sftp_conn *, char *, SFTP_DIRENT ***)
do_realpath	sftp-server/sftp-client.h	/^char *do_realpath(struct sftp_conn *, char *);$/;"	p	language:C++	signature:(struct sftp_conn *, char *)
do_rename	sftp-server/sftp-client.h	/^int do_rename(struct sftp_conn *, char *, char *);$/;"	p	language:C++	signature:(struct sftp_conn *, char *, char *)
do_rm	sftp-server/sftp-client.h	/^int do_rm(struct sftp_conn *, char *);$/;"	p	language:C++	signature:(struct sftp_conn *, char *)
do_rmdir	sftp-server/sftp-client.h	/^int do_rmdir(struct sftp_conn *, char *);$/;"	p	language:C++	signature:(struct sftp_conn *, char *)
do_setstat	sftp-server/sftp-client.h	/^int do_setstat(struct sftp_conn *, char *, Attrib *);$/;"	p	language:C++	signature:(struct sftp_conn *, char *, Attrib *)
do_stat	sftp-server/sftp-client.h	/^Attrib *do_stat(struct sftp_conn *, char *, int);$/;"	p	language:C++	signature:(struct sftp_conn *, char *, int)
do_statvfs	sftp-server/sftp-client.h	/^int do_statvfs(struct sftp_conn *, const char *, struct sftp_statvfs *, int);$/;"	p	language:C++	signature:(struct sftp_conn *, const char *, struct sftp_statvfs *, int)
do_symlink	sftp-server/sftp-client.h	/^int do_symlink(struct sftp_conn *, char *, char *);$/;"	p	language:C++	signature:(struct sftp_conn *, char *, char *)
do_upload	sftp-server/sftp-client.h	/^int do_upload(struct sftp_conn *, char *, char *, int);$/;"	p	language:C++	signature:(struct sftp_conn *, char *, char *, int)
domotd	runopts.h	/^	int domotd;$/;"	m	language:C++	struct:svr_runopts	access:public
done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   void (*done)(symmetric_key *skey);      $/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
done	libtomcrypt/src/headers/tomcrypt_hash.h	/^    int (*done)(hash_state *hash, unsigned char *out);$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
done	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int (*done)(prng_state *prng);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
donefirstkex	kex.h	/^	unsigned donefirstkex : 1; \/* Set to 1 after the first kex has completed,$/;"	m	language:C++	struct:KEXState	access:public
donefirstkex	session.h	/^	unsigned donefirstkex : 1; \/* Set when we set sentnewkeys, never reset *\/$/;"	m	language:C++	struct:clientsession	access:public
donerandinit	random.c	/^static int donerandinit = 0;$/;"	v	language:C	file:
download_dir	sftp-server/sftp-client.h	/^int download_dir(struct sftp_conn *, char *, char *, Attrib *, int, int);$/;"	p	language:C++	signature:(struct sftp_conn *, char *, char *, Attrib *, int, int)
dp	libtomcrypt/src/headers/tomcrypt_pk.h	/^	const ltc_ecc_set_type *dp;$/;"	m	language:C++	struct:__anon36	access:public
dp	libtommath/mtest/mpi.h	/^  mp_digit     *dp;      \/* the digits themselves      *\/$/;"	m	language:C++	struct:__anon23	access:public
dp	libtommath/tommath.h	/^    mp_digit *dp;$/;"	m	language:C++	struct:__anon18	access:public
draw	libtommath/demo/demo.c	/^static void draw(mp_int * a)$/;"	f	language:C	file:	signature:(mp_int * a)
draw	libtommath/demo/timing.c	/^static void draw(mp_int * a)$/;"	f	language:C	file:	signature:(mp_int * a)
draw_func	libtommath/dep.pl	/^sub draw_func()$/;"	s	language:Perl
dropbear_3des	common-algo.c	/^static const struct dropbear_cipher dropbear_3des = $/;"	v	language:C	typeref:struct:dropbear_cipher	file:
dropbear_aes128	common-algo.c	/^static const struct dropbear_cipher dropbear_aes128 = $/;"	v	language:C	typeref:struct:dropbear_cipher	file:
dropbear_aes256	common-algo.c	/^static const struct dropbear_cipher dropbear_aes256 = $/;"	v	language:C	typeref:struct:dropbear_cipher	file:
dropbear_assert	dbutil.h	81;"	d	language:C++
dropbear_big_endian_ctr_start	common-algo.c	/^static int dropbear_big_endian_ctr_start(int cipher, $/;"	f	language:C	file:	signature:(int cipher, const unsigned char *IV, const unsigned char *key, int keylen, int num_rounds, symmetric_CTR *ctr)
dropbear_blowfish	common-algo.c	/^static const struct dropbear_cipher dropbear_blowfish = $/;"	v	language:C	typeref:struct:dropbear_cipher	file:
dropbear_cipher	algo.h	/^struct dropbear_cipher {$/;"	s	language:C++
dropbear_cipher::blocksize	algo.h	/^	unsigned char blocksize;$/;"	m	language:C++	struct:dropbear_cipher	access:public
dropbear_cipher::cipherdesc	algo.h	/^	const struct ltc_cipher_descriptor *cipherdesc;$/;"	m	language:C++	struct:dropbear_cipher	typeref:struct:dropbear_cipher::ltc_cipher_descriptor	access:public
dropbear_cipher::keysize	algo.h	/^	unsigned long keysize;$/;"	m	language:C++	struct:dropbear_cipher	access:public
dropbear_cipher_mode	algo.h	/^struct dropbear_cipher_mode {$/;"	s	language:C++
dropbear_cipher_mode::decrypt	algo.h	/^	int (*decrypt)(const unsigned char *ct, unsigned char *pt, $/;"	m	language:C++	struct:dropbear_cipher_mode	access:public
dropbear_cipher_mode::encrypt	algo.h	/^	int (*encrypt)(const unsigned char *pt, unsigned char *ct, $/;"	m	language:C++	struct:dropbear_cipher_mode	access:public
dropbear_cipher_mode::start	algo.h	/^	int (*start)(int cipher, const unsigned char *IV, $/;"	m	language:C++	struct:dropbear_cipher_mode	access:public
dropbear_close	dbutil.c	/^void dropbear_close(const char* format, ...) {$/;"	f	language:C	signature:(const char* format, ...)
dropbear_close	dbutil.h	/^void dropbear_close(const char* format, ...);$/;"	p	language:C++	signature:(const char* format, ...)
dropbear_dss_key	dss.h	/^} dropbear_dss_key;$/;"	t	language:C++	typeref:struct:__anon56
dropbear_exit	dbutil.c	/^void dropbear_exit(const char* format, ...) {$/;"	f	language:C	signature:(const char* format, ...)
dropbear_exit	dbutil.h	/^void dropbear_exit(const char* format, ...);$/;"	p	language:C++	signature:(const char* format, ...)
dropbear_hash	algo.h	/^struct dropbear_hash {$/;"	s	language:C++
dropbear_hash::hashdesc	algo.h	/^	const struct ltc_hash_descriptor *hashdesc;$/;"	m	language:C++	struct:dropbear_hash	typeref:struct:dropbear_hash::ltc_hash_descriptor	access:public
dropbear_hash::hashsize	algo.h	/^	unsigned char hashsize;$/;"	m	language:C++	struct:dropbear_hash	access:public
dropbear_hash::keysize	algo.h	/^	unsigned long keysize;$/;"	m	language:C++	struct:dropbear_hash	access:public
dropbear_listen	dbutil.c	/^int dropbear_listen(const char* address, const char* port,$/;"	f	language:C	signature:(const char* address, const char* port, int *socks, unsigned int sockcount, char **errstring, int *maxfd)
dropbear_listen	dbutil.h	/^int dropbear_listen(const char* address, const char* port,$/;"	p	language:C++	signature:(const char* address, const char* port, int *socks, unsigned int sockcount, char **errstring, int *maxfd)
dropbear_log	dbutil.c	/^void dropbear_log(int priority, const char* format, ...) {$/;"	f	language:C	signature:(int priority, const char* format, ...)
dropbear_log	dbutil.h	/^void dropbear_log(int priority, const char* format, ...);$/;"	p	language:C++	signature:(int priority, const char* format, ...)
dropbear_main	dbmulti.c	/^int dropbear_main(int argc, char ** argv);$/;"	p	language:C	file:	signature:(int argc, char ** argv)
dropbear_main	svr-main.c	/^int dropbear_main(int argc, char ** argv)$/;"	f	language:C	signature:(int argc, char ** argv)
dropbear_md5	common-algo.c	/^static const struct dropbear_hash dropbear_md5 = $/;"	v	language:C	typeref:struct:dropbear_hash	file:
dropbear_mode_cbc	common-algo.c	/^const struct dropbear_cipher_mode dropbear_mode_cbc =$/;"	v	language:C	typeref:struct:dropbear_cipher_mode
dropbear_mode_ctr	common-algo.c	/^const struct dropbear_cipher_mode dropbear_mode_ctr =$/;"	v	language:C	typeref:struct:dropbear_cipher_mode
dropbear_mode_none	common-algo.c	/^const struct dropbear_cipher_mode dropbear_mode_none =$/;"	v	language:C	typeref:struct:dropbear_cipher_mode
dropbear_nocipher	common-algo.c	/^const struct dropbear_cipher dropbear_nocipher =$/;"	v	language:C	typeref:struct:dropbear_cipher
dropbear_nohash	common-algo.c	/^const struct dropbear_hash dropbear_nohash =$/;"	v	language:C	typeref:struct:dropbear_hash
dropbear_read	keyimport.c	/^static sign_key *dropbear_read(const char* filename) {$/;"	f	language:C	file:	signature:(const char* filename)
dropbear_read	keyimport.c	/^static sign_key *dropbear_read(const char* filename);$/;"	p	language:C	file:	signature:(const char* filename)
dropbear_rsa_key	rsa.h	/^} dropbear_rsa_key;$/;"	t	language:C++	typeref:struct:__anon1
dropbear_sha1	common-algo.c	/^static const struct dropbear_hash dropbear_sha1 = $/;"	v	language:C	typeref:struct:dropbear_hash	file:
dropbear_sha1_96	common-algo.c	/^static const struct dropbear_hash dropbear_sha1_96 = $/;"	v	language:C	typeref:struct:dropbear_hash	file:
dropbear_trace	dbutil.c	/^void dropbear_trace(const char* format, ...) {$/;"	f	language:C	signature:(const char* format, ...)
dropbear_trace	dbutil.h	/^void dropbear_trace(const char* format, ...);$/;"	p	language:C++	signature:(const char* format, ...)
dropbear_twofish128	common-algo.c	/^static const struct dropbear_cipher dropbear_twofish128 = $/;"	v	language:C	typeref:struct:dropbear_cipher	file:
dropbear_twofish256	common-algo.c	/^static const struct dropbear_cipher dropbear_twofish256 = $/;"	v	language:C	typeref:struct:dropbear_cipher	file:
dropbear_write	keyimport.c	/^static int dropbear_write(const char*filename, sign_key * key) {$/;"	f	language:C	file:	signature:(const char*filename, sign_key * key)
dropbear_write	keyimport.c	/^static int dropbear_write(const char*filename, sign_key * key);$/;"	p	language:C	file:	signature:(const char*filename, sign_key * key)
dropbearconvert_main	dbmulti.c	/^int dropbearconvert_main(int argc, char ** argv);$/;"	p	language:C	file:	signature:(int argc, char ** argv)
dropbearconvert_main	dropbearconvert.c	/^int dropbearconvert_main(int argc, char ** argv) {$/;"	f	language:C	signature:(int argc, char ** argv)
dropbearkey_main	dbmulti.c	/^int dropbearkey_main(int argc, char ** argv);$/;"	p	language:C	file:	signature:(int argc, char ** argv)
dropbearkey_main	dropbearkey.c	/^int dropbearkey_main(int argc, char ** argv) {$/;"	f	language:C	signature:(int argc, char ** argv)
dsa_decrypt_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^int dsa_decrypt_key(const unsigned char *in,  unsigned long  inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, dsa_key *key)
dsa_decrypt_key	libtomcrypt/src/pk/dsa/dsa_decrypt_key.c	/^int dsa_decrypt_key(const unsigned char *in,  unsigned long  inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, dsa_key *key)
dsa_encrypt_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^int dsa_encrypt_key(const unsigned char *in,   unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, prng_state *prng, int wprng, int hash, dsa_key *key)
dsa_encrypt_key	libtomcrypt/src/pk/dsa/dsa_encrypt_key.c	/^int dsa_encrypt_key(const unsigned char *in,   unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, prng_state *prng, int wprng, int hash, dsa_key *key)
dsa_export	libtomcrypt/src/headers/tomcrypt_pk.h	/^int dsa_export(unsigned char *out, unsigned long *outlen, int type, dsa_key *key);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long *outlen, int type, dsa_key *key)
dsa_export	libtomcrypt/src/pk/dsa/dsa_export.c	/^int dsa_export(unsigned char *out, unsigned long *outlen, int type, dsa_key *key)$/;"	f	language:C	signature:(unsigned char *out, unsigned long *outlen, int type, dsa_key *key)
dsa_free	libtomcrypt/src/headers/tomcrypt_pk.h	/^void dsa_free(dsa_key *key);$/;"	p	language:C++	signature:(dsa_key *key)
dsa_free	libtomcrypt/src/pk/dsa/dsa_free.c	/^void dsa_free(dsa_key *key)$/;"	f	language:C	signature:(dsa_key *key)
dsa_import	libtomcrypt/src/headers/tomcrypt_pk.h	/^int dsa_import(const unsigned char *in, unsigned long inlen, dsa_key *key);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, dsa_key *key)
dsa_import	libtomcrypt/src/pk/dsa/dsa_import.c	/^int dsa_import(const unsigned char *in, unsigned long inlen, dsa_key *key)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, dsa_key *key)
dsa_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^} dsa_key;$/;"	t	language:C++	typeref:struct:__anon37
dsa_make_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^int dsa_make_key(prng_state *prng, int wprng, int group_size, int modulus_size, dsa_key *key);$/;"	p	language:C++	signature:(prng_state *prng, int wprng, int group_size, int modulus_size, dsa_key *key)
dsa_make_key	libtomcrypt/src/pk/dsa/dsa_make_key.c	/^int dsa_make_key(prng_state *prng, int wprng, int group_size, int modulus_size, dsa_key *key)$/;"	f	language:C	signature:(prng_state *prng, int wprng, int group_size, int modulus_size, dsa_key *key)
dsa_shared_secret	libtomcrypt/src/headers/tomcrypt_pk.h	/^int dsa_shared_secret(void          *private_key, void *base,$/;"	p	language:C++	signature:(void *private_key, void *base, dsa_key *public_key, unsigned char *out, unsigned long *outlen)
dsa_shared_secret	libtomcrypt/src/pk/dsa/dsa_shared_secret.c	/^int dsa_shared_secret(void          *private_key, void *base,$/;"	f	language:C	signature:(void *private_key, void *base, dsa_key *public_key, unsigned char *out, unsigned long *outlen)
dsa_sign_hash	libtomcrypt/src/headers/tomcrypt_pk.h	/^int dsa_sign_hash(const unsigned char *in,  unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, prng_state *prng, int wprng, dsa_key *key)
dsa_sign_hash	libtomcrypt/src/pk/dsa/dsa_sign_hash.c	/^int dsa_sign_hash(const unsigned char *in,  unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, prng_state *prng, int wprng, dsa_key *key)
dsa_sign_hash_raw	libtomcrypt/src/headers/tomcrypt_pk.h	/^int dsa_sign_hash_raw(const unsigned char *in,  unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, void *r, void *s, prng_state *prng, int wprng, dsa_key *key)
dsa_sign_hash_raw	libtomcrypt/src/pk/dsa/dsa_sign_hash.c	/^int dsa_sign_hash_raw(const unsigned char *in,  unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, void *r, void *s, prng_state *prng, int wprng, dsa_key *key)
dsa_test	libtomcrypt/testprof/dsa_test.c	/^int dsa_test(void)$/;"	f	language:C	signature:(void)
dsa_test	libtomcrypt/testprof/tomcrypt_test.h	/^int dsa_test(void);$/;"	p	language:C++	signature:(void)
dsa_verify_hash	libtomcrypt/src/headers/tomcrypt_pk.h	/^int dsa_verify_hash(const unsigned char *sig,  unsigned long siglen,$/;"	p	language:C++	signature:(const unsigned char *sig, unsigned long siglen, const unsigned char *hash, unsigned long hashlen, int *stat, dsa_key *key)
dsa_verify_hash	libtomcrypt/src/pk/dsa/dsa_verify_hash.c	/^int dsa_verify_hash(const unsigned char *sig, unsigned long siglen,$/;"	f	language:C	signature:(const unsigned char *sig, unsigned long siglen, const unsigned char *hash, unsigned long hashlen, int *stat, dsa_key *key)
dsa_verify_hash_raw	libtomcrypt/src/headers/tomcrypt_pk.h	/^int dsa_verify_hash_raw(         void *r,          void *s,$/;"	p	language:C++	signature:( void *r, void *s, const unsigned char *hash, unsigned long hashlen, int *stat, dsa_key *key)
dsa_verify_hash_raw	libtomcrypt/src/pk/dsa/dsa_verify_hash.c	/^int dsa_verify_hash_raw(         void   *r,          void   *s,$/;"	f	language:C	signature:( void *r, void *s, const unsigned char *hash, unsigned long hashlen, int *stat, dsa_key *key)
dsa_verify_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^int dsa_verify_key(dsa_key *key, int *stat);$/;"	p	language:C++	signature:(dsa_key *key, int *stat)
dsa_verify_key	libtomcrypt/src/pk/dsa/dsa_verify_key.c	/^int dsa_verify_key(dsa_key *key, int *stat)$/;"	f	language:C	signature:(dsa_key *key, int *stat)
dss_key_free	dss.c	/^void dss_key_free(dropbear_dss_key *key) {$/;"	f	language:C	signature:(dropbear_dss_key *key)
dss_key_free	dss.h	/^void dss_key_free(dropbear_dss_key *key);$/;"	p	language:C++	signature:(dropbear_dss_key *key)
dsskey	signkey.h	/^	dropbear_dss_key * dsskey;$/;"	m	language:C++	struct:SIGN_key	access:public
dsskeyfile	runopts.h	/^	char * dsskeyfile;$/;"	m	language:C++	struct:svr_runopts	access:public
dummy	libtomcrypt/src/headers/tomcrypt_hash.h	/^    char dummy[1];$/;"	m	language:C++	union:Hash_state	access:public
dummy	libtomcrypt/src/headers/tomcrypt_prng.h	/^    char dummy[1];$/;"	m	language:C++	union:Prng_state	access:public
e	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *e; $/;"	m	language:C++	struct:Rsa_key	access:public
e	rsa.h	/^	mp_int* e;$/;"	m	language:C++	struct:__anon1	access:public
eK	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 eK[60], dK[60];$/;"	m	language:C++	struct:rijndael_key	access:public
eax_addheader	libtomcrypt/src/encauth/eax/eax_addheader.c	/^int eax_addheader(eax_state *eax, const unsigned char *header, $/;"	f	language:C	signature:(eax_state *eax, const unsigned char *header, unsigned long length)
eax_addheader	libtomcrypt/src/headers/tomcrypt_mac.h	/^int eax_addheader(eax_state *eax, const unsigned char *header, unsigned long length);$/;"	p	language:C++	signature:(eax_state *eax, const unsigned char *header, unsigned long length)
eax_decrypt	libtomcrypt/src/encauth/eax/eax_decrypt.c	/^int eax_decrypt(eax_state *eax, const unsigned char *ct, unsigned char *pt, $/;"	f	language:C	signature:(eax_state *eax, const unsigned char *ct, unsigned char *pt, unsigned long length)
eax_decrypt	libtomcrypt/src/headers/tomcrypt_mac.h	/^int eax_decrypt(eax_state *eax, const unsigned char *ct, unsigned char *pt, unsigned long length);$/;"	p	language:C++	signature:(eax_state *eax, const unsigned char *ct, unsigned char *pt, unsigned long length)
eax_decrypt_verify_memory	libtomcrypt/src/encauth/eax/eax_decrypt_verify_memory.c	/^int eax_decrypt_verify_memory(int cipher,$/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *nonce, unsigned long noncelen, const unsigned char *header, unsigned long headerlen, const unsigned char *ct, unsigned long ctlen, unsigned char *pt, unsigned char *tag, unsigned long taglen, int *stat)
eax_decrypt_verify_memory	libtomcrypt/src/headers/tomcrypt_mac.h	/^int eax_decrypt_verify_memory(int cipher,$/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *nonce, unsigned long noncelen, const unsigned char *header, unsigned long headerlen, const unsigned char *ct, unsigned long ctlen, unsigned char *pt, unsigned char *tag, unsigned long taglen, int *stat)
eax_done	libtomcrypt/src/encauth/eax/eax_done.c	/^int eax_done(eax_state *eax, unsigned char *tag, unsigned long *taglen)$/;"	f	language:C	signature:(eax_state *eax, unsigned char *tag, unsigned long *taglen)
eax_done	libtomcrypt/src/headers/tomcrypt_mac.h	/^int eax_done(eax_state *eax, unsigned char *tag, unsigned long *taglen);$/;"	p	language:C++	signature:(eax_state *eax, unsigned char *tag, unsigned long *taglen)
eax_encrypt	libtomcrypt/src/encauth/eax/eax_encrypt.c	/^int eax_encrypt(eax_state *eax, const unsigned char *pt, unsigned char *ct, $/;"	f	language:C	signature:(eax_state *eax, const unsigned char *pt, unsigned char *ct, unsigned long length)
eax_encrypt	libtomcrypt/src/headers/tomcrypt_mac.h	/^int eax_encrypt(eax_state *eax, const unsigned char *pt, unsigned char *ct, unsigned long length);$/;"	p	language:C++	signature:(eax_state *eax, const unsigned char *pt, unsigned char *ct, unsigned long length)
eax_encrypt_authenticate_memory	libtomcrypt/src/encauth/eax/eax_encrypt_authenticate_memory.c	/^int eax_encrypt_authenticate_memory(int cipher,$/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *nonce, unsigned long noncelen, const unsigned char *header, unsigned long headerlen, const unsigned char *pt, unsigned long ptlen, unsigned char *ct, unsigned char *tag, unsigned long *taglen)
eax_encrypt_authenticate_memory	libtomcrypt/src/headers/tomcrypt_mac.h	/^int eax_encrypt_authenticate_memory(int cipher,$/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *nonce, unsigned long noncelen, const unsigned char *header, unsigned long headerlen, const unsigned char *pt, unsigned long ptlen, unsigned char *ct, unsigned char *tag, unsigned long *taglen)
eax_gen	libtomcrypt/demos/tv_gen.c	/^void eax_gen(void)$/;"	f	language:C	signature:(void)
eax_init	libtomcrypt/src/encauth/eax/eax_init.c	/^int eax_init(eax_state *eax, int cipher, $/;"	f	language:C	signature:(eax_state *eax, int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *nonce, unsigned long noncelen, const unsigned char *header, unsigned long headerlen)
eax_init	libtomcrypt/src/headers/tomcrypt_mac.h	/^int eax_init(eax_state *eax, int cipher, const unsigned char *key, unsigned long keylen,$/;"	p	language:C++	signature:(eax_state *eax, int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *nonce, unsigned long noncelen, const unsigned char *header, unsigned long headerlen)
eax_state	libtomcrypt/src/headers/tomcrypt_mac.h	/^} eax_state;$/;"	t	language:C++	typeref:struct:__anon49
eax_test	libtomcrypt/src/encauth/eax/eax_test.c	/^int eax_test(void)$/;"	f	language:C	signature:(void)
eax_test	libtomcrypt/src/headers/tomcrypt_mac.h	/^ int eax_test(void);$/;"	p	language:C++	signature:(void)
ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*ecb_decrypt)(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ecb_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_ECB *ecb);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_ECB *ecb)
ecb_decrypt	libtomcrypt/src/modes/ecb/ecb_decrypt.c	/^int ecb_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_ECB *ecb)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_ECB *ecb)
ecb_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ecb_done(symmetric_ECB *ecb);$/;"	p	language:C++	signature:(symmetric_ECB *ecb)
ecb_done	libtomcrypt/src/modes/ecb/ecb_done.c	/^int ecb_done(symmetric_ECB *ecb)$/;"	f	language:C	signature:(symmetric_ECB *ecb)
ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*ecb_encrypt)(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ecb_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_ECB *ecb);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_ECB *ecb)
ecb_encrypt	libtomcrypt/src/modes/ecb/ecb_encrypt.c	/^int ecb_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_ECB *ecb)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_ECB *ecb)
ecb_start	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ecb_start(int cipher, const unsigned char *key, $/;"	p	language:C++	signature:(int cipher, const unsigned char *key, int keylen, int num_rounds, symmetric_ECB *ecb)
ecb_start	libtomcrypt/src/modes/ecb/ecb_start.c	/^int ecb_start(int cipher, const unsigned char *key, int keylen, int num_rounds, symmetric_ECB *ecb)$/;"	f	language:C	signature:(int cipher, const unsigned char *key, int keylen, int num_rounds, symmetric_ECB *ecb)
ecc_ansi_x963_export	libtomcrypt/src/headers/tomcrypt_pk.h	/^int ecc_ansi_x963_export(ecc_key *key, unsigned char *out, unsigned long *outlen);$/;"	p	language:C++	signature:(ecc_key *key, unsigned char *out, unsigned long *outlen)
ecc_ansi_x963_export	libtomcrypt/src/pk/ecc/ecc_ansi_x963_export.c	/^int ecc_ansi_x963_export(ecc_key *key, unsigned char *out, unsigned long *outlen)$/;"	f	language:C	signature:(ecc_key *key, unsigned char *out, unsigned long *outlen)
ecc_ansi_x963_import	libtomcrypt/src/headers/tomcrypt_pk.h	/^int ecc_ansi_x963_import(const unsigned char *in, unsigned long inlen, ecc_key *key);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, ecc_key *key)
ecc_ansi_x963_import	libtomcrypt/src/pk/ecc/ecc_ansi_x963_import.c	/^int ecc_ansi_x963_import(const unsigned char *in, unsigned long inlen, ecc_key *key)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, ecc_key *key)
ecc_ansi_x963_import_ex	libtomcrypt/src/headers/tomcrypt_pk.h	/^int ecc_ansi_x963_import_ex(const unsigned char *in, unsigned long inlen, ecc_key *key, ltc_ecc_set_type *dp);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, ecc_key *key, ltc_ecc_set_type *dp)
ecc_ansi_x963_import_ex	libtomcrypt/src/pk/ecc/ecc_ansi_x963_import.c	/^int ecc_ansi_x963_import_ex(const unsigned char *in, unsigned long inlen, ecc_key *key, ltc_ecc_set_type *dp)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, ecc_key *key, ltc_ecc_set_type *dp)
ecc_decrypt_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^int  ecc_decrypt_key(const unsigned char *in,  unsigned long  inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, ecc_key *key)
ecc_decrypt_key	libtomcrypt/src/pk/ecc/ecc_decrypt_key.c	/^int ecc_decrypt_key(const unsigned char *in,  unsigned long  inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, ecc_key *key)
ecc_encrypt_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^int  ecc_encrypt_key(const unsigned char *in,   unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, prng_state *prng, int wprng, int hash, ecc_key *key)
ecc_encrypt_key	libtomcrypt/src/pk/ecc/ecc_encrypt_key.c	/^int ecc_encrypt_key(const unsigned char *in,   unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, prng_state *prng, int wprng, int hash, ecc_key *key)
ecc_export	libtomcrypt/src/headers/tomcrypt_pk.h	/^int  ecc_export(unsigned char *out, unsigned long *outlen, int type, ecc_key *key);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long *outlen, int type, ecc_key *key)
ecc_export	libtomcrypt/src/pk/ecc/ecc_export.c	/^int ecc_export(unsigned char *out, unsigned long *outlen, int type, ecc_key *key)$/;"	f	language:C	signature:(unsigned char *out, unsigned long *outlen, int type, ecc_key *key)
ecc_free	libtomcrypt/src/headers/tomcrypt_pk.h	/^void ecc_free(ecc_key *key);$/;"	p	language:C++	signature:(ecc_key *key)
ecc_free	libtomcrypt/src/pk/ecc/ecc_free.c	/^void ecc_free(ecc_key *key)$/;"	f	language:C	signature:(ecc_key *key)
ecc_gen	libtomcrypt/demos/tv_gen.c	/^void ecc_gen(void)$/;"	f	language:C	signature:(void)
ecc_get_size	libtomcrypt/src/headers/tomcrypt_pk.h	/^int  ecc_get_size(ecc_key *key);$/;"	p	language:C++	signature:(ecc_key *key)
ecc_get_size	libtomcrypt/src/pk/ecc/ecc_get_size.c	/^int ecc_get_size(ecc_key *key)$/;"	f	language:C	signature:(ecc_key *key)
ecc_import	libtomcrypt/src/headers/tomcrypt_pk.h	/^int  ecc_import(const unsigned char *in, unsigned long inlen, ecc_key *key);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, ecc_key *key)
ecc_import	libtomcrypt/src/pk/ecc/ecc_import.c	/^int ecc_import(const unsigned char *in, unsigned long inlen, ecc_key *key)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, ecc_key *key)
ecc_import_ex	libtomcrypt/src/headers/tomcrypt_pk.h	/^int  ecc_import_ex(const unsigned char *in, unsigned long inlen, ecc_key *key, const ltc_ecc_set_type *dp);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, ecc_key *key, const ltc_ecc_set_type *dp)
ecc_import_ex	libtomcrypt/src/pk/ecc/ecc_import.c	/^int ecc_import_ex(const unsigned char *in, unsigned long inlen, ecc_key *key, const ltc_ecc_set_type *dp)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, ecc_key *key, const ltc_ecc_set_type *dp)
ecc_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^} ecc_key;$/;"	t	language:C++	typeref:struct:__anon36
ecc_make_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^int  ecc_make_key(prng_state *prng, int wprng, int keysize, ecc_key *key);$/;"	p	language:C++	signature:(prng_state *prng, int wprng, int keysize, ecc_key *key)
ecc_make_key	libtomcrypt/src/pk/ecc/ecc_make_key.c	/^int ecc_make_key(prng_state *prng, int wprng, int keysize, ecc_key *key)$/;"	f	language:C	signature:(prng_state *prng, int wprng, int keysize, ecc_key *key)
ecc_make_key_ex	libtomcrypt/src/headers/tomcrypt_pk.h	/^int  ecc_make_key_ex(prng_state *prng, int wprng, ecc_key *key, const ltc_ecc_set_type *dp);$/;"	p	language:C++	signature:(prng_state *prng, int wprng, ecc_key *key, const ltc_ecc_set_type *dp)
ecc_make_key_ex	libtomcrypt/src/pk/ecc/ecc_make_key.c	/^int ecc_make_key_ex(prng_state *prng, int wprng, ecc_key *key, const ltc_ecc_set_type *dp)$/;"	f	language:C	signature:(prng_state *prng, int wprng, ecc_key *key, const ltc_ecc_set_type *dp)
ecc_map	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*ecc_map)(ecc_point *P, void *modulus, void *mp);$/;"	m	language:C++	struct:__anon54	access:public
ecc_mul2add	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*ecc_mul2add)(ecc_point *A, void *kA,$/;"	m	language:C++	struct:__anon54	access:public
ecc_point	libtomcrypt/src/headers/tomcrypt_math.h	/^   typedef void ecc_point;$/;"	t	language:C++
ecc_point	libtomcrypt/src/headers/tomcrypt_pk.h	/^} ecc_point;$/;"	t	language:C++	typeref:struct:__anon35
ecc_ptadd	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*ecc_ptadd)(ecc_point *P, ecc_point *Q, ecc_point *R, void *modulus, void *mp);$/;"	m	language:C++	struct:__anon54	access:public
ecc_ptdbl	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*ecc_ptdbl)(ecc_point *P, ecc_point *R, void *modulus, void *mp);$/;"	m	language:C++	struct:__anon54	access:public
ecc_ptmul	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*ecc_ptmul)(void *k, ecc_point *G, ecc_point *R, void *modulus, int map);$/;"	m	language:C++	struct:__anon54	access:public
ecc_shared_secret	libtomcrypt/src/headers/tomcrypt_pk.h	/^int  ecc_shared_secret(ecc_key *private_key, ecc_key *public_key, $/;"	p	language:C++	signature:(ecc_key *private_key, ecc_key *public_key, unsigned char *out, unsigned long *outlen)
ecc_shared_secret	libtomcrypt/src/pk/ecc/ecc_shared_secret.c	/^int ecc_shared_secret(ecc_key *private_key, ecc_key *public_key,$/;"	f	language:C	signature:(ecc_key *private_key, ecc_key *public_key, unsigned char *out, unsigned long *outlen)
ecc_sign_hash	libtomcrypt/src/headers/tomcrypt_pk.h	/^int  ecc_sign_hash(const unsigned char *in,  unsigned long inlen, $/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, prng_state *prng, int wprng, ecc_key *key)
ecc_sign_hash	libtomcrypt/src/pk/ecc/ecc_sign_hash.c	/^int ecc_sign_hash(const unsigned char *in,  unsigned long inlen, $/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, prng_state *prng, int wprng, ecc_key *key)
ecc_sizes	libtomcrypt/src/headers/tomcrypt_pk.h	/^void ecc_sizes(int *low, int *high);$/;"	p	language:C++	signature:(int *low, int *high)
ecc_sizes	libtomcrypt/src/pk/ecc/ecc_sizes.c	/^void ecc_sizes(int *low, int *high)$/;"	f	language:C	signature:(int *low, int *high)
ecc_test	libtomcrypt/src/headers/tomcrypt_pk.h	/^int  ecc_test(void);$/;"	p	language:C++	signature:(void)
ecc_test	libtomcrypt/src/pk/ecc/ecc_test.c	/^int ecc_test(void)$/;"	f	language:C	signature:(void)
ecc_test_shamir	libtomcrypt/testprof/ecc_test.c	/^int ecc_test_shamir(void)$/;"	f	language:C	signature:(void)
ecc_tests	libtomcrypt/testprof/ecc_test.c	/^int ecc_tests (void)$/;"	f	language:C	signature:(void)
ecc_tests	libtomcrypt/testprof/ecc_test.c	/^int ecc_tests(void)$/;"	f	language:C	signature:(void)
ecc_tests	libtomcrypt/testprof/tomcrypt_test.h	/^int ecc_tests(void);$/;"	p	language:C++	signature:(void)
ecc_verify_hash	libtomcrypt/src/headers/tomcrypt_pk.h	/^int  ecc_verify_hash(const unsigned char *sig,  unsigned long siglen,$/;"	p	language:C++	signature:(const unsigned char *sig, unsigned long siglen, const unsigned char *hash, unsigned long hashlen, int *stat, ecc_key *key)
ecc_verify_hash	libtomcrypt/src/pk/ecc/ecc_verify_hash.c	/^int ecc_verify_hash(const unsigned char *sig,  unsigned long siglen,$/;"	f	language:C	signature:(const unsigned char *sig, unsigned long siglen, const unsigned char *hash, unsigned long hashlen, int *stat, ecc_key *key)
edge	libtomcrypt/src/pk/asn1/der/set/der_encode_setof.c	/^struct edge {$/;"	s	language:C	file:
edge::size	libtomcrypt/src/pk/asn1/der/set/der_encode_setof.c	/^   unsigned long  size;$/;"	m	language:C	struct:edge	file:	access:public
edge::start	libtomcrypt/src/pk/asn1/der/set/der_encode_setof.c	/^   unsigned char *start;$/;"	m	language:C	struct:edge	file:	access:public
efd	sftp-server/channels.h	/^	int     efd;		\/* extended fd *\/$/;"	m	language:C++	struct:Channel	access:public
ek	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 ek[32], dk[32];$/;"	m	language:C++	struct:des_key	access:public
ek	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 ek[3][32], dk[3][32];$/;"	m	language:C++	struct:des3_key	access:public
enable_compat13	sftp-server/compat.c	/^enable_compat13(void)$/;"	f	language:C	signature:(void)
enable_compat13	sftp-server/compat.h	/^void     enable_compat13(void);$/;"	p	language:C++	signature:(void)
enable_compat20	sftp-server/compat.c	/^enable_compat20(void)$/;"	f	language:C	signature:(void)
enable_compat20	sftp-server/compat.h	/^void     enable_compat20(void);$/;"	p	language:C++	signature:(void)
enable_compress	runopts.h	/^	int enable_compress;$/;"	m	language:C++	struct:runopts	access:public
encode_attrib	sftp-server/sftp-common.c	/^encode_attrib(Buffer *b, const Attrib *a)$/;"	f	language:C	signature:(Buffer *b, const Attrib *a)
encode_attrib	sftp-server/sftp-common.h	/^void	 encode_attrib(Buffer *, const Attrib *);$/;"	p	language:C++	signature:(Buffer *, const Attrib *)
encrypt	algo.h	/^	int (*encrypt)(const unsigned char *pt, unsigned char *ct, $/;"	m	language:C++	struct:dropbear_cipher_mode	access:public
encrypt_packet	packet.c	/^void encrypt_packet() {$/;"	f	language:C
encrypt_packet	packet.h	/^void encrypt_packet();$/;"	p	language:C++	signature:()
encrypted	keyimport.c	/^	int encrypted;$/;"	m	language:C	struct:openssh_key	file:	access:public
end	sftp-server/buffer.h	/^	u_int	 end;		\/* Offset of last byte containing data. *\/$/;"	m	language:C++	struct:__anon3	access:public
end_pos	progressmeter.c	/^static off_t end_pos;		\/* ending position of transfer *\/$/;"	v	language:C	file:
endusershell	compat.c	/^void endusershell() {$/;"	f	language:C
endusershell	compat.h	/^void endusershell();$/;"	p	language:C++	signature:()
end{alltt}
end{verbatim}
enqueue	queue.c	/^void enqueue(struct Queue* queue, void* item) {$/;"	f	language:C	signature:(struct Queue* queue, void* item)
enqueue	queue.h	/^void enqueue(struct Queue* queue, void* item);$/;"	p	language:C++	signature:(struct Queue* queue, void* item)
enqueue_reply_packet	packet.c	/^static void enqueue_reply_packet() {$/;"	f	language:C	file:
entry	libtomcrypt/testprof/tomcrypt_test.h	/^    int  (*entry)(void);$/;"	m	language:C++	struct:__anon55	access:public
entry	sftp-server/channels.h	/^	TAILQ_ENTRY(channel_confirm) entry;$/;"	m	language:C++	struct:channel_confirm	access:public
err_2_str	libtomcrypt/src/misc/error_to_string.c	/^static const char *err_2_str[] =$/;"	v	language:C	file:
errfd	channel.h	/^	int errfd; \/* used like writefd or readfd, depending if it's client or server.$/;"	m	language:C++	struct:Channel	access:public
errno	libtomcrypt/demos/encrypt.c	/^int errno;$/;"	v	language:C
errno	libtomcrypt/demos/hashsum.c	/^int errno;$/;"	v	language:C
errno_to_portable	sftp-server/sftp-server.c	/^errno_to_portable(int unixerrno)$/;"	f	language:C	file:	signature:(int unixerrno)
error	sftp-server/log.c	/^error(const char *fmt,...)$/;"	f	language:C	signature:(const char *fmt,...)
error	sftp-server/log.h	/^void     error(const char *, ...) __attribute__((format(printf, 1, 2)));$/;"	p	language:C++	signature:(const char *, ...)
error_to_string	libtomcrypt/src/headers/tomcrypt_misc.h	/^const char *error_to_string(int err);$/;"	p	language:C++	signature:(int err)
error_to_string	libtomcrypt/src/misc/error_to_string.c	/^const char *error_to_string(int err)$/;"	f	language:C	signature:(int err)
errs	scp.c	/^int errs, remin, remout;$/;"	v	language:C
events	sftp-server/openbsd-compat/bsd-poll.h	/^	short	events;$/;"	m	language:C++	struct:pollfd	access:public
examine	queue.c	/^void *examine(struct Queue* queue) {$/;"	f	language:C	signature:(struct Queue* queue)
examine	queue.h	/^void *examine(struct Queue* queue);$/;"	p	language:C++	signature:(struct Queue* queue)
exec_proxy_cmd	cli-main.c	/^static void exec_proxy_cmd(void *user_data_cmd) {$/;"	f	language:C	file:	signature:(void *user_data_cmd)
execchild	svr-chansession.c	/^static void execchild(void *user_data) {$/;"	f	language:C	file:	signature:(void *user_data)
execchild	svr-chansession.c	/^static void execchild(void *user_data_chansess);$/;"	p	language:C	file:	signature:(void *user_data_chansess)
exit	chansession.h	/^	struct exitinfo exit;$/;"	m	language:C++	struct:ChanSess	typeref:struct:ChanSess::exitinfo	access:public
exit	loginrec.h	/^	int        exit;                        \/* process exit status *\/$/;"	m	language:C++	struct:logininfo	access:public
exitcore	chansession.h	/^	int exitcore;$/;"	m	language:C++	struct:exitinfo	access:public
exitflag	common-session.c	/^int exitflag = 0; \/* GLOBAL *\/$/;"	v	language:C
exitinfo	chansession.h	/^struct exitinfo {$/;"	s	language:C++
exitinfo::exitcore	chansession.h	/^	int exitcore;$/;"	m	language:C++	struct:exitinfo	access:public
exitinfo::exitpid	chansession.h	/^	int exitpid; \/* -1 if not exited *\/$/;"	m	language:C++	struct:exitinfo	access:public
exitinfo::exitsignal	chansession.h	/^	int exitsignal;$/;"	m	language:C++	struct:exitinfo	access:public
exitinfo::exitstatus	chansession.h	/^	int exitstatus;$/;"	m	language:C++	struct:exitinfo	access:public
exitpid	chansession.h	/^	int exitpid; \/* -1 if not exited *\/$/;"	m	language:C++	struct:exitinfo	access:public
exitsignal	chansession.h	/^	int exitsignal;$/;"	m	language:C++	struct:exitinfo	access:public
exitstatus	chansession.h	/^	int exitstatus;$/;"	m	language:C++	struct:exitinfo	access:public
export_size	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int  export_size;$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
exptmod	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*exptmod)(void *a, void *b, void *c, void *d);$/;"	m	language:C++	struct:__anon54	access:public
exptmod	libtomcrypt/src/math/gmp_desc.c	/^static int exptmod(void *a, void *b, void *c, void *d)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c, void *d)
exptmod	libtomcrypt/src/math/ltm_desc.c	/^static int exptmod(void *a, void *b, void *c, void *d)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c, void *d)
exptmod	libtomcrypt/src/math/tfm_desc.c	/^static int exptmod(void *a, void *b, void *c, void *d)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c, void *d)
extended	sftp-server/channels.h	/^	Buffer  extended;$/;"	m	language:C++	struct:Channel	access:public
extended_usage	sftp-server/channels.h	/^	int     extended_usage;$/;"	m	language:C++	struct:Channel	access:public
extrabuf	channel.h	/^	circbuffer *extrabuf; \/* extended-data for the program - used like writebuf$/;"	m	language:C++	struct:Channel	access:public
f8_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int f8_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_F8 *f8);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_F8 *f8)
f8_decrypt	libtomcrypt/src/modes/f8/f8_decrypt.c	/^int f8_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_F8 *f8)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_F8 *f8)
f8_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int f8_done(symmetric_F8 *f8);$/;"	p	language:C++	signature:(symmetric_F8 *f8)
f8_done	libtomcrypt/src/modes/f8/f8_done.c	/^int f8_done(symmetric_F8 *f8)$/;"	f	language:C	signature:(symmetric_F8 *f8)
f8_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int f8_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_F8 *f8);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_F8 *f8)
f8_encrypt	libtomcrypt/src/modes/f8/f8_encrypt.c	/^int f8_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_F8 *f8)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_F8 *f8)
f8_getiv	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int f8_getiv(unsigned char *IV, unsigned long *len, symmetric_F8 *f8);$/;"	p	language:C++	signature:(unsigned char *IV, unsigned long *len, symmetric_F8 *f8)
f8_getiv	libtomcrypt/src/modes/f8/f8_getiv.c	/^int f8_getiv(unsigned char *IV, unsigned long *len, symmetric_F8 *f8)$/;"	f	language:C	signature:(unsigned char *IV, unsigned long *len, symmetric_F8 *f8)
f8_setiv	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int f8_setiv(const unsigned char *IV, unsigned long len, symmetric_F8 *f8);$/;"	p	language:C++	signature:(const unsigned char *IV, unsigned long len, symmetric_F8 *f8)
f8_setiv	libtomcrypt/src/modes/f8/f8_setiv.c	/^int f8_setiv(const unsigned char *IV, unsigned long len, symmetric_F8 *f8)$/;"	f	language:C	signature:(const unsigned char *IV, unsigned long len, symmetric_F8 *f8)
f8_start	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int f8_start(                int  cipher, const unsigned char *IV, $/;"	p	language:C++	signature:( int cipher, const unsigned char *IV, const unsigned char *key, int keylen, const unsigned char *salt_key, int skeylen, int num_rounds, symmetric_F8 *f8)
f8_start	libtomcrypt/src/modes/f8/f8_start.c	/^int f8_start(                int  cipher, const unsigned char *IV, $/;"	f	language:C	signature:( int cipher, const unsigned char *IV, const unsigned char *key, int keylen, const unsigned char *salt_key, int skeylen, int num_rounds, symmetric_F8 *f8)
f8_test_mode	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int f8_test_mode(void);$/;"	p	language:C++	signature:(void)
f8_test_mode	libtomcrypt/src/modes/f8/f8_test_mode.c	/^int f8_test_mode(void)$/;"	f	language:C	signature:(void)
f9_done	libtomcrypt/src/headers/tomcrypt_mac.h	/^int f9_done(f9_state *f9, unsigned char *out, unsigned long *outlen);$/;"	p	language:C++	signature:(f9_state *f9, unsigned char *out, unsigned long *outlen)
f9_done	libtomcrypt/src/mac/f9/f9_done.c	/^int f9_done(f9_state *f9, unsigned char *out, unsigned long *outlen)$/;"	f	language:C	signature:(f9_state *f9, unsigned char *out, unsigned long *outlen)
f9_file	libtomcrypt/src/headers/tomcrypt_mac.h	/^int f9_file(int cipher, $/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, const char *filename, unsigned char *out, unsigned long *outlen)
f9_file	libtomcrypt/src/mac/f9/f9_file.c	/^int f9_file(int cipher,$/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, const char *filename, unsigned char *out, unsigned long *outlen)
f9_init	libtomcrypt/src/headers/tomcrypt_mac.h	/^int f9_init(f9_state *f9, int cipher, const unsigned char *key, unsigned long keylen);$/;"	p	language:C++	signature:(f9_state *f9, int cipher, const unsigned char *key, unsigned long keylen)
f9_init	libtomcrypt/src/mac/f9/f9_init.c	/^int f9_init(f9_state *f9, int cipher, const unsigned char *key, unsigned long keylen)$/;"	f	language:C	signature:(f9_state *f9, int cipher, const unsigned char *key, unsigned long keylen)
f9_memory	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*f9_memory)($/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
f9_memory	libtomcrypt/src/headers/tomcrypt_mac.h	/^int f9_memory(int cipher, $/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
f9_memory	libtomcrypt/src/mac/f9/f9_memory.c	/^int f9_memory(int cipher, $/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
f9_memory_multi	libtomcrypt/src/headers/tomcrypt_mac.h	/^int f9_memory_multi(int cipher, $/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, unsigned char *out, unsigned long *outlen, const unsigned char *in, unsigned long inlen, ...)
f9_memory_multi	libtomcrypt/src/mac/f9/f9_memory_multi.c	/^int f9_memory_multi(int cipher, $/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, unsigned char *out, unsigned long *outlen, const unsigned char *in, unsigned long inlen, ...)
f9_process	libtomcrypt/src/headers/tomcrypt_mac.h	/^int f9_process(f9_state *f9, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(f9_state *f9, const unsigned char *in, unsigned long inlen)
f9_process	libtomcrypt/src/mac/f9/f9_process.c	/^int f9_process(f9_state *f9, const unsigned char *in, unsigned long inlen)$/;"	f	language:C	signature:(f9_state *f9, const unsigned char *in, unsigned long inlen)
f9_state	libtomcrypt/src/headers/tomcrypt_mac.h	/^} f9_state;$/;"	t	language:C++	typeref:struct:__anon53
f9_test	libtomcrypt/src/headers/tomcrypt_mac.h	/^int f9_test(void);$/;"	p	language:C++	signature:(void)
f9_test	libtomcrypt/src/mac/f9/f9_test.c	/^int f9_test(void)$/;"	f	language:C	signature:(void)
f_bavail	sftp-server/openbsd-compat/bsd-statvfs.h	/^	fsblkcnt_t    f_bavail;	\/* Number of free blocks available to  *\/$/;"	m	language:C++	struct:statvfs	access:public
f_bavail	sftp-server/sftp-client.h	/^	u_int64_t f_bavail;$/;"	m	language:C++	struct:sftp_statvfs	access:public
f_bfree	sftp-server/openbsd-compat/bsd-statvfs.h	/^	fsblkcnt_t    f_bfree;	\/* Total number of free blocks. *\/$/;"	m	language:C++	struct:statvfs	access:public
f_bfree	sftp-server/sftp-client.h	/^	u_int64_t f_bfree;$/;"	m	language:C++	struct:sftp_statvfs	access:public
f_blocks	sftp-server/openbsd-compat/bsd-statvfs.h	/^	fsblkcnt_t f_blocks;	\/* Total number of blocks on file system in *\/$/;"	m	language:C++	struct:statvfs	access:public
f_blocks	sftp-server/sftp-client.h	/^	u_int64_t f_blocks;$/;"	m	language:C++	struct:sftp_statvfs	access:public
f_bsize	sftp-server/openbsd-compat/bsd-statvfs.h	/^	unsigned long f_bsize;	\/* File system block size. *\/$/;"	m	language:C++	struct:statvfs	access:public
f_bsize	sftp-server/sftp-client.h	/^	u_int64_t f_bsize;$/;"	m	language:C++	struct:sftp_statvfs	access:public
f_favail	sftp-server/openbsd-compat/bsd-statvfs.h	/^	fsfilcnt_t    f_favail;	\/* Number of file serial numbers available to *\/$/;"	m	language:C++	struct:statvfs	access:public
f_favail	sftp-server/sftp-client.h	/^	u_int64_t f_favail;$/;"	m	language:C++	struct:sftp_statvfs	access:public
f_ffree	sftp-server/openbsd-compat/bsd-statvfs.h	/^	fsfilcnt_t    f_ffree;	\/* Total number of free file serial numbers. *\/$/;"	m	language:C++	struct:statvfs	access:public
f_ffree	sftp-server/sftp-client.h	/^	u_int64_t f_ffree;$/;"	m	language:C++	struct:sftp_statvfs	access:public
f_files	sftp-server/openbsd-compat/bsd-statvfs.h	/^	fsfilcnt_t    f_files;	\/* Total number of file serial numbers. *\/$/;"	m	language:C++	struct:statvfs	access:public
f_files	sftp-server/sftp-client.h	/^	u_int64_t f_files;$/;"	m	language:C++	struct:sftp_statvfs	access:public
f_flag	sftp-server/openbsd-compat/bsd-statvfs.h	/^	unsigned long f_flag;	\/* BBit mask of f_flag values. *\/$/;"	m	language:C++	struct:statvfs	access:public
f_flag	sftp-server/sftp-client.h	/^	u_int64_t f_flag;$/;"	m	language:C++	struct:sftp_statvfs	access:public
f_frsize	sftp-server/openbsd-compat/bsd-statvfs.h	/^	unsigned long f_frsize;	\/* Fundamental file system block size. *\/$/;"	m	language:C++	struct:statvfs	access:public
f_frsize	sftp-server/sftp-client.h	/^	u_int64_t f_frsize;$/;"	m	language:C++	struct:sftp_statvfs	access:public
f_fsid	sftp-server/openbsd-compat/bsd-statvfs.h	/^	unsigned long f_fsid;	\/* File system ID. *\/$/;"	m	language:C++	struct:statvfs	access:public
f_fsid	sftp-server/sftp-client.h	/^	u_int64_t f_fsid;$/;"	m	language:C++	struct:sftp_statvfs	access:public
f_namemax	sftp-server/openbsd-compat/bsd-statvfs.h	/^	unsigned long f_namemax;\/*  Maximum filename length. *\/$/;"	m	language:C++	struct:statvfs	access:public
f_namemax	sftp-server/sftp-client.h	/^	u_int64_t f_namemax;$/;"	m	language:C++	struct:sftp_statvfs	access:public
fail_assert	dbutil.c	/^void fail_assert(const char* expr, const char* file, int line) {$/;"	f	language:C	signature:(const char* expr, const char* file, int line)
fail_assert	dbutil.h	/^void fail_assert(const char* expr, const char* file, int line);$/;"	p	language:C++	signature:(const char* expr, const char* file, int line)
failcount	auth.h	/^	unsigned int failcount; \/* Number of (failed) authentication attempts.*\/$/;"	m	language:C++	struct:AuthState	access:public
fake_permissions	sftp-server/sftp-server.c	/^int fake_permissions;$/;"	v	language:C
fast_mp_invmod	libtommath/bn_fast_mp_invmod.c	/^int fast_mp_invmod (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
fast_mp_invmod	libtommath/pre_gen/mpi.c	/^int fast_mp_invmod (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
fast_mp_invmod	libtommath/tommath.h	/^int fast_mp_invmod(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
fast_mp_montgomery_reduce	libtommath/bn_fast_mp_montgomery_reduce.c	/^int fast_mp_montgomery_reduce (mp_int * x, mp_int * n, mp_digit rho)$/;"	f	language:C	signature:(mp_int * x, mp_int * n, mp_digit rho)
fast_mp_montgomery_reduce	libtommath/pre_gen/mpi.c	/^int fast_mp_montgomery_reduce (mp_int * x, mp_int * n, mp_digit rho)$/;"	f	language:C	signature:(mp_int * x, mp_int * n, mp_digit rho)
fast_mp_montgomery_reduce	libtommath/tommath.h	/^int fast_mp_montgomery_reduce(mp_int *a, mp_int *m, mp_digit mp);$/;"	p	language:C++	signature:(mp_int *a, mp_int *m, mp_digit mp)
fast_s_mp_mul_digs	libtommath/bn_fast_s_mp_mul_digs.c	/^int fast_s_mp_mul_digs (mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
fast_s_mp_mul_digs	libtommath/pre_gen/mpi.c	/^int fast_s_mp_mul_digs (mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
fast_s_mp_mul_digs	libtommath/tommath.h	/^int fast_s_mp_mul_digs(mp_int *a, mp_int *b, mp_int *c, int digs);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c, int digs)
fast_s_mp_mul_high_digs	libtommath/bn_fast_s_mp_mul_high_digs.c	/^int fast_s_mp_mul_high_digs (mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
fast_s_mp_mul_high_digs	libtommath/pre_gen/mpi.c	/^int fast_s_mp_mul_high_digs (mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
fast_s_mp_mul_high_digs	libtommath/tommath.h	/^int fast_s_mp_mul_high_digs(mp_int *a, mp_int *b, mp_int *c, int digs);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c, int digs)
fast_s_mp_sqr	libtommath/bn_fast_s_mp_sqr.c	/^int fast_s_mp_sqr (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
fast_s_mp_sqr	libtommath/pre_gen/mpi.c	/^int fast_s_mp_sqr (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
fast_s_mp_sqr	libtommath/tommath.h	/^int fast_s_mp_sqr(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
fatal	scpmisc.c	/^void fatal(char* fmt,...)$/;"	f	language:C	signature:(char* fmt,...)
fatal	scpmisc.h	/^void fatal(char* fmt,...);$/;"	p	language:C++	signature:(char* fmt,...)
fatal	sftp-server/log.c	/^fatal(const char *fmt,...)$/;"	f	language:C	signature:(const char *fmt,...)
fatal	sftp-server/log.h	/^void     fatal(const char *, ...) __attribute__((noreturn))$/;"	p	language:C++	signature:(const char *, ...)
fd	sftp-server/openbsd-compat/bsd-poll.h	/^	int 	fd;$/;"	m	language:C++	struct:pollfd	access:public
fd	sftp-server/sftp-server.c	/^	int fd;$/;"	m	language:C	struct:Handle	file:	access:public
fd_mask	sftp-server/defines.h	/^ typedef unsigned long int	fd_mask;$/;"	t	language:C++
fetch_length	libtomcrypt/src/pk/asn1/der/sequence/der_decode_sequence_flexi.c	/^static unsigned long fetch_length(const unsigned char *in, unsigned long inlen)$/;"	f	language:C	file:	signature:(const unsigned char *in, unsigned long inlen)
fetch_windows_environment	sftp-server/openbsd-compat/bsd-cygwin_util.h	/^char **fetch_windows_environment(void);$/;"	p	language:C++	signature:(void)
file	progressmeter.c	/^static char *file;		\/* name of the file being transferred *\/$/;"	v	language:C	file:
filename	sftp-server/sftp-client.h	/^	char *filename;$/;"	m	language:C++	struct:SFTP_DIRENT	access:public
filename	signkey.h	/^	char *filename;$/;"	m	language:C++	struct:SIGN_key	access:public
fill_own_user	cli-runopts.c	/^static void fill_own_user() {$/;"	f	language:C	file:
fill_own_user	cli-runopts.c	/^static void fill_own_user();$/;"	p	language:C	file:
fill_passwd	common-session.c	/^void fill_passwd(const char* username) {$/;"	f	language:C	signature:(const char* username)
fill_passwd	session.h	/^void fill_passwd(const char* username);$/;"	p	language:C++	signature:(const char* username)
filter_cleanup	sftp-server/channels.h	/^	channel_filter_cleanup_fn *filter_cleanup;$/;"	m	language:C++	struct:Channel	access:public
filter_ctx	sftp-server/channels.h	/^	void			*filter_ctx;$/;"	m	language:C++	struct:Channel	access:public
find_base	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^static int find_base(ecc_point *g)$/;"	f	language:C	file:	signature:(ecc_point *g)
find_cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int find_cipher(const char *name);$/;"	p	language:C++	signature:(const char *name)
find_cipher	libtomcrypt/src/misc/crypt/crypt_find_cipher.c	/^int find_cipher(const char *name)$/;"	f	language:C	signature:(const char *name)
find_cipher_any	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int find_cipher_any(const char *name, int blocklen, int keylen);$/;"	p	language:C++	signature:(const char *name, int blocklen, int keylen)
find_cipher_any	libtomcrypt/src/misc/crypt/crypt_find_cipher_any.c	/^int find_cipher_any(const char *name, int blocklen, int keylen)$/;"	f	language:C	signature:(const char *name, int blocklen, int keylen)
find_cipher_id	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int find_cipher_id(unsigned char ID);$/;"	p	language:C++	signature:(unsigned char ID)
find_cipher_id	libtomcrypt/src/misc/crypt/crypt_find_cipher_id.c	/^int find_cipher_id(unsigned char ID)$/;"	f	language:C	signature:(unsigned char ID)
find_hash	libtomcrypt/src/headers/tomcrypt_hash.h	/^int find_hash(const char *name);$/;"	p	language:C++	signature:(const char *name)
find_hash	libtomcrypt/src/misc/crypt/crypt_find_hash.c	/^int find_hash(const char *name)$/;"	f	language:C	signature:(const char *name)
find_hash_any	libtomcrypt/src/headers/tomcrypt_hash.h	/^int find_hash_any(const char *name, int digestlen);$/;"	p	language:C++	signature:(const char *name, int digestlen)
find_hash_any	libtomcrypt/src/misc/crypt/crypt_find_hash_any.c	/^*\/int find_hash_any(const char *name, int digestlen)$/;"	f	language:C	signature:(const char *name, int digestlen)
find_hash_id	libtomcrypt/src/headers/tomcrypt_hash.h	/^int find_hash_id(unsigned char ID);$/;"	p	language:C++	signature:(unsigned char ID)
find_hash_id	libtomcrypt/src/misc/crypt/crypt_find_hash_id.c	/^int find_hash_id(unsigned char ID)$/;"	f	language:C	signature:(unsigned char ID)
find_hash_oid	libtomcrypt/src/headers/tomcrypt_hash.h	/^int find_hash_oid(const unsigned long *ID, unsigned long IDlen);$/;"	p	language:C++	signature:(const unsigned long *ID, unsigned long IDlen)
find_hash_oid	libtomcrypt/src/misc/crypt/crypt_find_hash_oid.c	/^int find_hash_oid(const unsigned long *ID, unsigned long IDlen)$/;"	f	language:C	signature:(const unsigned long *ID, unsigned long IDlen)
find_hole	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^static int find_hole(void)$/;"	f	language:C	file:	signature:(void)
find_prng	libtomcrypt/src/headers/tomcrypt_prng.h	/^int find_prng(const char *name);$/;"	p	language:C++	signature:(const char *name)
find_prng	libtomcrypt/src/misc/crypt/crypt_find_prng.c	/^int find_prng(const char *name)$/;"	f	language:C	signature:(const char *name)
first	list.h	/^    m_list_elem *first;$/;"	m	language:C++	struct:_m_list	access:public
first_unused_handle	sftp-server/sftp-server.c	/^int first_unused_handle = -1;$/;"	v	language:C
firstfollows	kex.h	/^	unsigned firstfollows : 1; \/* true when first_kex_packet_follows is set *\/$/;"	m	language:C++	struct:KEXState	access:public
flag	libtomcrypt/src/headers/tomcrypt_prng.h	/^                 flag,           \/* first add_entropy call or not? *\/$/;"	m	language:C++	struct:sober128_prng	access:public
flags	sftp-server/channels.h	/^	int     flags;		\/* close sent\/rcvd *\/$/;"	m	language:C++	struct:Channel	access:public
flags	sftp-server/sftp-common.h	/^	u_int32_t	flags;$/;"	m	language:C++	struct:Attrib	access:public
flags_from_portable	sftp-server/sftp-server.c	/^flags_from_portable(int pflags)$/;"	f	language:C	file:	signature:(int pflags)
flushing	channel.h	/^	int flushing;$/;"	m	language:C++	struct:Channel	access:public
fmt_scaled	sftp-server/openbsd-compat/fmt_scaled.c	/^fmt_scaled(long long number, char *result)$/;"	f	language:C	signature:(long long number, char *result)
fmt_scaled	sftp-server/openbsd-compat/openbsd-compat.h	/^int	fmt_scaled(long long number, char *result);$/;"	p	language:C++	signature:(long long number, char *result)
for completeness.  Algorithm Two is a bit more modern and more flexible to work with.
force_drain	sftp-server/channels.h	/^	int     force_drain;	\/* force close on iEOF *\/$/;"	m	language:C++	struct:Channel	access:public
forced_command	auth.h	/^	unsigned char * forced_command;$/;"	m	language:C++	struct:PubKeyOptions	access:public
forkbg	runopts.h	/^	int forkbg;$/;"	m	language:C++	struct:svr_runopts	access:public
format_rate	progressmeter.c	/^format_rate(char *buf, int size, off_t bytes)$/;"	f	language:C	file:	signature:(char *buf, int size, off_t bytes)
format_rate	progressmeter.c	/^static void format_rate(char *, int, off_t);$/;"	p	language:C	file:	signature:(char *, int, off_t)
format_size	progressmeter.c	/^format_size(char *buf, int size, off_t bytes)$/;"	f	language:C	file:	signature:(char *buf, int size, off_t bytes)
format_size	progressmeter.c	/^static void format_size(char *, int, off_t);$/;"	p	language:C	file:	signature:(char *, int, off_t)
fortuna	libtomcrypt/src/headers/tomcrypt_prng.h	/^    struct fortuna_prng   fortuna;$/;"	m	language:C++	union:Prng_state	typeref:struct:Prng_state::fortuna_prng	access:public
fortuna_add_entropy	libtomcrypt/src/headers/tomcrypt_prng.h	/^int fortuna_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
fortuna_add_entropy	libtomcrypt/src/prngs/fortuna.c	/^int fortuna_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
fortuna_desc	libtomcrypt/src/prngs/fortuna.c	/^const struct ltc_prng_descriptor fortuna_desc = {$/;"	v	language:C	typeref:struct:ltc_prng_descriptor
fortuna_done	libtomcrypt/src/headers/tomcrypt_prng.h	/^int fortuna_done(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
fortuna_done	libtomcrypt/src/prngs/fortuna.c	/^int fortuna_done(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
fortuna_export	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  fortuna_export(unsigned char *out, unsigned long *outlen, prng_state *prng);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long *outlen, prng_state *prng)
fortuna_export	libtomcrypt/src/prngs/fortuna.c	/^int fortuna_export(unsigned char *out, unsigned long *outlen, prng_state *prng)$/;"	f	language:C	signature:(unsigned char *out, unsigned long *outlen, prng_state *prng)
fortuna_import	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  fortuna_import(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
fortuna_import	libtomcrypt/src/prngs/fortuna.c	/^int fortuna_import(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
fortuna_prng	libtomcrypt/src/headers/tomcrypt_prng.h	/^struct fortuna_prng {$/;"	s	language:C++
fortuna_prng::IV	libtomcrypt/src/headers/tomcrypt_prng.h	/^                  IV[16];     \/* IV for CTR mode *\/$/;"	m	language:C++	struct:fortuna_prng	access:public
fortuna_prng::K	libtomcrypt/src/headers/tomcrypt_prng.h	/^    unsigned char K[32],      \/* the current key *\/$/;"	m	language:C++	struct:fortuna_prng	access:public
fortuna_prng::pool	libtomcrypt/src/headers/tomcrypt_prng.h	/^    hash_state pool[FORTUNA_POOLS];     \/* the  pools *\/$/;"	m	language:C++	struct:fortuna_prng	access:public
fortuna_prng::pool0_len	libtomcrypt/src/headers/tomcrypt_prng.h	/^                  pool0_len,  \/* length of 0'th pool *\/$/;"	m	language:C++	struct:fortuna_prng	access:public
fortuna_prng::pool_idx	libtomcrypt/src/headers/tomcrypt_prng.h	/^    unsigned long pool_idx,   \/* current pool we will add to *\/$/;"	m	language:C++	struct:fortuna_prng	access:public
fortuna_prng::reset_cnt	libtomcrypt/src/headers/tomcrypt_prng.h	/^    ulong64       reset_cnt;  \/* number of times we have reset *\/$/;"	m	language:C++	struct:fortuna_prng	access:public
fortuna_prng::skey	libtomcrypt/src/headers/tomcrypt_prng.h	/^    symmetric_key skey;$/;"	m	language:C++	struct:fortuna_prng	access:public
fortuna_prng::wd	libtomcrypt/src/headers/tomcrypt_prng.h	/^                  wd;            $/;"	m	language:C++	struct:fortuna_prng	access:public
fortuna_read	libtomcrypt/src/headers/tomcrypt_prng.h	/^unsigned long fortuna_read(unsigned char *out, unsigned long outlen, prng_state *prng);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long outlen, prng_state *prng)
fortuna_read	libtomcrypt/src/prngs/fortuna.c	/^unsigned long fortuna_read(unsigned char *out, unsigned long outlen, prng_state *prng)$/;"	f	language:C	signature:(unsigned char *out, unsigned long outlen, prng_state *prng)
fortuna_ready	libtomcrypt/src/headers/tomcrypt_prng.h	/^int fortuna_ready(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
fortuna_ready	libtomcrypt/src/prngs/fortuna.c	/^int fortuna_ready(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
fortuna_reseed	libtomcrypt/src/prngs/fortuna.c	/^static int fortuna_reseed(prng_state *prng)$/;"	f	language:C	file:	signature:(prng_state *prng)
fortuna_start	libtomcrypt/src/headers/tomcrypt_prng.h	/^int fortuna_start(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
fortuna_start	libtomcrypt/src/prngs/fortuna.c	/^int fortuna_start(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
fortuna_test	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  fortuna_test(void);$/;"	p	language:C++	signature:(void)
fortuna_test	libtomcrypt/src/prngs/fortuna.c	/^int fortuna_test(void)$/;"	f	language:C	signature:(void)
fortuna_update_iv	libtomcrypt/src/prngs/fortuna.c	/^static void fortuna_update_iv(prng_state *prng)$/;"	f	language:C	file:	signature:(prng_state *prng)
forwarded	tcpfwd.h	/^	enum {direct, forwarded} tcp_type;$/;"	e	language:C++	enum:TCPListener::__anon57
four_rounds	libtomcrypt/src/mac/pelican/pelican.c	/^static void four_rounds(pelican_state *pelmac)$/;"	f	language:C	file:	signature:(pelican_state *pelmac)
fp_cache	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^} fp_cache[FP_ENTRIES];$/;"	v	language:C	typeref:struct:__anon30	file:
free_sftp_dirents	sftp-server/sftp-client.h	/^void free_sftp_dirents(SFTP_DIRENT **);$/;"	p	language:C++	signature:(SFTP_DIRENT **)
free_windows_environment	sftp-server/openbsd-compat/bsd-cygwin_util.h	/^void free_windows_environment(char **);$/;"	p	language:C++	signature:(char **)
freeaddrinfo	fake-rfc2553.c	/^freeaddrinfo(struct addrinfo *ai)$/;"	f	language:C	signature:(struct addrinfo *ai)
freeaddrinfo	fake-rfc2553.h	/^void freeaddrinfo(struct addrinfo *);$/;"	p	language:C++	signature:(struct addrinfo *)
freeaddrinfo	fake-rfc2553.h	166;"	d	language:C++
freeaddrinfo	sftp-server/openbsd-compat/fake-rfc2553.h	/^void freeaddrinfo(struct addrinfo *);$/;"	p	language:C++	signature:(struct addrinfo *)
freeaddrinfo	sftp-server/openbsd-compat/fake-rfc2553.h	164;"	d	language:C++
freeargs	scpmisc.c	/^freeargs(arglist *args)$/;"	f	language:C	signature:(arglist *args)
freeargs	scpmisc.h	/^void	 freeargs(arglist *);$/;"	p	language:C++	signature:(arglist *)
freeargs	sftp-server/misc.c	/^freeargs(arglist *args)$/;"	f	language:C	signature:(arglist *args)
freeargs	sftp-server/misc.h	/^void	 freeargs(arglist *);$/;"	p	language:C++	signature:(arglist *)
freerrset	sftp-server/openbsd-compat/getrrsetbyname.h	/^void		freerrset(struct rrsetinfo *);$/;"	p	language:C++	signature:(struct rrsetinfo *)
fsblkcnt_t	sftp-server/openbsd-compat/bsd-statvfs.h	/^typedef unsigned long fsblkcnt_t;$/;"	t	language:C++
fsfilcnt_t	sftp-server/openbsd-compat/bsd-statvfs.h	/^typedef unsigned long fsfilcnt_t;$/;"	t	language:C++
fstatvfs	sftp-server/openbsd-compat/bsd-statvfs.c	/^int fstatvfs(int fd, struct statvfs *buf)$/;"	f	language:C	signature:(int fd, struct statvfs *buf)
fstatvfs	sftp-server/openbsd-compat/bsd-statvfs.h	/^int fstatvfs(int, struct statvfs *);$/;"	p	language:C++	signature:(int, struct statvfs *)
fx2txt	sftp-server/sftp-common.c	/^fx2txt(int status)$/;"	f	language:C	signature:(int status)
fx2txt	sftp-server/sftp-common.h	/^const char *fx2txt(int);$/;"	p	language:C++	signature:(int)
g	dss.h	/^	mp_int* g;$/;"	m	language:C++	struct:__anon56	access:public
g	libtomcrypt/src/headers/tomcrypt_pk.h	/^   void *g;$/;"	m	language:C++	struct:__anon37	access:public
g	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^   ecc_point *g,              \/* cached COPY of base point *\/$/;"	m	language:C	struct:__anon30	file:	access:public
g1_func	libtomcrypt/src/ciphers/twofish/twofish.c	288;"	d	language:C	file:
g1_func	libtomcrypt/src/ciphers/twofish/twofish.c	323;"	d	language:C	file:
g_func	libtomcrypt/src/ciphers/skipjack.c	/^static unsigned g_func(unsigned w, int *kp, unsigned char *key)$/;"	f	language:C	file:	signature:(unsigned w, int *kp, unsigned char *key)
g_func	libtomcrypt/src/ciphers/twofish/twofish.c	/^static ulong32 g_func(ulong32 x, symmetric_key *key)$/;"	f	language:C	file:	signature:(ulong32 x, symmetric_key *key)
g_func	libtomcrypt/src/ciphers/twofish/twofish.c	287;"	d	language:C	file:
gai_strerror	fake-rfc2553.c	/^gai_strerror(int err)$/;"	f	language:C	signature:(int err)
gai_strerror	fake-rfc2553.h	/^char *gai_strerror(int);$/;"	p	language:C++	signature:(int)
gai_strerror	fake-rfc2553.h	161;"	d	language:C++
gai_strerror	sftp-server/openbsd-compat/fake-rfc2553.h	/^char *gai_strerror(int);$/;"	p	language:C++	signature:(int)
gai_strerror	sftp-server/openbsd-compat/fake-rfc2553.h	159;"	d	language:C++
gcd	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*gcd)(void *a, void *b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
gcd	libtomcrypt/src/math/gmp_desc.c	/^static int gcd(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
gcd	libtomcrypt/src/math/ltm_desc.c	/^static int gcd(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
gcd	libtomcrypt/src/math/tfm_desc.c	/^static int gcd(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
gcm_add_aad	libtomcrypt/src/encauth/gcm/gcm_add_aad.c	/^int gcm_add_aad(gcm_state *gcm,$/;"	f	language:C	signature:(gcm_state *gcm, const unsigned char *adata, unsigned long adatalen)
gcm_add_aad	libtomcrypt/src/headers/tomcrypt_mac.h	/^int gcm_add_aad(gcm_state *gcm,$/;"	p	language:C++	signature:(gcm_state *gcm, const unsigned char *adata, unsigned long adatalen)
gcm_add_iv	libtomcrypt/src/encauth/gcm/gcm_add_iv.c	/^int gcm_add_iv(gcm_state *gcm, $/;"	f	language:C	signature:(gcm_state *gcm, const unsigned char *IV, unsigned long IVlen)
gcm_add_iv	libtomcrypt/src/headers/tomcrypt_mac.h	/^int gcm_add_iv(gcm_state *gcm, $/;"	p	language:C++	signature:(gcm_state *gcm, const unsigned char *IV, unsigned long IVlen)
gcm_done	libtomcrypt/src/encauth/gcm/gcm_done.c	/^int gcm_done(gcm_state *gcm, $/;"	f	language:C	signature:(gcm_state *gcm, unsigned char *tag, unsigned long *taglen)
gcm_done	libtomcrypt/src/headers/tomcrypt_mac.h	/^int gcm_done(gcm_state *gcm, $/;"	p	language:C++	signature:(gcm_state *gcm, unsigned char *tag, unsigned long *taglen)
gcm_gen	libtomcrypt/demos/tv_gen.c	/^void gcm_gen(void)$/;"	f	language:C	signature:(void)
gcm_gf_mult	libtomcrypt/src/encauth/gcm/gcm_gf_mult.c	/^void gcm_gf_mult(const unsigned char *a, const unsigned char *b, unsigned char *c)$/;"	f	language:C	signature:(const unsigned char *a, const unsigned char *b, unsigned char *c)
gcm_gf_mult	libtomcrypt/src/headers/tomcrypt_mac.h	/^void gcm_gf_mult(const unsigned char *a, const unsigned char *b, unsigned char *c);$/;"	p	language:C++	signature:(const unsigned char *a, const unsigned char *b, unsigned char *c)
gcm_init	libtomcrypt/src/encauth/gcm/gcm_init.c	/^int gcm_init(gcm_state *gcm, int cipher, $/;"	f	language:C	signature:(gcm_state *gcm, int cipher, const unsigned char *key, int keylen)
gcm_init	libtomcrypt/src/headers/tomcrypt_mac.h	/^int gcm_init(gcm_state *gcm, int cipher,$/;"	p	language:C++	signature:(gcm_state *gcm, int cipher, const unsigned char *key, int keylen)
gcm_memory	libtomcrypt/src/encauth/gcm/gcm_memory.c	/^int gcm_memory(      int           cipher,$/;"	f	language:C	signature:( int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *IV, unsigned long IVlen, const unsigned char *adata, unsigned long adatalen, unsigned char *pt, unsigned long ptlen, unsigned char *ct, unsigned char *tag, unsigned long *taglen, int direction)
gcm_memory	libtomcrypt/src/headers/tomcrypt_mac.h	/^int gcm_memory(      int           cipher,$/;"	p	language:C++	signature:( int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *IV, unsigned long IVlen, const unsigned char *adata, unsigned long adatalen, unsigned char *pt, unsigned long ptlen, unsigned char *ct, unsigned char *tag, unsigned long *taglen, int direction)
gcm_mult_h	libtomcrypt/src/encauth/gcm/gcm_mult_h.c	/^void gcm_mult_h(gcm_state *gcm, unsigned char *I)$/;"	f	language:C	signature:(gcm_state *gcm, unsigned char *I)
gcm_mult_h	libtomcrypt/src/headers/tomcrypt_mac.h	/^void gcm_mult_h(gcm_state *gcm, unsigned char *I);$/;"	p	language:C++	signature:(gcm_state *gcm, unsigned char *I)
gcm_process	libtomcrypt/src/encauth/gcm/gcm_process.c	/^int gcm_process(gcm_state *gcm,$/;"	f	language:C	signature:(gcm_state *gcm, unsigned char *pt, unsigned long ptlen, unsigned char *ct, int direction)
gcm_process	libtomcrypt/src/headers/tomcrypt_mac.h	/^int gcm_process(gcm_state *gcm,$/;"	p	language:C++	signature:(gcm_state *gcm, unsigned char *pt, unsigned long ptlen, unsigned char *ct, int direction)
gcm_reset	libtomcrypt/src/encauth/gcm/gcm_reset.c	/^int gcm_reset(gcm_state *gcm)$/;"	f	language:C	signature:(gcm_state *gcm)
gcm_reset	libtomcrypt/src/headers/tomcrypt_mac.h	/^int gcm_reset(gcm_state *gcm);$/;"	p	language:C++	signature:(gcm_state *gcm)
gcm_rightshift	libtomcrypt/src/encauth/gcm/gcm_gf_mult.c	/^static void gcm_rightshift(unsigned char *a)$/;"	f	language:C	file:	signature:(unsigned char *a)
gcm_shift_table	libtomcrypt/src/encauth/gcm/gcm_gf_mult.c	/^const unsigned char gcm_shift_table[256*2] = {$/;"	v	language:C
gcm_state	libtomcrypt/src/headers/tomcrypt_mac.h	/^} gcm_state;$/;"	t	language:C++	typeref:struct:__anon51
gcm_test	libtomcrypt/src/encauth/gcm/gcm_test.c	/^int gcm_test(void)$/;"	f	language:C	signature:(void)
gcm_test	libtomcrypt/src/headers/tomcrypt_mac.h	/^int gcm_test(void);$/;"	p	language:C++	signature:(void)
gen_dss_priv_key	gendss.c	/^dropbear_dss_key * gen_dss_priv_key(unsigned int size) {$/;"	f	language:C	signature:(unsigned int size)
gen_dss_priv_key	gendss.h	/^dropbear_dss_key * gen_dss_priv_key(unsigned int size);$/;"	p	language:C++	signature:(unsigned int size)
gen_kexdh_vals	common-kex.c	/^void gen_kexdh_vals(mp_int *dh_pub, mp_int *dh_priv) {$/;"	f	language:C	signature:(mp_int *dh_pub, mp_int *dh_priv)
gen_kexdh_vals	kex.h	/^void gen_kexdh_vals(mp_int *dh_pub, mp_int *dh_priv);$/;"	p	language:C++	signature:(mp_int *dh_pub, mp_int *dh_priv)
gen_new_keys	common-kex.c	/^void gen_new_keys() {$/;"	f	language:C
gen_new_keys	common-kex.c	/^void gen_new_keys();$/;"	p	language:C	file:
gen_new_zstreams	common-kex.c	/^static void gen_new_zstreams() {$/;"	f	language:C	file:
gen_new_zstreams	common-kex.c	/^static void gen_new_zstreams();$/;"	p	language:C	file:
gen_prime	libtommath/etc/pprime.c	/^static void gen_prime (void)$/;"	f	language:C	file:	signature:(void)
gen_random_mpint	random.c	/^void gen_random_mpint(mp_int *max, mp_int *rand) {$/;"	f	language:C	signature:(mp_int *max, mp_int *rand)
gen_random_mpint	random.h	/^void gen_random_mpint(mp_int *max, mp_int *rand);$/;"	p	language:C++	signature:(mp_int *max, mp_int *rand)
gen_rsa_priv_key	genrsa.c	/^dropbear_rsa_key * gen_rsa_priv_key(unsigned int size) {$/;"	f	language:C	signature:(unsigned int size)
gen_rsa_priv_key	genrsa.h	/^dropbear_rsa_key * gen_rsa_priv_key(unsigned int size);$/;"	p	language:C++	signature:(unsigned int size)
generic_dropbear_exit	dbutil.c	/^static void generic_dropbear_exit(int exitcode, const char* format, $/;"	f	language:C	file:	signature:(int exitcode, const char* format, va_list param)
generic_dropbear_exit	dbutil.c	/^static void generic_dropbear_exit(int exitcode, const char* format, $/;"	p	language:C	file:	signature:(int exitcode, const char* format, va_list param)
generic_dropbear_log	dbutil.c	/^static void generic_dropbear_log(int UNUSED(priority), const char* format, $/;"	f	language:C	file:	signature:(int UNUSED(priority), const char* format, va_list param)
generic_dropbear_log	dbutil.c	/^static void generic_dropbear_log(int priority, const char* format, $/;"	p	language:C	file:	signature:(int priority, const char* format, va_list param)
genrandom	random.c	/^void genrandom(unsigned char* buf, unsigned int len) {$/;"	f	language:C	signature:(unsigned char* buf, unsigned int len)
genrandom	random.h	/^void genrandom(unsigned char* buf, int len);$/;"	p	language:C++	signature:(unsigned char* buf, int len)
get_attrib	sftp-server/sftp-server.c	/^get_attrib(void)$/;"	f	language:C	file:	signature:(void)
get_digit	libtomcrypt/src/headers/tomcrypt_math.h	/^   unsigned long (*get_digit)(void *a, int n);$/;"	m	language:C++	struct:__anon54	access:public
get_digit	libtomcrypt/src/math/gmp_desc.c	/^static unsigned long get_digit(void *a, int n)$/;"	f	language:C	file:	signature:(void *a, int n)
get_digit	libtomcrypt/src/math/ltm_desc.c	/^static unsigned long get_digit(void *a, int n)$/;"	f	language:C	file:	signature:(void *a, int n)
get_digit	libtomcrypt/src/math/tfm_desc.c	/^static unsigned long get_digit(void *a, int n)$/;"	f	language:C	file:	signature:(void *a, int n)
get_digit_count	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*get_digit_count)(void *a);$/;"	m	language:C++	struct:__anon54	access:public
get_digit_count	libtomcrypt/src/math/gmp_desc.c	/^static int get_digit_count(void *a)$/;"	f	language:C	file:	signature:(void *a)
get_digit_count	libtomcrypt/src/math/ltm_desc.c	/^static int get_digit_count(void *a)$/;"	f	language:C	file:	signature:(void *a)
get_digit_count	libtomcrypt/src/math/tfm_desc.c	/^static int get_digit_count(void *a)$/;"	f	language:C	file:	signature:(void *a)
get_handle	sftp-server/sftp-server.c	/^get_handle(void)$/;"	f	language:C	file:	signature:(void)
get_iaf_password	sftp-server/openbsd-compat/port-uw.h	/^char * get_iaf_password(struct passwd *pw);$/;"	p	language:C++	signature:(struct passwd *pw)
get_int	libtomcrypt/src/headers/tomcrypt_math.h	/^   unsigned long (*get_int)(void *a);$/;"	m	language:C++	struct:__anon54	access:public
get_int	libtomcrypt/src/math/gmp_desc.c	/^static unsigned long get_int(void *a)$/;"	f	language:C	file:	signature:(void *a)
get_int	libtomcrypt/src/math/ltm_desc.c	/^static unsigned long get_int(void *a)$/;"	f	language:C	file:	signature:(void *a)
get_int	libtomcrypt/src/math/tfm_desc.c	/^static unsigned long get_int(void *a)$/;"	f	language:C	file:	signature:(void *a)
get_int	sftp-server/sftp-server.c	56;"	d	language:C	file:
get_int64	sftp-server/sftp-server.c	55;"	d	language:C	file:
get_listener	listener.c	/^struct Listener * get_listener(int type, void* typedata,$/;"	f	language:C	signature:(int type, void* typedata, int (*match)(void*, void*))
get_listener	listener.h	/^struct Listener * get_listener(int type, void* typedata,$/;"	p	language:C++	signature:(int type, void* typedata, int (*match)(void*, void*))
get_response	cli-authinteract.c	/^static unsigned char* get_response(unsigned char* prompt)$/;"	f	language:C	file:	signature:(unsigned char* prompt)
get_socket_address	dbutil.c	/^void get_socket_address(int fd, char **local_host, char **local_port,$/;"	f	language:C	signature:(int fd, char **local_host, char **local_port, char **remote_host, char **remote_port, int host_lookup)
get_socket_address	dbutil.h	/^void get_socket_address(int fd, char **local_host, char **local_port,$/;"	p	language:C++	signature:(int fd, char **local_host, char **local_port, char **remote_host, char **remote_port, int host_lookup)
get_string	sftp-server/sftp-server.c	57;"	d	language:C	file:
get_termmodes	svr-chansession.c	/^static void get_termmodes(struct ChanSess *chansess) {$/;"	f	language:C	file:	signature:(struct ChanSess *chansess)
get_termmodes	svr-chansession.c	/^static void get_termmodes(struct ChanSess *chansess);$/;"	p	language:C	file:	signature:(struct ChanSess *chansess)
get_u16	sftp-server/misc.c	/^get_u16(const void *vp)$/;"	f	language:C	signature:(const void *vp)
get_u16	sftp-server/misc.h	/^u_int16_t	get_u16(const void *)$/;"	p	language:C++	signature:(const void *)
get_u32	sftp-server/misc.c	/^get_u32(const void *vp)$/;"	f	language:C	signature:(const void *vp)
get_u32	sftp-server/misc.h	/^u_int32_t	get_u32(const void *)$/;"	p	language:C++	signature:(const void *)
get_u64	sftp-server/misc.c	/^get_u64(const void *vp)$/;"	f	language:C	signature:(const void *vp)
get_u64	sftp-server/misc.h	/^u_int64_t	get_u64(const void *)$/;"	p	language:C++	signature:(const void *)
get_user_shell	common-session.c	/^const char* get_user_shell() {$/;"	f	language:C
get_user_shell	session.h	/^const char* get_user_shell();$/;"	p	language:C++	signature:()
getaddrinfo	fake-rfc2553.c	/^getaddrinfo(const char *hostname, const char *servname, $/;"	f	language:C	signature:(const char *hostname, const char *servname, const struct addrinfo *hints, struct addrinfo **res)
getaddrinfo	fake-rfc2553.h	/^int getaddrinfo(const char *, const char *, $/;"	p	language:C++	signature:(const char *, const char *, const struct addrinfo *, struct addrinfo **)
getaddrinfo	fake-rfc2553.h	153;"	d	language:C++
getaddrinfo	fake-rfc2553.h	155;"	d	language:C++
getaddrinfo	sftp-server/openbsd-compat/fake-rfc2553.h	/^int getaddrinfo(const char *, const char *, $/;"	p	language:C++	signature:(const char *, const char *, const struct addrinfo *, struct addrinfo **)
getaddrinfo	sftp-server/openbsd-compat/fake-rfc2553.h	151;"	d	language:C++
getaddrinfo	sftp-server/openbsd-compat/fake-rfc2553.h	153;"	d	language:C++
getaddrstring	dbutil.c	/^void getaddrstring(struct sockaddr_storage* addr, $/;"	f	language:C	signature:(struct sockaddr_storage* addr, char **ret_host, char **ret_port, int host_lookup)
getaddrstring	dbutil.h	/^void getaddrstring(struct sockaddr_storage* addr, $/;"	p	language:C++	signature:(struct sockaddr_storage* addr, char **ret_host, char **ret_port, int host_lookup)
getchannel	channel.h	/^struct Channel* getchannel();$/;"	p	language:C++	signature:()
getchannel	common-channel.c	/^struct Channel* getchannel() {$/;"	f	language:C
getchannel_msg	common-channel.c	/^static struct Channel* getchannel_msg(const char* kind) {$/;"	f	language:C	file:	signature:(const char* kind)
getcwd	sftp-server/openbsd-compat/openbsd-compat.h	/^char *getcwd(char *pt, size_t size);$/;"	p	language:C++	signature:(char *pt, size_t size)
getg	gendss.c	/^static void getg(dropbear_dss_key * key) {$/;"	f	language:C	file:	signature:(dropbear_dss_key * key)
getg	gendss.c	/^static void getg(dropbear_dss_key *key);$/;"	p	language:C	file:	signature:(dropbear_dss_key *key)
getgrouplist	sftp-server/openbsd-compat/openbsd-compat.h	/^int getgrouplist(const char *, gid_t, gid_t *, int *);$/;"	p	language:C++	signature:(const char *, gid_t, gid_t *, int *)
getgrouplist	sftp-server/openbsd-compat/port-aix.h	/^int getgrouplist(const char *, gid_t, gid_t *, int *);$/;"	p	language:C++	signature:(const char *, gid_t, gid_t *, int *)
getgroups	sftp-server/defines.h	727;"	d	language:C++
getnameinfo	fake-rfc2553.c	/^int getnameinfo(const struct sockaddr *sa, size_t salen, char *host, $/;"	f	language:C	signature:(const struct sockaddr *sa, size_t salen, char *host, size_t hostlen, char *serv, size_t servlen, int flags)
getnameinfo	fake-rfc2553.h	/^int getnameinfo(const struct sockaddr *, size_t, char *, size_t, $/;"	p	language:C++	signature:(const struct sockaddr *, size_t, char *, size_t, char *, size_t, int)
getnameinfo	fake-rfc2553.h	171;"	d	language:C++
getnameinfo	sftp-server/openbsd-compat/fake-rfc2553.h	/^int getnameinfo(const struct sockaddr *, size_t, char *, size_t, $/;"	p	language:C++	signature:(const struct sockaddr *, size_t, char *, size_t, char *, size_t, int)
getnameinfo	sftp-server/openbsd-compat/fake-rfc2553.h	169;"	d	language:C++
getnameinfo	sftp-server/openbsd-compat/port-aix.h	110;"	d	language:C++
getnameinfo	sftp-server/openbsd-compat/port-aix.h	114;"	d	language:C++
getopt	sftp-server/defines.h	514;"	d	language:C++
getopt	sftp-server/defines.h	520;"	d	language:C++
getp	gendss.c	/^static void getp(dropbear_dss_key *key, unsigned int size) {$/;"	f	language:C	file:	signature:(dropbear_dss_key *key, unsigned int size)
getp	gendss.c	/^static void getp(dropbear_dss_key *key, unsigned int size);$/;"	p	language:C	file:	signature:(dropbear_dss_key *key, unsigned int size)
getpass	netbsd_getpass.c	/^getpass(prompt)$/;"	f	language:C
getpass_or_cancel	auth.h	/^char* getpass_or_cancel(char* prompt);$/;"	p	language:C++	signature:(char* prompt)
getpass_or_cancel	cli-auth.c	/^char* getpass_or_cancel(char* prompt)$/;"	f	language:C	signature:(char* prompt)
getpeereid	sftp-server/openbsd-compat/openbsd-compat.h	/^int getpeereid(int , uid_t *, gid_t *);$/;"	p	language:C++	signature:(int , uid_t *, gid_t *)
getpgrp	sftp-server/defines.h	561;"	d	language:C++
getppid	sftp-server/openbsd-compat/bsd-nextstep.h	/^pid_t getppid(void);$/;"	p	language:C++	signature:(void)
getpwnam	svr-auth.c	/^struct passwd* getpwnam(const char *login)$/;"	f	language:C	signature:(const char *login)
getpwuid	svr-auth.c	/^struct passwd* getpwuid(uid_t uid)$/;"	f	language:C	signature:(uid_t uid)
getq	gendss.c	/^static void getq(dropbear_dss_key *key) {$/;"	f	language:C	file:	signature:(dropbear_dss_key *key)
getq	gendss.c	/^static void getq(dropbear_dss_key *key);$/;"	p	language:C	file:	signature:(dropbear_dss_key *key)
getrrsetbyname	sftp-server/openbsd-compat/getrrsetbyname.h	/^int		getrrsetbyname(const char *, unsigned int, unsigned int, unsigned int, struct rrsetinfo **);$/;"	p	language:C++	signature:(const char *, unsigned int, unsigned int, unsigned int, struct rrsetinfo **)
getrsaprime	genrsa.c	/^static void getrsaprime(mp_int* prime, mp_int *primeminus, $/;"	f	language:C	file:	signature:(mp_int* prime, mp_int *primeminus, mp_int* rsa_e, unsigned int size)
getrsaprime	genrsa.c	/^static void getrsaprime(mp_int* prime, mp_int *primeminus, $/;"	p	language:C	file:	signature:(mp_int* prime, mp_int *primeminus, mp_int* rsa_e, unsigned int size)
getusershell	compat.c	/^char * getusershell() {$/;"	f	language:C
getusershell	compat.h	/^char *getusershell();$/;"	p	language:C++	signature:()
getx	gendss.c	/^static void getx(dropbear_dss_key *key) {$/;"	f	language:C	file:	signature:(dropbear_dss_key *key)
getx	gendss.c	/^static void getx(dropbear_dss_key *key);$/;"	p	language:C	file:	signature:(dropbear_dss_key *key)
gety	gendss.c	/^static void gety(dropbear_dss_key *key) {$/;"	f	language:C	file:	signature:(dropbear_dss_key *key)
gety	gendss.c	/^static void gety(dropbear_dss_key *key);$/;"	p	language:C	file:	signature:(dropbear_dss_key *key)
gf_mul	libtomcrypt/notes/etc/whirlgen.c	/^unsigned gf_mul(unsigned a, unsigned b)$/;"	f	language:C	signature:(unsigned a, unsigned b)
gf_mult	libtomcrypt/src/ciphers/twofish/twofish.c	/^static ulong32 gf_mult(ulong32 a, ulong32 b, ulong32 p)$/;"	f	language:C	file:	signature:(ulong32 a, ulong32 b, ulong32 p)
gid	sftp-server/sftp-common.h	/^	u_int32_t	gid;$/;"	m	language:C++	struct:Attrib	access:public
gl_closedir	sftp-server/openbsd-compat/glob.h	/^	void (*gl_closedir)(void *);$/;"	m	language:C++	struct:__anon9	access:public
gl_errfunc	sftp-server/openbsd-compat/glob.h	/^	int (*gl_errfunc)(const char *, int);$/;"	m	language:C++	struct:__anon9	access:public
gl_flags	sftp-server/openbsd-compat/glob.h	/^	int gl_flags;		\/* Copy of flags parameter to glob. *\/$/;"	m	language:C++	struct:__anon9	access:public
gl_lstat	sftp-server/openbsd-compat/glob.h	/^	int (*gl_lstat)(const char *, struct stat *);$/;"	m	language:C++	struct:__anon9	access:public
gl_matchc	sftp-server/openbsd-compat/glob.h	/^	int gl_matchc;		\/* Count of paths matching pattern. *\/$/;"	m	language:C++	struct:__anon9	access:public
gl_offs	sftp-server/openbsd-compat/glob.h	/^	int gl_offs;		\/* Reserved at beginning of gl_pathv. *\/$/;"	m	language:C++	struct:__anon9	access:public
gl_opendir	sftp-server/openbsd-compat/glob.h	/^	void *(*gl_opendir)(const char *);$/;"	m	language:C++	struct:__anon9	access:public
gl_pathc	sftp-server/openbsd-compat/glob.h	/^	int gl_pathc;		\/* Count of total paths so far. *\/$/;"	m	language:C++	struct:__anon9	access:public
gl_pathv	sftp-server/openbsd-compat/glob.h	/^	char **gl_pathv;	\/* List of paths matching pattern. *\/$/;"	m	language:C++	struct:__anon9	access:public
gl_readdir	sftp-server/openbsd-compat/glob.h	/^	struct dirent *(*gl_readdir)(void *);	$/;"	m	language:C++	struct:__anon9	typeref:struct:__anon9::gl_readdir	access:public
gl_stat	sftp-server/openbsd-compat/glob.h	/^	int (*gl_stat)(const char *, struct stat *);$/;"	m	language:C++	struct:__anon9	access:public
glob	sftp-server/openbsd-compat/glob.h	/^int	glob(const char *, int, int (*)(const char *, int), glob_t *);$/;"	p	language:C++	signature:(const char *, int, int (*)(const char *, int), glob_t *)
glob_t	sftp-server/openbsd-compat/glob.h	/^} glob_t;$/;"	t	language:C++	typeref:struct:__anon9
globfree	sftp-server/openbsd-compat/glob.h	/^void	globfree(glob_t *);$/;"	p	language:C++	signature:(glob_t *)
gmp_desc	libtomcrypt/src/math/gmp_desc.c	/^const ltc_math_descriptor gmp_desc = {$/;"	v	language:C
group_from_gid	sftp-server/openbsd-compat/openbsd-compat.h	/^char *group_from_gid(gid_t, int);$/;"	p	language:C++	signature:(gid_t, int)
group_from_gid	sftp-server/openbsd-compat/pwcache.c	/^group_from_gid(gid_t gid, int nogroup)$/;"	f	language:C	signature:(gid_t gid, int nogroup)
gui_getpass	cli-authpasswd.c	/^static char *gui_getpass(const char *prompt) {$/;"	f	language:C	file:	signature:(const char *prompt)
h_func	libtomcrypt/src/ciphers/twofish/twofish.c	/^static void h_func(const unsigned char *in, unsigned char *out, unsigned char *M, int k, int offset)$/;"	f	language:C	file:	signature:(const unsigned char *in, unsigned char *out, unsigned char *M, int k, int offset)
ham	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^   int ham, terma, termb;$/;"	m	language:C	struct:__anon31	file:	access:public
handle_bytes_read	sftp-server/sftp-server.c	/^handle_bytes_read(int handle)$/;"	f	language:C	file:	signature:(int handle)
handle_bytes_write	sftp-server/sftp-server.c	/^handle_bytes_write(int handle)$/;"	f	language:C	file:	signature:(int handle)
handle_close	sftp-server/sftp-server.c	/^handle_close(int handle)$/;"	f	language:C	file:	signature:(int handle)
handle_from_string	sftp-server/sftp-server.c	/^handle_from_string(const char *handle, u_int hlen)$/;"	f	language:C	file:	signature:(const char *handle, u_int hlen)
handle_is_ok	sftp-server/sftp-server.c	/^handle_is_ok(int i, int type)$/;"	f	language:C	file:	signature:(int i, int type)
handle_listeners	listener.c	/^void handle_listeners(fd_set * readfds) {$/;"	f	language:C	signature:(fd_set * readfds)
handle_listeners	listener.h	/^void handle_listeners(fd_set * readfds);$/;"	p	language:C++	signature:(fd_set * readfds)
handle_log_close	sftp-server/sftp-server.c	/^handle_log_close(int handle, char *emsg)$/;"	f	language:C	file:	signature:(int handle, char *emsg)
handle_log_exit	sftp-server/sftp-server.c	/^handle_log_exit(void)$/;"	f	language:C	file:	signature:(void)
handle_new	sftp-server/sftp-server.c	/^handle_new(int use, const char *name, int fd, DIR *dirp)$/;"	f	language:C	file:	signature:(int use, const char *name, int fd, DIR *dirp)
handle_to_dir	sftp-server/sftp-server.c	/^handle_to_dir(int handle)$/;"	f	language:C	file:	signature:(int handle)
handle_to_fd	sftp-server/sftp-server.c	/^handle_to_fd(int handle)$/;"	f	language:C	file:	signature:(int handle)
handle_to_name	sftp-server/sftp-server.c	/^handle_to_name(int handle)$/;"	f	language:C	file:	signature:(int handle)
handle_to_string	sftp-server/sftp-server.c	/^handle_to_string(int handle, char **stringp, int *hlenp)$/;"	f	language:C	file:	signature:(int handle, char **stringp, int *hlenp)
handle_unused	sftp-server/sftp-server.c	/^static void handle_unused(int i)$/;"	f	language:C	file:	signature:(int i)
handle_update_read	sftp-server/sftp-server.c	/^handle_update_read(int handle, ssize_t bytes)$/;"	f	language:C	file:	signature:(int handle, ssize_t bytes)
handle_update_write	sftp-server/sftp-server.c	/^handle_update_write(int handle, ssize_t bytes)$/;"	f	language:C	file:	signature:(int handle, ssize_t bytes)
handler	packet.h	/^	void (*handler)();$/;"	m	language:C++	struct:PacketType	access:public
handles	sftp-server/sftp-server.c	/^Handle *handles = NULL;$/;"	v	language:C
hash	libtomcrypt/src/headers/tomcrypt_mac.h	/^     int            hash;$/;"	m	language:C++	struct:Hmac_state	access:public
hash	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int                   cipher, hash;$/;"	m	language:C++	struct:yarrow_prng	access:public
hash	session.h	/^	unsigned char hash[SHA1_HASH_SIZE]; \/* the hash*\/$/;"	m	language:C++	struct:sshsession	access:public
hash_descriptor	libtomcrypt/src/misc/crypt/crypt_hash_descriptor.c	/^struct ltc_hash_descriptor hash_descriptor[TAB_SIZE] = {$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
hash_file	libtomcrypt/src/hashes/helper/hash_file.c	/^int hash_file(int hash, const char *fname, unsigned char *out, unsigned long *outlen)$/;"	f	language:C	signature:(int hash, const char *fname, unsigned char *out, unsigned long *outlen)
hash_file	libtomcrypt/src/headers/tomcrypt_hash.h	/^int hash_file(int hash, const char *fname, unsigned char *out, unsigned long *outlen);$/;"	p	language:C++	signature:(int hash, const char *fname, unsigned char *out, unsigned long *outlen)
hash_filehandle	libtomcrypt/src/hashes/helper/hash_filehandle.c	/^int hash_filehandle(int hash, FILE *in, unsigned char *out, unsigned long *outlen)$/;"	f	language:C	signature:(int hash, FILE *in, unsigned char *out, unsigned long *outlen)
hash_filehandle	libtomcrypt/src/headers/tomcrypt_hash.h	/^int hash_filehandle(int hash, FILE *in, unsigned char *out, unsigned long *outlen);$/;"	p	language:C++	signature:(int hash, FILE *in, unsigned char *out, unsigned long *outlen)
hash_gen	libtomcrypt/demos/tv_gen.c	/^void hash_gen(void)$/;"	f	language:C	signature:(void)
hash_index	session.h	/^	int hash_index; \/* lookup for libtomcrypt *\/$/;"	m	language:C++	struct:key_context_directional	access:public
hash_is_valid	libtomcrypt/src/headers/tomcrypt_hash.h	/^int hash_is_valid(int idx);$/;"	p	language:C++	signature:(int idx)
hash_is_valid	libtomcrypt/src/misc/crypt/crypt_hash_is_valid.c	/^int hash_is_valid(int idx)$/;"	f	language:C	signature:(int idx)
hash_memory	libtomcrypt/src/hashes/helper/hash_memory.c	/^int hash_memory(int hash, const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)$/;"	f	language:C	signature:(int hash, const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
hash_memory	libtomcrypt/src/headers/tomcrypt_hash.h	/^int hash_memory(int hash, $/;"	p	language:C++	signature:(int hash, const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
hash_memory_multi	libtomcrypt/src/hashes/helper/hash_memory_multi.c	/^int hash_memory_multi(int hash, unsigned char *out, unsigned long *outlen,$/;"	f	language:C	signature:(int hash, unsigned char *out, unsigned long *outlen, const unsigned char *in, unsigned long inlen, ...)
hash_memory_multi	libtomcrypt/src/headers/tomcrypt_hash.h	/^int hash_memory_multi(int hash, unsigned char *out, unsigned long *outlen,$/;"	p	language:C++	signature:(int hash, unsigned char *out, unsigned long *outlen, const unsigned char *in, unsigned long inlen, ...)
hash_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^} hash_state;$/;"	t	language:C++	typeref:union:Hash_state
hashdesc	algo.h	/^	const struct ltc_hash_descriptor *hashdesc;$/;"	m	language:C++	struct:dropbear_hash	typeref:struct:dropbear_hash::ltc_hash_descriptor	access:public
hashkeys	common-kex.c	/^static void hashkeys(unsigned char *out, int outlen, $/;"	f	language:C	file:	signature:(unsigned char *out, int outlen, const hash_state * hs, const unsigned char X)
hashkeys	common-kex.c	/^static void hashkeys(unsigned char *out, int outlen, $/;"	p	language:C	file:	signature:(unsigned char *out, int outlen, const hash_state * hs, unsigned const char X)
hashpool	random.c	/^static unsigned char hashpool[SHA1_HASH_SIZE];$/;"	v	language:C	file:
hashsize	algo.h	/^	unsigned char hashsize;$/;"	m	language:C++	struct:dropbear_hash	access:public
hashsize	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned long hashsize;$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
hashstate	libtomcrypt/src/headers/tomcrypt_mac.h	/^     hash_state     hashstate;$/;"	m	language:C++	struct:Hmac_state	access:public
have_algo	algo.h	/^int have_algo(char* algo, size_t algolen, algo_type algos[]);$/;"	p	language:C++	signature:(char* algo, size_t algolen, algo_type algos[])
have_algo	common-algo.c	/^int have_algo(char* algo, size_t algolen, algo_type algos[]) {$/;"	f	language:C	signature:(char* algo, size_t algolen, algo_type algos[])
have_reply	tcpfwd.h	/^	unsigned int have_reply; \/* is set to 1 after a reply has been received$/;"	m	language:C++	struct:TCPFwdEntry	access:public
head	queue.h	/^	struct Link* head;$/;"	m	language:C++	struct:Queue	typeref:struct:Queue::Link	access:public
headeromac	libtomcrypt/src/headers/tomcrypt_mac.h	/^   omac_state    headeromac, ctomac;$/;"	m	language:C++	struct:__anon49	access:public
hexdig	signkey.c	/^static char hexdig(unsigned char x) {$/;"	f	language:C	file:	signature:(unsigned char x)
hh	libtomcrypt/src/headers/tomcrypt_pk.h	/^            hh, \/* hour *\/$/;"	m	language:C++	struct:__anon39	access:public
hmac_block	libtomcrypt/src/headers/tomcrypt_hash.h	/^    int  (*hmac_block)(const unsigned char *key, unsigned long  keylen,$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
hmac_done	libtomcrypt/src/headers/tomcrypt_mac.h	/^int hmac_done(hmac_state *hmac, unsigned char *out, unsigned long *outlen);$/;"	p	language:C++	signature:(hmac_state *hmac, unsigned char *out, unsigned long *outlen)
hmac_done	libtomcrypt/src/mac/hmac/hmac_done.c	/^int hmac_done(hmac_state *hmac, unsigned char *out, unsigned long *outlen)$/;"	f	language:C	signature:(hmac_state *hmac, unsigned char *out, unsigned long *outlen)
hmac_file	libtomcrypt/src/headers/tomcrypt_mac.h	/^int hmac_file(int hash, const char *fname, const unsigned char *key,$/;"	p	language:C++	signature:(int hash, const char *fname, const unsigned char *key, unsigned long keylen, unsigned char *dst, unsigned long *dstlen)
hmac_file	libtomcrypt/src/mac/hmac/hmac_file.c	/^int hmac_file(int hash, const char *fname, $/;"	f	language:C	signature:(int hash, const char *fname, const unsigned char *key, unsigned long keylen, unsigned char *out, unsigned long *outlen)
hmac_gen	libtomcrypt/demos/tv_gen.c	/^void hmac_gen(void)$/;"	f	language:C	signature:(void)
hmac_init	libtomcrypt/src/headers/tomcrypt_mac.h	/^int hmac_init(hmac_state *hmac, int hash, const unsigned char *key, unsigned long keylen);$/;"	p	language:C++	signature:(hmac_state *hmac, int hash, const unsigned char *key, unsigned long keylen)
hmac_init	libtomcrypt/src/mac/hmac/hmac_init.c	/^int hmac_init(hmac_state *hmac, int hash, const unsigned char *key, unsigned long keylen)$/;"	f	language:C	signature:(hmac_state *hmac, int hash, const unsigned char *key, unsigned long keylen)
hmac_memory	libtomcrypt/src/headers/tomcrypt_mac.h	/^int hmac_memory(int hash, $/;"	p	language:C++	signature:(int hash, const unsigned char *key, unsigned long keylen, const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
hmac_memory	libtomcrypt/src/mac/hmac/hmac_memory.c	/^int hmac_memory(int hash, $/;"	f	language:C	signature:(int hash, const unsigned char *key, unsigned long keylen, const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
hmac_memory_multi	libtomcrypt/src/headers/tomcrypt_mac.h	/^int hmac_memory_multi(int hash, $/;"	p	language:C++	signature:(int hash, const unsigned char *key, unsigned long keylen, unsigned char *out, unsigned long *outlen, const unsigned char *in, unsigned long inlen, ...)
hmac_memory_multi	libtomcrypt/src/mac/hmac/hmac_memory_multi.c	/^int hmac_memory_multi(int hash, $/;"	f	language:C	signature:(int hash, const unsigned char *key, unsigned long keylen, unsigned char *out, unsigned long *outlen, const unsigned char *in, unsigned long inlen, ...)
hmac_process	libtomcrypt/src/headers/tomcrypt_mac.h	/^int hmac_process(hmac_state *hmac, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(hmac_state *hmac, const unsigned char *in, unsigned long inlen)
hmac_process	libtomcrypt/src/mac/hmac/hmac_process.c	/^int hmac_process(hmac_state *hmac, const unsigned char *in, unsigned long inlen)$/;"	f	language:C	signature:(hmac_state *hmac, const unsigned char *in, unsigned long inlen)
hmac_state	libtomcrypt/src/headers/tomcrypt_mac.h	/^} hmac_state;$/;"	t	language:C++	typeref:struct:Hmac_state
hmac_test	libtomcrypt/src/headers/tomcrypt_mac.h	/^int hmac_test(void);$/;"	p	language:C++	signature:(void)
hmac_test	libtomcrypt/src/mac/hmac/hmac_test.c	/^int hmac_test(void)$/;"	f	language:C	signature:(void)
host	sftp-server/channels.h	/^	char *host;$/;"	m	language:C++	struct:channel_connect	access:public
host_port	sftp-server/channels.h	/^	int     host_port;	\/* remote port to connect for forwards *\/$/;"	m	language:C++	struct:Channel	access:public
hostaddr	loginrec.h	/^	union login_netinfo hostaddr;       \/* caller's host address(es) *\/$/;"	m	language:C++	struct:logininfo	typeref:union:logininfo::login_netinfo	access:public
hostkey	runopts.h	/^	sign_key *hostkey;$/;"	m	language:C++	struct:svr_runopts	access:public
hostname	loginrec.h	/^	char       hostname[LINFO_HOSTSIZE];     \/* remote hostname *\/$/;"	m	language:C++	struct:logininfo	access:public
howmany	sftp-server/defines.h	451;"	d	language:C++
hpdelim	sftp-server/misc.c	/^hpdelim(char **cp)$/;"	f	language:C	signature:(char **cp)
hpdelim	sftp-server/misc.h	/^char	*hpdelim(char **);$/;"	p	language:C++	signature:(char **)
iLT	libtomcrypt/src/ciphers/safer/saferp.c	131;"	d	language:C	file:
iLT	libtomcrypt/src/ciphers/safer/saferp.c	168;"	d	language:C	file:
iLT	libtomcrypt/src/ciphers/safer/saferp.c	169;"	d	language:C	file:
iPHT	libtomcrypt/src/ciphers/safer/saferp.c	96;"	d	language:C	file:
iROUND	libtomcrypt/src/ciphers/safer/saferp.c	162;"	d	language:C	file:
iROUND	libtomcrypt/src/ciphers/safer/saferp.c	163;"	d	language:C	file:
iROUND	libtomcrypt/src/ciphers/safer/saferp.c	66;"	d	language:C	file:
iSHUF	libtomcrypt/notes/etc/saferp_optimizer.c	14;"	d	language:C	file:
iSHUF	libtomcrypt/src/ciphers/safer/saferp.c	114;"	d	language:C	file:
i_sqrt	libtommath/etc/mersenne.c	/^i_sqrt (long x)$/;"	f	language:C	signature:(long x)
i_sqrt	libtommath/etc/pprime.c	/^i_sqrt (mp_word x)$/;"	f	language:C	file:	signature:(mp_word x)
ia5_table	libtomcrypt/src/pk/asn1/der/ia5/der_length_ia5_string.c	/^} ia5_table[] = {$/;"	v	language:C	typeref:struct:__anon24	file:
iamrecursive	scp.c	/^int pflag, iamremote, iamrecursive, targetshouldbedirectory;$/;"	v	language:C
iamremote	scp.c	/^int pflag, iamremote, iamrecursive, targetshouldbedirectory;$/;"	v	language:C
id	libtomcrypt/testprof/tomcrypt_test.h	/^    int id;$/;"	m	language:C++	struct:list	access:public
ident_readln	common-session.c	/^static int ident_readln(int fd, char* buf, int count) {$/;"	f	language:C	file:	signature:(int fd, char* buf, int count)
ident_readln	common-session.c	/^static int ident_readln(int fd, char* buf, int count);$/;"	p	language:C	file:	signature:(int fd, char* buf, int count)
idle_timeout_secs	runopts.h	/^	time_t idle_timeout_secs;$/;"	m	language:C++	struct:runopts	access:public
idx	libtomcrypt/src/headers/tomcrypt_pk.h	/^    int idx;$/;"	m	language:C++	struct:__anon36	access:public
ig_func	libtomcrypt/src/ciphers/skipjack.c	/^static unsigned ig_func(unsigned w, int *kp, unsigned char *key)$/;"	f	language:C	file:	signature:(unsigned w, int *kp, unsigned char *key)
ignorenext	session.h	/^	unsigned char ignorenext; \/* whether to ignore the next packet,$/;"	m	language:C++	struct:sshsession	access:public
ikeystep	libtomcrypt/src/ciphers/skipjack.c	/^static const int ikeystep[] = { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8 };$/;"	v	language:C	file:
import_encrypted	keyimport.c	/^int import_encrypted(const char* filename, int filetype) {$/;"	f	language:C	signature:(const char* filename, int filetype)
import_encrypted	keyimport.h	/^int import_encrypted(const char* filename, int filetype);$/;"	p	language:C++	signature:(const char* filename, int filetype)
import_read	keyimport.c	/^sign_key *import_read(const char *filename, char *passphrase, int filetype) {$/;"	f	language:C	signature:(const char *filename, char *passphrase, int filetype)
import_read	keyimport.h	/^sign_key *import_read(const char *filename, char *passphrase, int filetype);$/;"	p	language:C++	signature:(const char *filename, char *passphrase, int filetype)
import_write	keyimport.c	/^int import_write(const char *filename, sign_key *key, char *passphrase,$/;"	f	language:C	signature:(const char *filename, sign_key *key, char *passphrase, int filetype)
import_write	keyimport.h	/^int import_write(const char *filename, sign_key *key, char *passphrase,$/;"	p	language:C++	signature:(const char *filename, sign_key *key, char *passphrase, int filetype)
in6_addr	fake-rfc2553.h	/^struct in6_addr {$/;"	s	language:C++
in6_addr	sftp-server/openbsd-compat/fake-rfc2553.h	/^struct in6_addr {$/;"	s	language:C++
in6_addr::s6_addr	fake-rfc2553.h	/^	u_int8_t	s6_addr[16];$/;"	m	language:C++	struct:in6_addr	access:public
in6_addr::s6_addr	sftp-server/openbsd-compat/fake-rfc2553.h	/^	u_int8_t	s6_addr[16];$/;"	m	language:C++	struct:in6_addr	access:public
in_addr_t	sftp-server/defines.h	/^typedef u_int32_t	in_addr_t;$/;"	t	language:C++
in_port_t	sftp-server/defines.h	/^typedef u_int16_t	in_port_t;$/;"	t	language:C++
index	channel.h	/^	unsigned int index; \/* the local channel index *\/$/;"	m	language:C++	struct:Channel	access:public
index	listener.h	/^	int index; \/* index in the array of listeners *\/$/;"	m	language:C++	struct:Listener	access:public
index{PKCS #5}
index{der_sequence_free()}
index{pkcs_5_alg1()}
inet_aton	sftp-server/openbsd-compat/openbsd-compat.h	/^int inet_aton(const char *cp, struct in_addr *addr);$/;"	p	language:C++	signature:(const char *cp, struct in_addr *addr)
inet_ntoa	sftp-server/openbsd-compat/openbsd-compat.h	/^char *inet_ntoa(struct in_addr in);$/;"	p	language:C++	signature:(struct in_addr in)
inet_ntop	sftp-server/openbsd-compat/openbsd-compat.h	/^const char *inet_ntop(int af, const void *src, char *dst, size_t size);$/;"	p	language:C++	signature:(int af, const void *src, char *dst, size_t size)
inetdmode	runopts.h	/^	int inetdmode;$/;"	m	language:C++	struct:svr_runopts	access:public
init	libtomcrypt/src/headers/tomcrypt_hash.h	/^    int (*init)(hash_state *hash);$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
init	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*init)(void **a);$/;"	m	language:C++	struct:__anon54	access:public
init	libtomcrypt/src/math/gmp_desc.c	/^static int init(void **a)$/;"	f	language:C	file:	signature:(void **a)
init	libtomcrypt/src/math/ltm_desc.c	/^static int init(void **a)$/;"	f	language:C	file:	signature:(void **a)
init	libtomcrypt/src/math/tfm_desc.c	/^static int init(void **a)$/;"	f	language:C	file:	signature:(void **a)
initR	libtomcrypt/src/headers/tomcrypt_prng.h	/^                 initR[17],      \/* saved register contents *\/ $/;"	m	language:C++	struct:sober128_prng	access:public
init_copy	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*init_copy)(void **dst, void *src);$/;"	m	language:C++	struct:__anon54	access:public
init_copy	libtomcrypt/src/math/gmp_desc.c	/^static int init_copy(void **a, void *b)$/;"	f	language:C	file:	signature:(void **a, void *b)
init_copy	libtomcrypt/src/math/ltm_desc.c	/^static int init_copy(void **a, void *b)$/;"	f	language:C	file:	signature:(void **a, void *b)
init_copy	libtomcrypt/src/math/tfm_desc.c	/^static int init_copy(void **a, void *b)$/;"	f	language:C	file:	signature:(void **a, void *b)
init_rng	sftp-server/entropy.h	/^void init_rng(void);$/;"	p	language:C++	signature:(void)
init_timer	libtomcrypt/testprof/tomcrypt_test.h	/^void init_timer(void);$/;"	p	language:C++	signature:(void)
init_timer	libtomcrypt/testprof/x86_prof.c	/^void init_timer(void)$/;"	f	language:C	signature:(void)
initconn	channel.h	/^	int initconn; \/* used for TCP forwarding, whether the channel has been$/;"	m	language:C++	struct:Channel	access:public
inithandler	channel.h	/^	int (*inithandler)(struct Channel*);$/;"	m	language:C++	struct:ChanType	access:public
initqueue	queue.c	/^void initqueue(struct Queue* queue) {$/;"	f	language:C	signature:(struct Queue* queue)
initqueue	queue.h	/^void initqueue(struct Queue* queue);$/;"	p	language:C++	signature:(struct Queue* queue)
initshells	compat.c	/^static char **initshells() {$/;"	f	language:C	file:
initshells	compat.c	/^static char **initshells();$/;"	p	language:C	file:
innetgr	sftp-server/defines.h	/^  int innetgr (const char *, const char *, const char *, const char *);$/;"	p	language:C++	signature:(const char *, const char *, const char *, const char *)
innetgr	sftp-server/openbsd-compat/bsd-misc.c	/^int innetgr(const char *netgroup, const char *host, $/;"	f	language:C	signature:(const char *netgroup, const char *host, const char *user, const char *domain)
innetgr	sftp-server/openbsd-compat/bsd-misc.h	/^int innetgr(const char *, const char *, const char *, const char *);$/;"	p	language:C++	signature:(const char *, const char *, const char *, const char *)
innetgr	sftp-server/openbsd-compat/bsd-nextstep.h	/^int innetgr(const char *, const char *, const char *, const char *);$/;"	p	language:C++	signature:(const char *, const char *, const char *, const char *)
input	sftp-server/channels.h	/^	Buffer  input;		\/* data read from socket, to be sent over$/;"	m	language:C++	struct:Channel	access:public
input_filter	sftp-server/channels.h	/^	channel_infilter_fn	*input_filter;$/;"	m	language:C++	struct:Channel	access:public
int pkcs_5_alg1(const unsigned char *password, 
int16_t	sftp-server/defines.h	/^typedef long  int16_t;$/;"	t	language:C++
int16_t	sftp-server/defines.h	/^typedef short int int16_t;$/;"	t	language:C++
int16_t	sftp-server/defines.h	/^typedef short int16_t;$/;"	t	language:C++
int32_t	sftp-server/defines.h	/^typedef int int32_t;$/;"	t	language:C++
int32_t	sftp-server/defines.h	/^typedef long  int32_t;$/;"	t	language:C++
int64_t	sftp-server/defines.h	/^typedef long int int64_t;$/;"	t	language:C++
int64_t	sftp-server/defines.h	/^typedef long long int int64_t;$/;"	t	language:C++
int8_t	sftp-server/defines.h	/^typedef char int8_t;$/;"	t	language:C++
interact_request_received	session.h	/^	int interact_request_received; \/* flag whether we've received an $/;"	m	language:C++	struct:clientsession	access:public
invmod	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*invmod)(void *, void *, void *);$/;"	m	language:C++	struct:__anon54	access:public
invmod	libtomcrypt/src/math/gmp_desc.c	/^static int invmod(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
invmod	libtomcrypt/src/math/ltm_desc.c	/^static int invmod(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
invmod	libtomcrypt/src/math/tfm_desc.c	/^static int invmod(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
iqueue	sftp-server/sftp-server.c	/^Buffer iqueue;$/;"	v	language:C
irix_setusercontext	sftp-server/openbsd-compat/port-irix.h	/^void irix_setusercontext(struct passwd *pw);$/;"	p	language:C++	signature:(struct passwd *pw)
is made up of two algorithms, Algorithm One and Algorithm Two.  Algorithm One is the older fairly limited algorithm which has been implemented
is_compress_recv	common-kex.c	/^int is_compress_recv() {$/;"	f	language:C
is_compress_recv	kex.h	/^int is_compress_recv();$/;"	p	language:C++	signature:()
is_compress_trans	common-kex.c	/^int is_compress_trans() {$/;"	f	language:C
is_compress_trans	kex.h	/^int is_compress_trans();$/;"	p	language:C++	signature:()
is_mersenne	libtommath/etc/mersenne.c	/^is_mersenne (long s, int *pp)$/;"	f	language:C	signature:(long s, int *pp)
is_point	libtomcrypt/src/pk/ecc/ecc_import.c	/^static int is_point(ecc_key *key)$/;"	f	language:C	file:	signature:(ecc_key *key)
is_subsystem	runopts.h	/^	int is_subsystem;$/;"	m	language:C++	struct:cli_runopts	access:public
isatty	sftp-server/channels.h	/^	int     isatty;		\/* rfd is a tty *\/$/;"	m	language:C++	struct:Channel	access:public
isbase64	keyimport.c	193;"	d	language:C	file:
isempty	queue.c	/^int isempty(struct Queue* queue) {$/;"	f	language:C	signature:(struct Queue* queue)
isempty	queue.h	/^int isempty(struct Queue* queue);$/;"	p	language:C++	signature:(struct Queue* queue)
isoctal	sftp-server/openbsd-compat/vis.c	41;"	d	language:C	file:
isprime	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*isprime)(void *a, int *b);$/;"	m	language:C++	struct:__anon54	access:public
isprime	libtomcrypt/src/math/gmp_desc.c	/^static int isprime(void *a, int *b)$/;"	f	language:C	file:	signature:(void *a, int *b)
isprime	libtomcrypt/src/math/ltm_desc.c	/^static int isprime(void *a, int *b)$/;"	f	language:C	file:	signature:(void *a, int *b)
isprime	libtomcrypt/src/math/tfm_desc.c	/^static int isprime(void *a, int *b)$/;"	f	language:C	file:	signature:(void *a, int *b)
isprime	libtommath/etc/mersenne.c	/^isprime (long k)$/;"	f	language:C	signature:(long k)
isserver	session.h	/^	unsigned char isserver;$/;"	m	language:C++	struct:sshsession	access:public
istate	sftp-server/channels.h	/^	u_int   istate;		\/* input from channel (state of receive half) *\/$/;"	m	language:C++	struct:Channel	access:public
isvisible	sftp-server/openbsd-compat/vis.c	42;"	d	language:C	file:
item	list.h	/^    void *item;$/;"	m	language:C++	struct:_m_list_elem	access:public
item	queue.h	/^	void* item;$/;"	m	language:C++	struct:Link	access:public
iv	keyimport.c	/^	char iv[32];$/;"	m	language:C	struct:openssh_key	file:	access:public
ivmode	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       ivmode,       \/* Which mode is the IV in? *\/$/;"	m	language:C++	struct:__anon51	access:public
justprintpub	dropbearkey.c	/^static void justprintpub(const char* filename) {$/;"	f	language:C	file:	signature:(const char* filename)
justprintpub	dropbearkey.c	/^static void justprintpub(const char* filename);$/;"	p	language:C	file:	signature:(const char* filename)
k	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *k;$/;"	m	language:C++	struct:__anon36	access:public
k	libtommath/bn_mp_prime_rabin_miller_trials.c	/^   int k, t;$/;"	m	language:C	struct:__anon20	file:	access:public
k	libtommath/pre_gen/mpi.c	/^   int k, t;$/;"	m	language:C	struct:__anon22	file:	access:public
kTHETA	libtomcrypt/src/ciphers/noekeon.c	41;"	d	language:C	file:
kasumi	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct kasumi_key   kasumi;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::kasumi_key	access:public
kasumi_desc	libtomcrypt/src/ciphers/kasumi.c	/^const struct ltc_cipher_descriptor kasumi_desc = {$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
kasumi_done	libtomcrypt/src/ciphers/kasumi.c	/^void kasumi_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
kasumi_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void kasumi_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
kasumi_ecb_decrypt	libtomcrypt/src/ciphers/kasumi.c	/^int kasumi_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
kasumi_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int kasumi_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
kasumi_ecb_encrypt	libtomcrypt/src/ciphers/kasumi.c	/^int kasumi_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
kasumi_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int kasumi_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
kasumi_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct kasumi_key {$/;"	s	language:C++
kasumi_key::KIi1	libtomcrypt/src/headers/tomcrypt_cipher.h	/^            KIi1[8], KIi2[8], KIi3[8];$/;"	m	language:C++	struct:kasumi_key	access:public
kasumi_key::KIi2	libtomcrypt/src/headers/tomcrypt_cipher.h	/^            KIi1[8], KIi2[8], KIi3[8];$/;"	m	language:C++	struct:kasumi_key	access:public
kasumi_key::KIi3	libtomcrypt/src/headers/tomcrypt_cipher.h	/^            KIi1[8], KIi2[8], KIi3[8];$/;"	m	language:C++	struct:kasumi_key	access:public
kasumi_key::KLi1	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 KLi1[8], KLi2[8],$/;"	m	language:C++	struct:kasumi_key	access:public
kasumi_key::KLi2	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 KLi1[8], KLi2[8],$/;"	m	language:C++	struct:kasumi_key	access:public
kasumi_key::KOi1	libtomcrypt/src/headers/tomcrypt_cipher.h	/^            KOi1[8], KOi2[8], KOi3[8],$/;"	m	language:C++	struct:kasumi_key	access:public
kasumi_key::KOi2	libtomcrypt/src/headers/tomcrypt_cipher.h	/^            KOi1[8], KOi2[8], KOi3[8],$/;"	m	language:C++	struct:kasumi_key	access:public
kasumi_key::KOi3	libtomcrypt/src/headers/tomcrypt_cipher.h	/^            KOi1[8], KOi2[8], KOi3[8],$/;"	m	language:C++	struct:kasumi_key	access:public
kasumi_keysize	libtomcrypt/src/ciphers/kasumi.c	/^int kasumi_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
kasumi_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int kasumi_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
kasumi_setup	libtomcrypt/src/ciphers/kasumi.c	/^int kasumi_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
kasumi_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int kasumi_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
kasumi_test	libtomcrypt/src/ciphers/kasumi.c	/^int kasumi_test(void)$/;"	f	language:C	signature:(void)
kasumi_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int kasumi_test(void);$/;"	p	language:C++	signature:(void)
katja_decrypt_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^int katja_decrypt_key(const unsigned char *in,       unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, const unsigned char *lparam, unsigned long lparamlen, int hash_idx, int *stat, katja_key *key)
katja_decrypt_key	libtomcrypt/src/pk/katja/katja_decrypt_key.c	/^int katja_decrypt_key(const unsigned char *in,       unsigned long  inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, const unsigned char *lparam, unsigned long lparamlen, int hash_idx, int *stat, katja_key *key)
katja_encrypt_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^int katja_encrypt_key(const unsigned char *in,     unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, const unsigned char *lparam, unsigned long lparamlen, prng_state *prng, int prng_idx, int hash_idx, katja_key *key)
katja_encrypt_key	libtomcrypt/src/pk/katja/katja_encrypt_key.c	/^int katja_encrypt_key(const unsigned char *in,     unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, const unsigned char *lparam, unsigned long lparamlen, prng_state *prng, int prng_idx, int hash_idx, katja_key *key)
katja_export	libtomcrypt/src/headers/tomcrypt_pk.h	/^int katja_export(unsigned char *out, unsigned long *outlen, int type, katja_key *key);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long *outlen, int type, katja_key *key)
katja_export	libtomcrypt/src/pk/katja/katja_export.c	/^int katja_export(unsigned char *out, unsigned long *outlen, int type, katja_key *key)$/;"	f	language:C	signature:(unsigned char *out, unsigned long *outlen, int type, katja_key *key)
katja_exptmod	libtomcrypt/src/headers/tomcrypt_pk.h	/^int katja_exptmod(const unsigned char *in,   unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, int which, katja_key *key)
katja_exptmod	libtomcrypt/src/pk/katja/katja_exptmod.c	/^int katja_exptmod(const unsigned char *in,   unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, int which, katja_key *key)
katja_free	libtomcrypt/src/headers/tomcrypt_pk.h	/^void katja_free(katja_key *key);$/;"	p	language:C++	signature:(katja_key *key)
katja_free	libtomcrypt/src/pk/katja/katja_free.c	/^void katja_free(katja_key *key)$/;"	f	language:C	signature:(katja_key *key)
katja_import	libtomcrypt/src/headers/tomcrypt_pk.h	/^int katja_import(const unsigned char *in, unsigned long inlen, katja_key *key);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, katja_key *key)
katja_import	libtomcrypt/src/pk/katja/katja_import.c	/^int katja_import(const unsigned char *in, unsigned long inlen, katja_key *key)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, katja_key *key)
katja_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^} katja_key;$/;"	t	language:C++	typeref:struct:KAT_key
katja_make_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^int katja_make_key(prng_state *prng, int wprng, int size, katja_key *key);$/;"	p	language:C++	signature:(prng_state *prng, int wprng, int size, katja_key *key)
katja_make_key	libtomcrypt/src/pk/katja/katja_make_key.c	/^int katja_make_key(prng_state *prng, int wprng, int size, katja_key *key)$/;"	f	language:C	signature:(prng_state *prng, int wprng, int size, katja_key *key)
katja_test	libtomcrypt/testprof/katja_test.c	/^int katja_test(void)$/;"	f	language:C	signature:(void)
katja_test	libtomcrypt/testprof/tomcrypt_test.h	/^int katja_test(void);$/;"	p	language:C++	signature:(void)
keepalive_secs	runopts.h	/^	time_t keepalive_secs;$/;"	m	language:C++	struct:runopts	access:public
kex_state	session.h	/^	cli_kex_state kex_state; \/* Used for progressing KEX *\/$/;"	m	language:C++	struct:clientsession	access:public
kexdh_comb_key	common-kex.c	/^void kexdh_comb_key(mp_int *dh_pub_us, mp_int *dh_priv, mp_int *dh_pub_them,$/;"	f	language:C	signature:(mp_int *dh_pub_us, mp_int *dh_priv, mp_int *dh_pub_them, sign_key *hostkey)
kexdh_comb_key	kex.h	/^void kexdh_comb_key(mp_int *dh_pub_us, mp_int *dh_priv, mp_int *dh_pub_them,$/;"	p	language:C++	signature:(mp_int *dh_pub_us, mp_int *dh_priv, mp_int *dh_pub_them, sign_key *hostkey)
kexfirstinitialise	common-kex.c	/^void kexfirstinitialise() {$/;"	f	language:C
kexfirstinitialise	kex.h	/^void kexfirstinitialise();$/;"	p	language:C++	signature:()
kexhashbuf	session.h	/^	buffer* kexhashbuf; \/* session hash buffer calculated from various packets*\/$/;"	m	language:C++	struct:sshsession	access:public
kexinitialise	common-kex.c	/^static void kexinitialise() {$/;"	f	language:C	file:
kexinitialise	common-kex.c	/^static void kexinitialise();$/;"	p	language:C	file:
kexstate	session.h	/^	struct KEXState kexstate;$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::KEXState	access:public
key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    symmetric_key     key;$/;"	m	language:C++	struct:__anon45	access:public
key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    unsigned char key[10];$/;"	m	language:C++	struct:skipjack_key	access:public
key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	language:C++	struct:__anon40	access:public
key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	language:C++	struct:__anon41	access:public
key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	language:C++	struct:__anon42	access:public
key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	language:C++	struct:__anon43	access:public
key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	language:C++	struct:__anon44	access:public
key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   symmetric_key       key;$/;"	m	language:C++	struct:__anon46	access:public
key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct safer_key { safer_key_t key; };$/;"	m	language:C++	struct:safer_key	access:public
key	libtomcrypt/src/headers/tomcrypt_mac.h	/^     unsigned char  *key;$/;"	m	language:C++	struct:Hmac_state	access:public
key	libtomcrypt/src/headers/tomcrypt_mac.h	/^   symmetric_key     key;                     \/* scheduled key for cipher *\/$/;"	m	language:C++	struct:__anon48	access:public
key	libtomcrypt/src/headers/tomcrypt_mac.h	/^   symmetric_key     key;                     \/* scheduled key for cipher *\/$/;"	m	language:C++	struct:__anon50	access:public
key	libtomcrypt/src/headers/tomcrypt_mac.h	/^   symmetric_key   key;$/;"	m	language:C++	struct:__anon47	access:public
key	libtomcrypt/src/headers/tomcrypt_mac.h	/^   symmetric_key key;$/;"	m	language:C++	struct:__anon52	access:public
key	libtomcrypt/src/headers/tomcrypt_mac.h	/^   symmetric_key key;$/;"	m	language:C++	struct:__anon53	access:public
keyBits	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int keyBits; $/;"	m	language:C++	struct:anubis_key	access:public
key_context	session.h	/^struct key_context {$/;"	s	language:C++
key_context::algo_hostkey	session.h	/^	char algo_hostkey;$/;"	m	language:C++	struct:key_context	access:public
key_context::algo_kex	session.h	/^	char algo_kex;$/;"	m	language:C++	struct:key_context	access:public
key_context::allow_compress	session.h	/^	int allow_compress; \/* whether compression has started (useful in $/;"	m	language:C++	struct:key_context	access:public
key_context::recv	session.h	/^	struct key_context_directional recv;$/;"	m	language:C++	struct:key_context	typeref:struct:key_context::key_context_directional	access:public
key_context::trans	session.h	/^	struct key_context_directional trans;$/;"	m	language:C++	struct:key_context	typeref:struct:key_context::key_context_directional	access:public
key_context_directional	session.h	/^struct key_context_directional {$/;"	s	language:C++
key_context_directional::__anon12::cbc	session.h	/^		symmetric_CBC cbc;$/;"	m	language:C++	union:key_context_directional::__anon12	access:public
key_context_directional::__anon12::ctr	session.h	/^		symmetric_CTR ctr;$/;"	m	language:C++	union:key_context_directional::__anon12	access:public
key_context_directional::algo_comp	session.h	/^	char algo_comp; \/* compression *\/$/;"	m	language:C++	struct:key_context_directional	access:public
key_context_directional::algo_crypt	session.h	/^	const struct dropbear_cipher *algo_crypt; \/* NULL for none *\/$/;"	m	language:C++	struct:key_context_directional	typeref:struct:key_context_directional::dropbear_cipher	access:public
key_context_directional::algo_mac	session.h	/^	const struct dropbear_hash *algo_mac; \/* NULL for none *\/$/;"	m	language:C++	struct:key_context_directional	typeref:struct:key_context_directional::dropbear_hash	access:public
key_context_directional::cipher_state	session.h	/^	} cipher_state;$/;"	m	language:C++	struct:key_context_directional	typeref:union:key_context_directional::__anon12	access:public
key_context_directional::crypt_mode	session.h	/^	const struct dropbear_cipher_mode *crypt_mode;$/;"	m	language:C++	struct:key_context_directional	typeref:struct:key_context_directional::dropbear_cipher_mode	access:public
key_context_directional::hash_index	session.h	/^	int hash_index; \/* lookup for libtomcrypt *\/$/;"	m	language:C++	struct:key_context_directional	access:public
key_context_directional::mackey	session.h	/^	unsigned char mackey[MAX_MAC_KEY];$/;"	m	language:C++	struct:key_context_directional	access:public
key_context_directional::zstream	session.h	/^	z_streamp zstream;$/;"	m	language:C++	struct:key_context_directional	access:public
key_schedule	libtomcrypt/src/hashes/tiger.c	/^static void key_schedule(ulong64 *x) $/;"	f	language:C	file:	signature:(ulong64 *x)
keyblob	keyimport.c	/^	unsigned char *keyblob;$/;"	m	language:C	struct:openssh_key	file:	access:public
keyblob_len	keyimport.c	/^	unsigned int keyblob_len, keyblob_size;$/;"	m	language:C	struct:openssh_key	file:	access:public
keyblob_size	keyimport.c	/^	unsigned int keyblob_len, keyblob_size;$/;"	m	language:C	struct:openssh_key	file:	access:public
keylen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 K[32], keylen;$/;"	m	language:C++	struct:cast5_key	access:public
keylen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                 keylen,$/;"	m	language:C++	struct:__anon53	access:public
keys	session.h	/^	struct key_context *keys;$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::key_context	access:public
keysize	algo.h	/^	unsigned long keysize;$/;"	m	language:C++	struct:dropbear_cipher	access:public
keysize	algo.h	/^	unsigned long keysize;$/;"	m	language:C++	struct:dropbear_hash	access:public
keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int  (*keysize)(int *keysize);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
keystep	libtomcrypt/src/ciphers/skipjack.c	/^static const int keystep[] =  { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 };$/;"	v	language:C	file:
khazad	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct khazad_key   khazad;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::khazad_key	access:public
khazad_crypt	libtomcrypt/src/ciphers/khazad.c	/^static void khazad_crypt(const unsigned char *plaintext, unsigned char *ciphertext,$/;"	f	language:C	file:	signature:(const unsigned char *plaintext, unsigned char *ciphertext, const ulong64 *roundKey)
khazad_desc	libtomcrypt/src/ciphers/khazad.c	/^const struct ltc_cipher_descriptor khazad_desc = {$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
khazad_done	libtomcrypt/src/ciphers/khazad.c	/^void khazad_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
khazad_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void khazad_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
khazad_ecb_decrypt	libtomcrypt/src/ciphers/khazad.c	/^int khazad_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
khazad_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int khazad_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
khazad_ecb_encrypt	libtomcrypt/src/ciphers/khazad.c	/^int khazad_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
khazad_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int khazad_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
khazad_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct khazad_key {$/;"	s	language:C++
khazad_key::roundKeyDec	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong64 roundKeyDec[8 + 1]; $/;"	m	language:C++	struct:khazad_key	access:public
khazad_key::roundKeyEnc	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong64 roundKeyEnc[8 + 1]; $/;"	m	language:C++	struct:khazad_key	access:public
khazad_keysize	libtomcrypt/src/ciphers/khazad.c	/^int khazad_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
khazad_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int khazad_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
khazad_setup	libtomcrypt/src/ciphers/khazad.c	/^int khazad_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
khazad_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int khazad_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
khazad_test	libtomcrypt/src/ciphers/khazad.c	/^int khazad_test(void)$/;"	f	language:C	signature:(void)
khazad_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int khazad_test(void);$/;"	p	language:C++	signature:(void)
killchild	scp.c	/^killchild(int signo)$/;"	f	language:C	file:	signature:(int signo)
konst	libtomcrypt/src/headers/tomcrypt_prng.h	/^                 konst,          \/* key dependent constant *\/$/;"	m	language:C++	struct:sober128_prng	access:public
krb5_get_err_text	sftp-server/defines.h	576;"	d	language:C++
kseed	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct kseed_key    kseed;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::kseed_key	access:public
kseed_desc	libtomcrypt/src/ciphers/kseed.c	/^const struct ltc_cipher_descriptor kseed_desc = {$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
kseed_done	libtomcrypt/src/ciphers/kseed.c	/^void kseed_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
kseed_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void kseed_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
kseed_ecb_decrypt	libtomcrypt/src/ciphers/kseed.c	/^int kseed_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
kseed_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int kseed_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
kseed_ecb_encrypt	libtomcrypt/src/ciphers/kseed.c	/^int kseed_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
kseed_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int kseed_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
kseed_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct kseed_key {$/;"	s	language:C++
kseed_key::K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 K[32], dK[32];$/;"	m	language:C++	struct:kseed_key	access:public
kseed_key::dK	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 K[32], dK[32];$/;"	m	language:C++	struct:kseed_key	access:public
kseed_keysize	libtomcrypt/src/ciphers/kseed.c	/^int kseed_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
kseed_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int kseed_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
kseed_setup	libtomcrypt/src/ciphers/kseed.c	/^int kseed_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
kseed_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int kseed_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
kseed_test	libtomcrypt/src/ciphers/kseed.c	/^int kseed_test(void)$/;"	f	language:C	signature:(void)
kseed_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int kseed_test(void);$/;"	p	language:C++	signature:(void)
last	list.h	/^    m_list_elem *last;$/;"	m	language:C++	struct:_m_list	access:public
last_packet_time	session.h	/^	time_t last_packet_time; \/* time of the last packet transmission or receive, for$/;"	m	language:C++	struct:sshsession	access:public
last_trx_packet_time	session.h	/^	time_t last_trx_packet_time; \/* time of the last packet transmission, for$/;"	m	language:C++	struct:sshsession	access:public
last_update	progressmeter.c	/^static time_t last_update;	\/* last progress update *\/$/;"	v	language:C	file:
lastauthtype	session.h	/^	int lastauthtype; \/* either AUTH_TYPE_PUBKEY or AUTH_TYPE_PASSWORD,$/;"	m	language:C++	struct:clientsession	access:public
lastexit	session.h	/^	struct exitinfo lastexit;$/;"	m	language:C++	struct:serversession	typeref:struct:serversession::exitinfo	access:public
lastkextime	kex.h	/^	time_t lastkextime; \/* time of the last kex *\/$/;"	m	language:C++	struct:KEXState	access:public
lastlog_construct	loginrec.c	/^lastlog_construct(struct logininfo *li, struct lastlog *last)$/;"	f	language:C	file:	signature:(struct logininfo *li, struct lastlog *last)
lastlog_filetype	loginrec.c	/^lastlog_filetype(char *filename)$/;"	f	language:C	file:	signature:(char *filename)
lastlog_openseek	loginrec.c	/^lastlog_openseek(struct logininfo *li, int *fd, int filemode)$/;"	f	language:C	file:	signature:(struct logininfo *li, int *fd, int filemode)
lastlog_perform_login	loginrec.c	/^lastlog_perform_login(struct logininfo *li)$/;"	f	language:C	file:	signature:(struct logininfo *li)
lastlog_write_entry	loginrec.c	/^int lastlog_write_entry(struct logininfo *li);$/;"	p	language:C	file:	signature:(struct logininfo *li)
lastlog_write_entry	loginrec.c	/^lastlog_write_entry(struct logininfo *li)$/;"	f	language:C	signature:(struct logininfo *li)
lastpacket	session.h	/^	unsigned char lastpacket; \/* What the last received packet type was *\/$/;"	m	language:C++	struct:sshsession	access:public
lastprivkey	session.h	/^	sign_key *lastprivkey;$/;"	m	language:C++	struct:clientsession	access:public
lbit	libtommath/demo/demo.c	/^int lbit(void)$/;"	f	language:C	signature:(void)
lbit	libtommath/demo/timing.c	/^int lbit(void)$/;"	f	language:C	signature:(void)
lcm	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*lcm)(void *a, void *b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
lcm	libtomcrypt/src/math/gmp_desc.c	/^static int lcm(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
lcm	libtomcrypt/src/math/ltm_desc.c	/^static int lcm(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
lcm	libtomcrypt/src/math/tfm_desc.c	/^static int lcm(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
len	buffer.h	/^	unsigned int len; \/* the used size *\/$/;"	m	language:C++	struct:buf	access:public
len	libtomcrypt/src/encauth/ocb/ocb_init.c	/^    int           len;$/;"	m	language:C	struct:__anon27	file:	access:public
len	libtomcrypt/src/mac/pmac/pmac_init.c	/^    int           len;$/;"	m	language:C	struct:__anon26	file:	access:public
length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64  length, state[8];$/;"	m	language:C++	struct:sha512_state	access:public
length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length, state[8];$/;"	m	language:C++	struct:whirlpool_state	access:public
length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:chc_state	access:public
length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:md4_state	access:public
length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:md5_state	access:public
length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:rmd128_state	access:public
length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:rmd160_state	access:public
length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:rmd256_state	access:public
length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:rmd320_state	access:public
length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:sha1_state	access:public
length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:sha256_state	access:public
length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 state[3], length;$/;"	m	language:C++	struct:tiger_state	access:public
lfsr	libtommath/demo/demo.c	/^unsigned long lfsr = 0xAAAAAAAAUL;$/;"	v	language:C
lfsr	libtommath/demo/timing.c	/^unsigned long lfsr = 0xAAAAAAAAUL;$/;"	v	language:C
limit_rate	scp.c	/^off_t limit_rate = 0;$/;"	v	language:C
line	loginrec.h	/^	char       line[LINFO_LINESIZE];         \/* tty\/pty name *\/$/;"	m	language:C++	struct:logininfo	access:public
line_abbrevname	loginrec.c	/^line_abbrevname(char *dst, const char *src, size_t dstsize)$/;"	f	language:C	signature:(char *dst, const char *src, size_t dstsize)
line_abbrevname	loginrec.h	/^char *line_abbrevname(char *dst, const char *src, size_t dstsize);$/;"	p	language:C++	signature:(char *dst, const char *src, size_t dstsize)
line_fullname	loginrec.c	/^line_fullname(char *dst, const char *src, size_t dstsize)$/;"	f	language:C	signature:(char *dst, const char *src, size_t dstsize)
line_fullname	loginrec.h	/^char *line_fullname(char *dst, const char *src, size_t dstsize);$/;"	p	language:C++	signature:(char *dst, const char *src, size_t dstsize)
line_stripname	loginrec.c	/^line_stripname(char *dst, const char *src, size_t dstsize)$/;"	f	language:C	signature:(char *dst, const char *src, size_t dstsize)
line_stripname	loginrec.h	/^char *line_stripname(char *dst, const char *src, size_t dstsize);$/;"	p	language:C++	signature:(char *dst, const char *src, size_t dstsize)
link	queue.h	/^	struct Link* link;$/;"	m	language:C++	struct:Link	typeref:struct:Link::Link	access:public
list	libtomcrypt/testprof/tomcrypt_test.h	/^extern struct list {$/;"	s	language:C++
list	list.h	/^    struct _m_list *list;$/;"	m	language:C++	struct:_m_list_elem	typeref:struct:_m_list_elem::_m_list	access:public
list	scpmisc.h	/^	char    **list;$/;"	m	language:C++	struct:arglist	access:public
list	sftp-server/misc.h	/^	char    **list;$/;"	m	language:C++	struct:arglist	access:public
list::avg	libtomcrypt/testprof/tomcrypt_test.h	/^    unsigned long spd1, spd2, avg;$/;"	m	language:C++	struct:list	access:public
list::id	libtomcrypt/testprof/tomcrypt_test.h	/^    int id;$/;"	m	language:C++	struct:list	access:public
list::spd1	libtomcrypt/testprof/tomcrypt_test.h	/^    unsigned long spd1, spd2, avg;$/;"	m	language:C++	struct:list	access:public
list::spd2	libtomcrypt/testprof/tomcrypt_test.h	/^    unsigned long spd1, spd2, avg;$/;"	m	language:C++	struct:list	access:public
list_append	list.c	/^void list_append(m_list *list, void *item) {$/;"	f	language:C	signature:(m_list *list, void *item)
list_append	list.h	/^void list_append(m_list *list, void *item);$/;"	p	language:C++	signature:(m_list *list, void *item)
list_new	list.c	/^m_list * list_new() {$/;"	f	language:C
list_new	list.h	/^m_list * list_new();$/;"	p	language:C++	signature:()
list_remove	list.c	/^void * list_remove(m_list_elem *elem) {$/;"	f	language:C	signature:(m_list_elem *elem)
list_remove	list.h	/^void * list_remove(m_list_elem *elem);$/;"	p	language:C++	signature:(m_list_elem *elem)
listen_fwd_all	runopts.h	/^	int listen_fwd_all;$/;"	m	language:C++	struct:runopts	access:public
listen_tcpfwd	tcp-accept.c	/^int listen_tcpfwd(struct TCPListener* tcpinfo) {$/;"	f	language:C	signature:(struct TCPListener* tcpinfo)
listen_tcpfwd	tcpfwd.h	/^int listen_tcpfwd(struct TCPListener* tcpinfo);$/;"	p	language:C++	signature:(struct TCPListener* tcpinfo)
listenaddr	tcpfwd.h	/^	const unsigned char* listenaddr;$/;"	m	language:C++	struct:TCPFwdEntry	access:public
listenaddr	tcpfwd.h	/^	unsigned char *listenaddr;$/;"	m	language:C++	struct:TCPListener	access:public
listeners	session.h	/^	struct Listener ** listeners;$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::Listener	access:public
listeners_initialise	listener.c	/^void listeners_initialise() {$/;"	f	language:C
listeners_initialise	listener.h	/^void listeners_initialise();$/;"	p	language:C++	signature:()
listening_port	sftp-server/channels.h	/^	int     listening_port;	\/* port being listened for forwards *\/$/;"	m	language:C++	struct:Channel	access:public
listenport	tcpfwd.h	/^	unsigned int listenport;$/;"	m	language:C++	struct:TCPFwdEntry	access:public
listenport	tcpfwd.h	/^	unsigned int listenport;$/;"	m	language:C++	struct:TCPListener	access:public
listensize	session.h	/^	unsigned int listensize;$/;"	m	language:C++	struct:sshsession	access:public
listensockets	svr-main.c	/^static size_t listensockets(int *sock, size_t sockcount, int *maxfd) {$/;"	f	language:C	file:	signature:(int *sock, size_t sockcount, int *maxfd)
listensockets	svr-main.c	/^static size_t listensockets(int *sock, size_t sockcount, int *maxfd);$/;"	p	language:C	file:	signature:(int *sock, size_t sockcount, int *maxfd)
lnz	libtommath/bn_mp_cnt_lsb.c	/^static const int lnz[16] = { $/;"	v	language:C	file:
lnz	libtommath/pre_gen/mpi.c	/^static const int lnz[16] = { $/;"	v	language:C	file:
load_dh_p	common-kex.c	/^static void load_dh_p(mp_int * dh_p)$/;"	f	language:C	file:	signature:(mp_int * dh_p)
load_openssh_key	keyimport.c	/^static struct openssh_key *load_openssh_key(const char *filename)$/;"	f	language:C	file:	signature:(const char *filename)
load_tab	libtommath/etc/pprime.c	/^void load_tab(void)$/;"	f	language:C	signature:(void)
loadhostkeys	runopts.h	/^void loadhostkeys();$/;"	p	language:C++	signature:()
loadhostkeys	svr-runopts.c	/^void loadhostkeys() {$/;"	f	language:C
loadidentityfile	cli-runopts.c	/^static void loadidentityfile(const char* filename) {$/;"	f	language:C	file:	signature:(const char* filename)
loadidentityfile	cli-runopts.c	/^static void loadidentityfile(const char* filename);$/;"	p	language:C	file:	signature:(const char* filename)
local_consumed	sftp-server/channels.h	/^	u_int	local_consumed;$/;"	m	language:C++	struct:Channel	access:public
local_maxpacket	sftp-server/channels.h	/^	u_int	local_maxpacket;$/;"	m	language:C++	struct:Channel	access:public
local_window	sftp-server/channels.h	/^	u_int	local_window;$/;"	m	language:C++	struct:Channel	access:public
local_window_max	sftp-server/channels.h	/^	u_int	local_window_max;$/;"	m	language:C++	struct:Channel	access:public
localfwds	runopts.h	/^	m_list * localfwds;$/;"	m	language:C++	struct:cli_runopts	access:public
log_facilities	sftp-server/log.c	/^} log_facilities[] = {$/;"	v	language:C	typeref:struct:__anon4	file:
log_facility	sftp-server/log.c	/^static int log_facility = LOG_AUTH;$/;"	v	language:C	file:
log_facility_name	sftp-server/log.c	/^log_facility_name(SyslogFacility facility)$/;"	f	language:C	signature:(SyslogFacility facility)
log_facility_name	sftp-server/log.h	/^const char * 	log_facility_name(SyslogFacility);$/;"	p	language:C++	signature:(SyslogFacility)
log_facility_number	sftp-server/log.c	/^log_facility_number(char *name)$/;"	f	language:C	signature:(char *name)
log_facility_number	sftp-server/log.h	/^SyslogFacility	log_facility_number(char *);$/;"	p	language:C++	signature:(char *)
log_init	sftp-server/log.c	/^log_init(char *av0, LogLevel level, SyslogFacility facility, int on_stderr)$/;"	f	language:C	signature:(char *av0, LogLevel level, SyslogFacility facility, int on_stderr)
log_init	sftp-server/log.h	/^void     log_init(char *, LogLevel, SyslogFacility, int);$/;"	p	language:C++	signature:(char *, LogLevel, SyslogFacility, int)
log_level	sftp-server/log.c	/^static LogLevel log_level = SYSLOG_LEVEL_INFO;$/;"	v	language:C	file:
log_level	sftp-server/sftp-server.c	/^LogLevel log_level = SYSLOG_LEVEL_ERROR;$/;"	v	language:C
log_level_name	sftp-server/log.c	/^log_level_name(LogLevel level)$/;"	f	language:C	signature:(LogLevel level)
log_level_name	sftp-server/log.h	/^const char *	log_level_name(LogLevel);$/;"	p	language:C++	signature:(LogLevel)
log_level_number	sftp-server/log.c	/^log_level_number(char *name)$/;"	f	language:C	signature:(char *name)
log_level_number	sftp-server/log.h	/^LogLevel	log_level_number(char *);$/;"	p	language:C++	signature:(char *)
log_levels	sftp-server/log.c	/^} log_levels[] =$/;"	v	language:C	typeref:struct:__anon5	file:
log_on_stderr	sftp-server/log.c	/^static int log_on_stderr = 1;$/;"	v	language:C	file:
login_alloc_entry	loginrec.c	/^logininfo *login_alloc_entry(int pid, const char *username,$/;"	f	language:C	signature:(int pid, const char *username, const char *hostname, const char *line)
login_alloc_entry	loginrec.h	/^struct logininfo *login_alloc_entry(int pid, const char *username,$/;"	p	language:C++	signature:(int pid, const char *username, const char *hostname, const char *line)
login_free_entry	loginrec.c	/^login_free_entry(struct logininfo *li)$/;"	f	language:C	signature:(struct logininfo *li)
login_free_entry	loginrec.h	/^void login_free_entry(struct logininfo *li);$/;"	p	language:C++	signature:(struct logininfo *li)
login_init_entry	loginrec.c	/^login_init_entry(struct logininfo *li, int pid, const char *username,$/;"	f	language:C	signature:(struct logininfo *li, int pid, const char *username, const char *hostname, const char *line)
login_init_entry	loginrec.h	/^int login_init_entry(struct logininfo *li, int pid, const char *username,$/;"	p	language:C++	signature:(struct logininfo *li, int pid, const char *username, const char *hostname, const char *line)
login_log_entry	loginrec.h	/^int login_log_entry(struct logininfo *li);$/;"	p	language:C++	signature:(struct logininfo *li)
login_login	loginrec.c	/^login_login (struct logininfo *li)$/;"	f	language:C	signature:(struct logininfo *li)
login_login	loginrec.h	/^int login_login (struct logininfo *li);$/;"	p	language:C++	signature:(struct logininfo *li)
login_logout	loginrec.c	/^login_logout(struct logininfo *li)$/;"	f	language:C	signature:(struct logininfo *li)
login_logout	loginrec.h	/^int login_logout(struct logininfo *li);$/;"	p	language:C++	signature:(struct logininfo *li)
login_netinfo	loginrec.h	/^union login_netinfo {$/;"	u	language:C++
login_netinfo::sa	loginrec.h	/^	struct sockaddr sa;$/;"	m	language:C++	union:login_netinfo	typeref:struct:login_netinfo::sockaddr	access:public
login_netinfo::sa_in	loginrec.h	/^	struct sockaddr_in sa_in;$/;"	m	language:C++	union:login_netinfo	typeref:struct:login_netinfo::sockaddr_in	access:public
login_netinfo::sa_storage	loginrec.h	/^	struct sockaddr_storage sa_storage;$/;"	m	language:C++	union:login_netinfo	typeref:struct:login_netinfo::sockaddr_storage	access:public
login_set_addr	loginrec.c	/^login_set_addr(struct logininfo *li, const struct sockaddr *sa,$/;"	f	language:C	signature:(struct logininfo *li, const struct sockaddr *sa, const unsigned int sa_size)
login_set_addr	loginrec.h	/^void login_set_addr(struct logininfo *li, const struct sockaddr *sa,$/;"	p	language:C++	signature:(struct logininfo *li, const struct sockaddr *sa, const unsigned int sa_size)
login_set_current_time	loginrec.c	/^login_set_current_time(struct logininfo *li)$/;"	f	language:C	signature:(struct logininfo *li)
login_set_current_time	loginrec.h	/^void login_set_current_time(struct logininfo *li);$/;"	p	language:C++	signature:(struct logininfo *li)
login_utmp_only	loginrec.c	/^login_utmp_only(struct logininfo *li)$/;"	f	language:C	signature:(struct logininfo *li)
login_utmp_only	loginrec.h	/^int login_utmp_only(struct logininfo *li);$/;"	p	language:C++	signature:(struct logininfo *li)
login_write	loginrec.c	/^login_write (struct logininfo *li)$/;"	f	language:C	signature:(struct logininfo *li)
login_write	loginrec.h	/^int login_write (struct logininfo *li);$/;"	p	language:C++	signature:(struct logininfo *li)
loginfailed	sftp-server/openbsd-compat/port-aix.h	/^int loginfailed(char *, char *, char *);$/;"	p	language:C++	signature:(char *, char *, char *)
logininfo	loginrec.h	/^struct logininfo {$/;"	s	language:C++
logininfo::exit	loginrec.h	/^	int        exit;                        \/* process exit status *\/$/;"	m	language:C++	struct:logininfo	access:public
logininfo::hostaddr	loginrec.h	/^	union login_netinfo hostaddr;       \/* caller's host address(es) *\/$/;"	m	language:C++	struct:logininfo	typeref:union:logininfo::login_netinfo	access:public
logininfo::hostname	loginrec.h	/^	char       hostname[LINFO_HOSTSIZE];     \/* remote hostname *\/$/;"	m	language:C++	struct:logininfo	access:public
logininfo::line	loginrec.h	/^	char       line[LINFO_LINESIZE];         \/* tty\/pty name *\/$/;"	m	language:C++	struct:logininfo	access:public
logininfo::pid	loginrec.h	/^	int        pid;                          \/* PID of login process *\/$/;"	m	language:C++	struct:logininfo	access:public
logininfo::progname	loginrec.h	/^	char       progname[LINFO_PROGSIZE];     \/* name of program (for PAM) *\/$/;"	m	language:C++	struct:logininfo	access:public
logininfo::progname_null	loginrec.h	/^	int        progname_null;$/;"	m	language:C++	struct:logininfo	access:public
logininfo::termination	loginrec.h	/^	int        termination;                 \/* process termination status *\/$/;"	m	language:C++	struct:logininfo	access:public
logininfo::tv_sec	loginrec.h	/^	unsigned int tv_sec;$/;"	m	language:C++	struct:logininfo	access:public
logininfo::tv_usec	loginrec.h	/^	unsigned int tv_usec;$/;"	m	language:C++	struct:logininfo	access:public
logininfo::type	loginrec.h	/^	short int  type;                         \/* type of login (LTYPE_*) *\/$/;"	m	language:C++	struct:logininfo	access:public
logininfo::uid	loginrec.h	/^	int        uid;                          \/* UID of this user *\/$/;"	m	language:C++	struct:logininfo	access:public
logininfo::username	loginrec.h	/^	char       username[LINFO_NAMESIZE];     \/* login username *\/$/;"	m	language:C++	struct:logininfo	access:public
loginrestrictions	sftp-server/openbsd-compat/port-aix.h	/^int loginrestrictions(char *, int, char *, char **);$/;"	p	language:C++	signature:(char *, int, char *, char **)
loginsuccess	sftp-server/openbsd-compat/port-aix.h	/^int loginsuccess(char *, char *, char *, char **);$/;"	p	language:C++	signature:(char *, char *, char *, char **)
logit	sftp-server/log.c	/^logit(const char *fmt,...)$/;"	f	language:C	signature:(const char *fmt,...)
logit	sftp-server/log.h	/^void     logit(const char *, ...) __attribute__((format(printf, 1, 2)));$/;"	p	language:C++	signature:(const char *, ...)
long64	libtommath/tommath.h	/^      typedef signed __int64     long64;$/;"	t	language:C++
long64	libtommath/tommath.h	/^      typedef signed long long   long64;$/;"	t	language:C++
long64	libtommath/tommath.h	/^   typedef signed long long   long64;$/;"	t	language:C++
long_name	sftp-server/sftp-server.c	/^	char *long_name;$/;"	m	language:C	struct:Stat	file:	access:public
longname	sftp-server/sftp-client.h	/^	char *longname;$/;"	m	language:C++	struct:SFTP_DIRENT	access:public
lostconn	scp.c	/^lostconn(int signo)$/;"	f	language:C	signature:(int signo)
lostconn	scp.c	/^void lostconn(int);$/;"	p	language:C	file:	signature:(int)
lru_count	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^   int        lru_count;      \/* amount of times this entry has been used *\/$/;"	m	language:C	struct:__anon30	file:	access:public
lrw_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int lrw_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_LRW *lrw);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_LRW *lrw)
lrw_decrypt	libtomcrypt/src/modes/lrw/lrw_decrypt.c	/^int lrw_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_LRW *lrw)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_LRW *lrw)
lrw_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int lrw_done(symmetric_LRW *lrw);$/;"	p	language:C++	signature:(symmetric_LRW *lrw)
lrw_done	libtomcrypt/src/modes/lrw/lrw_done.c	/^int lrw_done(symmetric_LRW *lrw) $/;"	f	language:C	signature:(symmetric_LRW *lrw)
lrw_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int lrw_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_LRW *lrw);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_LRW *lrw)
lrw_encrypt	libtomcrypt/src/modes/lrw/lrw_encrypt.c	/^int lrw_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_LRW *lrw)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_LRW *lrw)
lrw_gen	libtomcrypt/demos/tv_gen.c	/^void lrw_gen(void)$/;"	f	language:C	signature:(void)
lrw_getiv	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int lrw_getiv(unsigned char *IV, unsigned long *len, symmetric_LRW *lrw);$/;"	p	language:C++	signature:(unsigned char *IV, unsigned long *len, symmetric_LRW *lrw)
lrw_getiv	libtomcrypt/src/modes/lrw/lrw_getiv.c	/^int lrw_getiv(unsigned char *IV, unsigned long *len, symmetric_LRW *lrw)$/;"	f	language:C	signature:(unsigned char *IV, unsigned long *len, symmetric_LRW *lrw)
lrw_process	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int lrw_process(const unsigned char *pt, unsigned char *ct, unsigned long len, int mode, symmetric_LRW *lrw);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, int mode, symmetric_LRW *lrw)
lrw_process	libtomcrypt/src/modes/lrw/lrw_process.c	/^int lrw_process(const unsigned char *pt, unsigned char *ct, unsigned long len, int mode, symmetric_LRW *lrw)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, int mode, symmetric_LRW *lrw)
lrw_setiv	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int lrw_setiv(const unsigned char *IV, unsigned long len, symmetric_LRW *lrw);$/;"	p	language:C++	signature:(const unsigned char *IV, unsigned long len, symmetric_LRW *lrw)
lrw_setiv	libtomcrypt/src/modes/lrw/lrw_setiv.c	/^int lrw_setiv(const unsigned char *IV, unsigned long len, symmetric_LRW *lrw)$/;"	f	language:C	signature:(const unsigned char *IV, unsigned long len, symmetric_LRW *lrw)
lrw_start	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int lrw_start(               int   cipher,$/;"	p	language:C++	signature:( int cipher, const unsigned char *IV, const unsigned char *key, int keylen, const unsigned char *tweak, int num_rounds, symmetric_LRW *lrw)
lrw_start	libtomcrypt/src/modes/lrw/lrw_start.c	/^int lrw_start(               int   cipher,$/;"	f	language:C	signature:( int cipher, const unsigned char *IV, const unsigned char *key, int keylen, const unsigned char *tweak, int num_rounds, symmetric_LRW *lrw)
lrw_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int lrw_test(void);$/;"	p	language:C++	signature:(void)
lrw_test	libtomcrypt/src/modes/lrw/lrw_test.c	/^int lrw_test(void)$/;"	f	language:C	signature:(void)
ls_file	sftp-server/sftp-common.c	/^ls_file(const char *name, const struct stat *st, int remote, int si_units)$/;"	f	language:C	signature:(const char *name, const struct stat *st, int remote, int si_units)
ls_file	sftp-server/sftp-common.h	/^char	*ls_file(const char *, const struct stat *, int, int);$/;"	p	language:C++	signature:(const char *, const struct stat *, int, int)
ltc_asn1_list	libtomcrypt/src/headers/tomcrypt_pk.h	/^} ltc_asn1_list;$/;"	t	language:C++	typeref:struct:ltc_asn1_list_
ltc_asn1_list_	libtomcrypt/src/headers/tomcrypt_pk.h	/^typedef struct ltc_asn1_list_ {$/;"	s	language:C++
ltc_asn1_list_::child	libtomcrypt/src/headers/tomcrypt_pk.h	/^   struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	language:C++	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::	access:public
ltc_asn1_list_::data	libtomcrypt/src/headers/tomcrypt_pk.h	/^   void         *data;$/;"	m	language:C++	struct:ltc_asn1_list_	access:public
ltc_asn1_list_::next	libtomcrypt/src/headers/tomcrypt_pk.h	/^   struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	language:C++	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::	access:public
ltc_asn1_list_::parent	libtomcrypt/src/headers/tomcrypt_pk.h	/^   struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	language:C++	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::	access:public
ltc_asn1_list_::prev	libtomcrypt/src/headers/tomcrypt_pk.h	/^   struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	language:C++	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::ltc_asn1_list_	access:public
ltc_asn1_list_::size	libtomcrypt/src/headers/tomcrypt_pk.h	/^   unsigned long size;$/;"	m	language:C++	struct:ltc_asn1_list_	access:public
ltc_asn1_list_::type	libtomcrypt/src/headers/tomcrypt_pk.h	/^   int           type;$/;"	m	language:C++	struct:ltc_asn1_list_	access:public
ltc_asn1_list_::used	libtomcrypt/src/headers/tomcrypt_pk.h	/^   int           used;$/;"	m	language:C++	struct:ltc_asn1_list_	access:public
ltc_cipher_descriptor	libtomcrypt/src/headers/tomcrypt_cipher.h	/^extern struct ltc_cipher_descriptor {$/;"	s	language:C++
ltc_cipher_descriptor::ID	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned char ID;$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::accel_cbc_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_cbc_decrypt)(const unsigned char *ct, unsigned char *pt, unsigned long blocks, unsigned char *IV, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::accel_cbc_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_cbc_encrypt)(const unsigned char *pt, unsigned char *ct, unsigned long blocks, unsigned char *IV, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::accel_ccm_memory	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_ccm_memory)($/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::accel_ctr_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_ctr_encrypt)(const unsigned char *pt, unsigned char *ct, unsigned long blocks, unsigned char *IV, int mode, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::accel_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_ecb_decrypt)(const unsigned char *ct, unsigned char *pt, unsigned long blocks, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::accel_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_ecb_encrypt)(const unsigned char *pt, unsigned char *ct, unsigned long blocks, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::accel_gcm_memory	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_gcm_memory)($/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::accel_lrw_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_lrw_decrypt)(const unsigned char *ct, unsigned char *pt, unsigned long blocks, unsigned char *IV, const unsigned char *tweak, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::accel_lrw_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*accel_lrw_encrypt)(const unsigned char *pt, unsigned char *ct, unsigned long blocks, unsigned char *IV, const unsigned char *tweak, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::block_length	libtomcrypt/src/headers/tomcrypt_cipher.h	/^        block_length, $/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::default_rounds	libtomcrypt/src/headers/tomcrypt_cipher.h	/^        default_rounds;$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   void (*done)(symmetric_key *skey);      $/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*ecb_decrypt)(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*ecb_encrypt)(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::f9_memory	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*f9_memory)($/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int  (*keysize)(int *keysize);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::max_key_length	libtomcrypt/src/headers/tomcrypt_cipher.h	/^        max_key_length, $/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::min_key_length	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int  min_key_length, $/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::name	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   char *name;$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::omac_memory	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*omac_memory)($/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int  (*setup)(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*test)(void);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_cipher_descriptor::xcbc_memory	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*xcbc_memory)($/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
ltc_code	libtomcrypt/src/math/ltm_desc.c	/^    int mpi_code, ltc_code;$/;"	m	language:C	struct:__anon28	file:	access:public
ltc_code	libtomcrypt/src/math/tfm_desc.c	/^    int tfm_code, ltc_code;$/;"	m	language:C	struct:__anon29	file:	access:public
ltc_deinit_multi	libtomcrypt/src/headers/tomcrypt_math.h	/^void ltc_deinit_multi(void *a, ...);$/;"	p	language:C++	signature:(void *a, ...)
ltc_deinit_multi	libtomcrypt/src/math/multi.c	/^void ltc_deinit_multi(void *a, ...)$/;"	f	language:C	signature:(void *a, ...)
ltc_ecc_del_point	libtomcrypt/src/headers/tomcrypt_pk.h	/^void       ltc_ecc_del_point(ecc_point *p);$/;"	p	language:C++	signature:(ecc_point *p)
ltc_ecc_del_point	libtomcrypt/src/pk/ecc/ltc_ecc_points.c	/^void ltc_ecc_del_point(ecc_point *p)$/;"	f	language:C	signature:(ecc_point *p)
ltc_ecc_fp_free	libtomcrypt/src/headers/tomcrypt_pk.h	/^void ltc_ecc_fp_free(void);$/;"	p	language:C++	signature:(void)
ltc_ecc_fp_free	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^void ltc_ecc_fp_free(void)$/;"	f	language:C	signature:(void)
ltc_ecc_fp_mul2add	libtomcrypt/src/headers/tomcrypt_pk.h	/^int ltc_ecc_fp_mul2add(ecc_point *A, void *kA,$/;"	p	language:C++	signature:(ecc_point *A, void *kA, ecc_point *B, void *kB, ecc_point *C, void *modulus)
ltc_ecc_fp_mul2add	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^int ltc_ecc_fp_mul2add(ecc_point *A, void *kA,$/;"	f	language:C	signature:(ecc_point *A, void *kA, ecc_point *B, void *kB, ecc_point *C, void *modulus)
ltc_ecc_fp_mulmod	libtomcrypt/src/headers/tomcrypt_pk.h	/^int ltc_ecc_fp_mulmod(void *k, ecc_point *G, ecc_point *R, void *modulus, int map);$/;"	p	language:C++	signature:(void *k, ecc_point *G, ecc_point *R, void *modulus, int map)
ltc_ecc_fp_mulmod	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^int ltc_ecc_fp_mulmod(void *k, ecc_point *G, ecc_point *R, void *modulus, int map)$/;"	f	language:C	signature:(void *k, ecc_point *G, ecc_point *R, void *modulus, int map)
ltc_ecc_fp_restore_state	libtomcrypt/src/headers/tomcrypt_pk.h	/^int ltc_ecc_fp_restore_state(unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(unsigned char *in, unsigned long inlen)
ltc_ecc_fp_save_state	libtomcrypt/src/headers/tomcrypt_pk.h	/^int ltc_ecc_fp_save_state(unsigned char **out, unsigned long *outlen);$/;"	p	language:C++	signature:(unsigned char **out, unsigned long *outlen)
ltc_ecc_is_valid_idx	libtomcrypt/src/headers/tomcrypt_pk.h	/^int        ltc_ecc_is_valid_idx(int n);$/;"	p	language:C++	signature:(int n)
ltc_ecc_is_valid_idx	libtomcrypt/src/pk/ecc/ltc_ecc_is_valid_idx.c	/^int ltc_ecc_is_valid_idx(int n)$/;"	f	language:C	signature:(int n)
ltc_ecc_map	libtomcrypt/src/headers/tomcrypt_pk.h	/^int ltc_ecc_map(ecc_point *P, void *modulus, void *mp);$/;"	p	language:C++	signature:(ecc_point *P, void *modulus, void *mp)
ltc_ecc_map	libtomcrypt/src/pk/ecc/ltc_ecc_map.c	/^int ltc_ecc_map(ecc_point *P, void *modulus, void *mp)$/;"	f	language:C	signature:(ecc_point *P, void *modulus, void *mp)
ltc_ecc_mul2add	libtomcrypt/src/headers/tomcrypt_pk.h	/^int ltc_ecc_mul2add(ecc_point *A, void *kA,$/;"	p	language:C++	signature:(ecc_point *A, void *kA, ecc_point *B, void *kB, ecc_point *C, void *modulus)
ltc_ecc_mul2add	libtomcrypt/src/pk/ecc/ltc_ecc_mul2add.c	/^int ltc_ecc_mul2add(ecc_point *A, void *kA,$/;"	f	language:C	signature:(ecc_point *A, void *kA, ecc_point *B, void *kB, ecc_point *C, void *modulus)
ltc_ecc_mulmod	libtomcrypt/src/headers/tomcrypt_pk.h	/^int ltc_ecc_mulmod(void *k, ecc_point *G, ecc_point *R, void *modulus, int map);$/;"	p	language:C++	signature:(void *k, ecc_point *G, ecc_point *R, void *modulus, int map)
ltc_ecc_mulmod	libtomcrypt/src/pk/ecc/ltc_ecc_mulmod.c	/^int ltc_ecc_mulmod(void *k, ecc_point *G, ecc_point *R, void *modulus, int map)$/;"	f	language:C	signature:(void *k, ecc_point *G, ecc_point *R, void *modulus, int map)
ltc_ecc_mulmod	libtomcrypt/src/pk/ecc/ltc_ecc_mulmod_timing.c	/^int ltc_ecc_mulmod(void *k, ecc_point *G, ecc_point *R, void *modulus, int map)$/;"	f	language:C	signature:(void *k, ecc_point *G, ecc_point *R, void *modulus, int map)
ltc_ecc_new_point	libtomcrypt/src/headers/tomcrypt_pk.h	/^ecc_point *ltc_ecc_new_point(void);$/;"	p	language:C++	signature:(void)
ltc_ecc_new_point	libtomcrypt/src/pk/ecc/ltc_ecc_points.c	/^ecc_point *ltc_ecc_new_point(void)$/;"	f	language:C	signature:(void)
ltc_ecc_projective_add_point	libtomcrypt/src/headers/tomcrypt_pk.h	/^int ltc_ecc_projective_add_point(ecc_point *P, ecc_point *Q, ecc_point *R, void *modulus, void *mp);$/;"	p	language:C++	signature:(ecc_point *P, ecc_point *Q, ecc_point *R, void *modulus, void *mp)
ltc_ecc_projective_add_point	libtomcrypt/src/pk/ecc/ltc_ecc_projective_add_point.c	/^int ltc_ecc_projective_add_point(ecc_point *P, ecc_point *Q, ecc_point *R, void *modulus, void *mp)$/;"	f	language:C	signature:(ecc_point *P, ecc_point *Q, ecc_point *R, void *modulus, void *mp)
ltc_ecc_projective_dbl_point	libtomcrypt/src/headers/tomcrypt_pk.h	/^int ltc_ecc_projective_dbl_point(ecc_point *P, ecc_point *R, void *modulus, void *mp);$/;"	p	language:C++	signature:(ecc_point *P, ecc_point *R, void *modulus, void *mp)
ltc_ecc_projective_dbl_point	libtomcrypt/src/pk/ecc/ltc_ecc_projective_dbl_point.c	/^int ltc_ecc_projective_dbl_point(ecc_point *P, ecc_point *R, void *modulus, void *mp)$/;"	f	language:C	signature:(ecc_point *P, ecc_point *R, void *modulus, void *mp)
ltc_ecc_set_type	libtomcrypt/src/headers/tomcrypt_pk.h	/^} ltc_ecc_set_type;$/;"	t	language:C++	typeref:struct:__anon34
ltc_ecc_sets	libtomcrypt/src/pk/ecc/ecc.c	/^const ltc_ecc_set_type ltc_ecc_sets[] = {$/;"	v	language:C
ltc_hash_descriptor	libtomcrypt/src/headers/tomcrypt_hash.h	/^extern  struct ltc_hash_descriptor {$/;"	s	language:C++
ltc_hash_descriptor::ID	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char ID;$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
ltc_hash_descriptor::OID	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned long OID[16];$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
ltc_hash_descriptor::OIDlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned long OIDlen;$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
ltc_hash_descriptor::blocksize	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned long blocksize;$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
ltc_hash_descriptor::done	libtomcrypt/src/headers/tomcrypt_hash.h	/^    int (*done)(hash_state *hash, unsigned char *out);$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
ltc_hash_descriptor::hashsize	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned long hashsize;$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
ltc_hash_descriptor::hmac_block	libtomcrypt/src/headers/tomcrypt_hash.h	/^    int  (*hmac_block)(const unsigned char *key, unsigned long  keylen,$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
ltc_hash_descriptor::init	libtomcrypt/src/headers/tomcrypt_hash.h	/^    int (*init)(hash_state *hash);$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
ltc_hash_descriptor::name	libtomcrypt/src/headers/tomcrypt_hash.h	/^    char *name;$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
ltc_hash_descriptor::process	libtomcrypt/src/headers/tomcrypt_hash.h	/^    int (*process)(hash_state *hash, const unsigned char *in, unsigned long inlen);$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
ltc_hash_descriptor::test	libtomcrypt/src/headers/tomcrypt_hash.h	/^    int (*test)(void);$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
ltc_init_multi	libtomcrypt/src/headers/tomcrypt_math.h	/^int ltc_init_multi(void **a, ...);$/;"	p	language:C++	signature:(void **a, ...)
ltc_init_multi	libtomcrypt/src/math/multi.c	/^int ltc_init_multi(void **a, ...)$/;"	f	language:C	signature:(void **a, ...)
ltc_math_descriptor	libtomcrypt/src/headers/tomcrypt_math.h	/^} ltc_math_descriptor;$/;"	t	language:C++	typeref:struct:__anon54
ltc_mp	libtomcrypt/src/misc/crypt/crypt_ltc_mp_descriptor.c	/^ltc_math_descriptor ltc_mp;$/;"	v	language:C
ltc_pkcs_1_paddings	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^enum ltc_pkcs_1_paddings$/;"	g	language:C++
ltc_pkcs_1_v1_5_blocks	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^enum ltc_pkcs_1_v1_5_blocks$/;"	g	language:C++
ltc_prng_descriptor	libtomcrypt/src/headers/tomcrypt_prng.h	/^extern struct ltc_prng_descriptor {$/;"	s	language:C++
ltc_prng_descriptor::add_entropy	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int (*add_entropy)(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
ltc_prng_descriptor::done	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int (*done)(prng_state *prng);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
ltc_prng_descriptor::export_size	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int  export_size;$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
ltc_prng_descriptor::name	libtomcrypt/src/headers/tomcrypt_prng.h	/^    char *name;$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
ltc_prng_descriptor::pexport	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int (*pexport)(unsigned char *out, unsigned long *outlen, prng_state *prng);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
ltc_prng_descriptor::pimport	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int (*pimport)(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
ltc_prng_descriptor::read	libtomcrypt/src/headers/tomcrypt_prng.h	/^    unsigned long (*read)(unsigned char *out, unsigned long outlen, prng_state *prng);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
ltc_prng_descriptor::ready	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int (*ready)(prng_state *prng);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
ltc_prng_descriptor::start	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int (*start)(prng_state *prng);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
ltc_prng_descriptor::test	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int (*test)(void);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
ltc_to_asn1	libtomcrypt/src/pk/asn1/der/set/der_encode_set.c	/^static int ltc_to_asn1(int v)$/;"	f	language:C	file:	signature:(int v)
ltc_utctime	libtomcrypt/src/headers/tomcrypt_pk.h	/^} ltc_utctime;$/;"	t	language:C++	typeref:struct:__anon39
ltm_desc	libtomcrypt/src/math/ltm_desc.c	/^const ltc_math_descriptor ltm_desc = {$/;"	v	language:C
ltm_prime_callback	libtommath/tommath.h	/^typedef int ltm_prime_callback(unsigned char *dst, int len, void *dat);$/;"	t	language:C++
ltm_prime_tab	libtommath/bn_prime_tab.c	/^const mp_digit ltm_prime_tab[] = {$/;"	v	language:C
ltm_prime_tab	libtommath/pre_gen/mpi.c	/^const mp_digit ltm_prime_tab[] = {$/;"	v	language:C
lut_orders	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^} lut_orders[] = {$/;"	v	language:C	typeref:struct:__anon31	file:
m_burn	dbutil.c	/^void m_burn(void *data, unsigned int len) {$/;"	f	language:C	signature:(void *data, unsigned int len)
m_burn	dbutil.h	/^void m_burn(void* data, unsigned int len);$/;"	p	language:C++	signature:(void* data, unsigned int len)
m_close	dbutil.c	/^void m_close(int fd) {$/;"	f	language:C	signature:(int fd)
m_close	dbutil.h	/^void m_close(int fd);$/;"	p	language:C++	signature:(int fd)
m_free	dbutil.h	70;"	d	language:C++
m_list	list.h	/^typedef struct _m_list m_list;$/;"	t	language:C++	typeref:struct:_m_list
m_list_elem	list.h	/^typedef struct _m_list_elem m_list_elem;$/;"	t	language:C++	typeref:struct:_m_list_elem
m_malloc	dbutil.c	/^void * m_malloc(size_t size) {$/;"	f	language:C	signature:(size_t size)
m_malloc	dbutil.h	/^void * m_malloc(size_t size);$/;"	p	language:C++	signature:(size_t size)
m_mp_init	bignum.c	/^void m_mp_init(mp_int *mp) {$/;"	f	language:C	signature:(mp_int *mp)
m_mp_init	bignum.h	/^void m_mp_init(mp_int *mp);$/;"	p	language:C++	signature:(mp_int *mp)
m_mp_init_multi	bignum.c	/^void m_mp_init_multi(mp_int *mp, ...) $/;"	f	language:C	signature:(mp_int *mp, ...)
m_mp_init_multi	bignum.h	/^void m_mp_init_multi(mp_int *mp, ...);$/;"	p	language:C++	signature:(mp_int *mp, ...)
m_realloc	dbutil.c	/^void * m_realloc(void* ptr, size_t size) {$/;"	f	language:C	signature:(void* ptr, size_t size)
m_realloc	dbutil.h	/^void * m_realloc(void* ptr, size_t size);$/;"	p	language:C++	signature:(void* ptr, size_t size)
m_str_to_uint	dbutil.c	/^int m_str_to_uint(const char* str, unsigned int *val) {$/;"	f	language:C	signature:(const char* str, unsigned int *val)
m_str_to_uint	dbutil.h	/^int m_str_to_uint(const char* str, unsigned int *val);$/;"	p	language:C++	signature:(const char* str, unsigned int *val)
m_strdup	dbutil.c	/^void * m_strdup(const char * str) {$/;"	f	language:C	signature:(const char * str)
m_strdup	dbutil.h	/^void * m_strdup(const char * str);$/;"	p	language:C++	signature:(const char * str)
mac_test	libtomcrypt/testprof/mac_test.c	/^int mac_test(void)$/;"	f	language:C	signature:(void)
mac_test	libtomcrypt/testprof/tomcrypt_test.h	/^int mac_test(void);$/;"	p	language:C++	signature:(void)
mackey	session.h	/^	unsigned char mackey[MAX_MAC_KEY];$/;"	m	language:C++	struct:key_context_directional	access:public
main	dbmulti.c	/^int main(int argc, char ** argv) {$/;"	f	language:C	signature:(int argc, char ** argv)
main	libtomcrypt/demos/encrypt.c	/^int main(int argc, char *argv[]) $/;"	f	language:C	signature:(int argc, char *argv[])
main	libtomcrypt/demos/hashsum.c	/^int main(int argc, char **argv)$/;"	f	language:C	signature:(int argc, char **argv)
main	libtomcrypt/demos/multi.c	/^int main(void)$/;"	f	language:C	signature:(void)
main	libtomcrypt/demos/small.c	/^int main(void)$/;"	f	language:C	signature:(void)
main	libtomcrypt/demos/test.c	/^int main(void)$/;"	f	language:C	signature:(void)
main	libtomcrypt/demos/timing.c	/^int main(void)$/;"	f	language:C	signature:(void)
main	libtomcrypt/demos/tv_gen.c	/^int main(void)$/;"	f	language:C	signature:(void)
main	libtomcrypt/notes/etc/saferp_optimizer.c	/^int main(void)$/;"	f	language:C	signature:(void)
main	libtomcrypt/notes/etc/whirlgen.c	/^int main(void)$/;"	f	language:C	signature:(void)
main	libtomcrypt/notes/etc/whirltest.c	/^int main(void)$/;"	f	language:C	signature:(void)
main	libtommath/demo/demo.c	/^int main(void)$/;"	f	language:C	signature:(void)
main	libtommath/demo/timing.c	/^int main(void)$/;"	f	language:C	signature:(void)
main	libtommath/etc/2kprime.c	/^int main(void)$/;"	f	language:C	signature:(void)
main	libtommath/etc/drprime.c	/^int main(void)$/;"	f	language:C	signature:(void)
main	libtommath/etc/mersenne.c	/^main (void)$/;"	f	language:C	signature:(void)
main	libtommath/etc/mont.c	/^int main(void)$/;"	f	language:C	signature:(void)
main	libtommath/etc/pprime.c	/^main (void)$/;"	f	language:C	signature:(void)
main	libtommath/etc/tune.c	/^main (void)$/;"	f	language:C	signature:(void)
main	libtommath/mtest/mtest.c	/^int main(void)$/;"	f	language:C	signature:(void)
main	sftp-server/openbsd-compat/fmt_scaled.c	/^main(int argc, char **argv)$/;"	f	language:C	signature:(int argc, char **argv)
main	sftp-server/sftp-server-main.c	/^main(int argc, char **argv)$/;"	f	language:C	signature:(int argc, char **argv)
main_inetd	svr-main.c	/^static void main_inetd() {$/;"	f	language:C	file:
main_inetd	svr-main.c	/^static void main_inetd();$/;"	p	language:C	file:
main_noinetd	svr-main.c	/^static void main_noinetd();$/;"	p	language:C	file:
main_noinetd	svr-main.c	/^void main_noinetd() {$/;"	f	language:C
make_connection_string	svr-chansession.c	/^static char* make_connection_string() {$/;"	f	language:C	file:
make_mac	packet.c	/^static void make_mac(unsigned int seqno, const struct key_context_directional * key_state,$/;"	f	language:C	file:	signature:(unsigned int seqno, const struct key_context_directional * key_state, buffer * clear_buf, unsigned int clear_len, unsigned char *output_mac)
make_mac	packet.c	/^static void make_mac(unsigned int seqno, const struct key_context_directional * key_state,$/;"	p	language:C	file:	signature:(unsigned int seqno, const struct key_context_directional * key_state, buffer * clear_buf, unsigned int clear_len, unsigned char *output_mac)
malloc_ai	fake-rfc2553.c	/^addrinfo *malloc_ai(int port, u_long addr, const struct addrinfo *hints)$/;"	f	language:C	file:	signature:(int port, u_long addr, const struct addrinfo *hints)
map	libtomcrypt/src/misc/base64/base64_decode.c	/^static const unsigned char map[256] = {$/;"	v	language:C	file:
mapcode	termcodes.h	/^	unsigned int mapcode;$/;"	m	language:C++	struct:TermCode	access:public
mask	libtomcrypt/src/encauth/gcm/gcm_gf_mult.c	/^static const unsigned char mask[] = { 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01 };$/;"	v	language:C	file:
masklen_valid	sftp-server/addrmatch.c	/^masklen_valid(int af, u_int masklen)$/;"	f	language:C	file:	signature:(int af, u_int masklen)
master	chansession.h	/^	int master; \/* the master terminal fd*\/$/;"	m	language:C++	struct:ChanSess	access:public
master_password	runopts.h	/^	char * master_password;$/;"	m	language:C++	struct:svr_runopts	access:public
match_host_and_ip	sftp-server/match.c	/^match_host_and_ip(const char *host, const char *ipaddr,$/;"	f	language:C	signature:(const char *host, const char *ipaddr, const char *patterns)
match_host_and_ip	sftp-server/match.h	/^int	 match_host_and_ip(const char *, const char *, const char *);$/;"	p	language:C++	signature:(const char *, const char *, const char *)
match_hostname	sftp-server/match.c	/^match_hostname(const char *host, const char *pattern, u_int len)$/;"	f	language:C	signature:(const char *host, const char *pattern, u_int len)
match_hostname	sftp-server/match.h	/^int	 match_hostname(const char *, const char *, u_int);$/;"	p	language:C++	signature:(const char *, const char *, u_int)
match_list	sftp-server/match.c	/^match_list(const char *client, const char *server, u_int *next)$/;"	f	language:C	signature:(const char *client, const char *server, u_int *next)
match_list	sftp-server/match.h	/^char	*match_list(const char *, const char *, u_int *);$/;"	p	language:C++	signature:(const char *, const char *, u_int *)
match_option	svr-authpubkeyoptions.c	/^static int match_option(buffer *options_buf, const char *opt_name) {$/;"	f	language:C	file:	signature:(buffer *options_buf, const char *opt_name)
match_pattern	sftp-server/match.c	/^match_pattern(const char *s, const char *pattern)$/;"	f	language:C	signature:(const char *s, const char *pattern)
match_pattern	sftp-server/match.h	/^int	 match_pattern(const char *, const char *);$/;"	p	language:C++	signature:(const char *, const char *)
match_pattern_list	sftp-server/match.c	/^match_pattern_list(const char *string, const char *pattern, u_int len,$/;"	f	language:C	signature:(const char *string, const char *pattern, u_int len, int dolower)
match_pattern_list	sftp-server/match.h	/^int	 match_pattern_list(const char *, const char *, u_int, int);$/;"	p	language:C++	signature:(const char *, const char *, u_int, int)
match_user	sftp-server/match.c	/^match_user(const char *user, const char *host, const char *ipaddr,$/;"	f	language:C	signature:(const char *user, const char *host, const char *ipaddr, const char *pattern)
match_user	sftp-server/match.h	/^int	 match_user(const char *, const char *, const char *, const char *);$/;"	p	language:C++	signature:(const char *, const char *, const char *, const char *)
matchtcp	svr-tcpfwd.c	/^static int matchtcp(void* typedata1, void* typedata2) {$/;"	f	language:C	file:	signature:(void* typedata1, void* typedata2)
math_gen	libtomcrypt/demos/tv_gen.c	/^void math_gen(void)$/;"	f	language:C	signature:(void)
max_key_length	libtomcrypt/src/headers/tomcrypt_cipher.h	/^        max_key_length, $/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
maxfd	session.h	/^	int maxfd; \/* the maximum file descriptor to check with select() *\/$/;"	m	language:C++	struct:sshsession	access:public
maybe_flush_reply_queue	packet.c	/^void maybe_flush_reply_queue() {$/;"	f	language:C
maybe_flush_reply_queue	packet.h	/^void maybe_flush_reply_queue();$/;"	p	language:C++	signature:()
md	libtomcrypt/src/headers/tomcrypt_mac.h	/^     hash_state     md;$/;"	m	language:C++	struct:Hmac_state	access:public
md2	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct md2_state    md2;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::md2_state	access:public
md2_compress	libtomcrypt/src/hashes/md2.c	/^static void md2_compress(hash_state *md)$/;"	f	language:C	file:	signature:(hash_state *md)
md2_desc	libtomcrypt/src/hashes/md2.c	/^const struct ltc_hash_descriptor md2_desc =$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
md2_done	libtomcrypt/src/hashes/md2.c	/^int md2_done(hash_state * md, unsigned char *out)$/;"	f	language:C	signature:(hash_state * md, unsigned char *out)
md2_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int md2_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
md2_init	libtomcrypt/src/hashes/md2.c	/^int md2_init(hash_state *md)$/;"	f	language:C	signature:(hash_state *md)
md2_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int md2_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
md2_process	libtomcrypt/src/hashes/md2.c	/^int md2_process(hash_state *md, const unsigned char *in, unsigned long inlen)$/;"	f	language:C	signature:(hash_state *md, const unsigned char *in, unsigned long inlen)
md2_process	libtomcrypt/src/headers/tomcrypt_hash.h	/^int md2_process(hash_state * md, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(hash_state * md, const unsigned char *in, unsigned long inlen)
md2_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^struct md2_state {$/;"	s	language:C++
md2_state::X	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char chksum[16], X[48], buf[16];$/;"	m	language:C++	struct:md2_state	access:public
md2_state::buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char chksum[16], X[48], buf[16];$/;"	m	language:C++	struct:md2_state	access:public
md2_state::chksum	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char chksum[16], X[48], buf[16];$/;"	m	language:C++	struct:md2_state	access:public
md2_state::curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned long curlen;$/;"	m	language:C++	struct:md2_state	access:public
md2_test	libtomcrypt/src/hashes/md2.c	/^int md2_test(void)$/;"	f	language:C	signature:(void)
md2_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int md2_test(void);$/;"	p	language:C++	signature:(void)
md2_update_chksum	libtomcrypt/src/hashes/md2.c	/^static void md2_update_chksum(hash_state *md)$/;"	f	language:C	file:	signature:(hash_state *md)
md4	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct md4_state    md4;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::md4_state	access:public
md4_compress	libtomcrypt/src/hashes/md4.c	/^static int md4_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
md4_desc	libtomcrypt/src/hashes/md4.c	/^const struct ltc_hash_descriptor md4_desc =$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
md4_done	libtomcrypt/src/hashes/md4.c	/^int md4_done(hash_state * md, unsigned char *out)$/;"	f	language:C	signature:(hash_state * md, unsigned char *out)
md4_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int md4_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
md4_init	libtomcrypt/src/hashes/md4.c	/^int md4_init(hash_state * md)$/;"	f	language:C	signature:(hash_state * md)
md4_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int md4_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
md4_process	libtomcrypt/src/headers/tomcrypt_hash.h	/^int md4_process(hash_state * md, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(hash_state * md, const unsigned char *in, unsigned long inlen)
md4_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^struct md4_state {$/;"	s	language:C++
md4_state::buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:md4_state	access:public
md4_state::curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[4], curlen;$/;"	m	language:C++	struct:md4_state	access:public
md4_state::length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:md4_state	access:public
md4_state::state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[4], curlen;$/;"	m	language:C++	struct:md4_state	access:public
md4_test	libtomcrypt/src/hashes/md4.c	/^int md4_test(void)$/;"	f	language:C	signature:(void)
md4_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int md4_test(void);$/;"	p	language:C++	signature:(void)
md5	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct md5_state    md5;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::md5_state	access:public
md5_compress	libtomcrypt/src/hashes/md5.c	/^static int md5_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
md5_desc	libtomcrypt/src/hashes/md5.c	/^const struct ltc_hash_descriptor md5_desc =$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
md5_done	libtomcrypt/src/hashes/md5.c	/^int md5_done(hash_state * md, unsigned char *out)$/;"	f	language:C	signature:(hash_state * md, unsigned char *out)
md5_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int md5_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
md5_init	libtomcrypt/src/hashes/md5.c	/^int md5_init(hash_state * md)$/;"	f	language:C	signature:(hash_state * md)
md5_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int md5_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
md5_process	libtomcrypt/src/headers/tomcrypt_hash.h	/^int md5_process(hash_state * md, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(hash_state * md, const unsigned char *in, unsigned long inlen)
md5_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^struct md5_state {$/;"	s	language:C++
md5_state::buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:md5_state	access:public
md5_state::curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[4], curlen;$/;"	m	language:C++	struct:md5_state	access:public
md5_state::length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:md5_state	access:public
md5_state::state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[4], curlen;$/;"	m	language:C++	struct:md5_state	access:public
md5_test	libtomcrypt/src/hashes/md5.c	/^int  md5_test(void)$/;"	f	language:C	signature:(void)
md5_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int md5_test(void);$/;"	p	language:C++	signature:(void)
mds_column_mult	libtomcrypt/src/ciphers/twofish/twofish.c	/^static ulong32 mds_column_mult(unsigned char in, int col)$/;"	f	language:C	file:	signature:(unsigned char in, int col)
mds_column_mult	libtomcrypt/src/ciphers/twofish/twofish.c	207;"	d	language:C	file:
mds_mult	libtomcrypt/src/ciphers/twofish/twofish.c	/^static void mds_mult(const unsigned char *in, unsigned char *out)$/;"	f	language:C	file:	signature:(const unsigned char *in, unsigned char *out)
mds_tab	libtomcrypt/src/ciphers/twofish/twofish_tab.c	/^static const ulong32 mds_tab[4][256] = {$/;"	v	language:C	file:
memmove	sftp-server/defines.h	552;"	d	language:C++
min_key_length	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int  min_key_length, $/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
mkdtemp	sftp-server/defines.h	/^  char *mkdtemp (char *);$/;"	p	language:C++	signature:(char *)
mkdtemp	sftp-server/openbsd-compat/openbsd-compat.h	/^char *mkdtemp(char *path);$/;"	p	language:C++	signature:(char *path)
mkstemp	sftp-server/defines.h	/^  int mkstemp (char *);$/;"	p	language:C++	signature:(char *)
mkstemp	sftp-server/openbsd-compat/openbsd-compat.h	/^int mkstemp(char *path);$/;"	p	language:C++	signature:(char *path)
mkstemps	sftp-server/openbsd-compat/openbsd-compat.h	/^int mkstemps(char *path, int slen);$/;"	p	language:C++	signature:(char *path, int slen)
mm	libtomcrypt/src/headers/tomcrypt_pk.h	/^            mm, \/* minute *\/$/;"	m	language:C++	struct:__anon39	access:public
mode	algo.h	/^	const void *mode; \/* the mode, currently only used for ciphers,$/;"	m	language:C++	struct:Algo_Type	access:public
mode	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       mode;$/;"	m	language:C++	struct:__anon44	access:public
mode	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       mode,         \/* mode the GCM code is in *\/$/;"	m	language:C++	struct:__anon51	access:public
mode_t	sftp-server/defines.h	/^typedef int mode_t;$/;"	t	language:C++
modes_test	libtomcrypt/testprof/modes_test.c	/^int modes_test(void)$/;"	f	language:C	signature:(void)
modes_test	libtomcrypt/testprof/tomcrypt_test.h	/^int modes_test(void);$/;"	p	language:C++	signature:(void)
modi	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*modi)(void *a, unsigned long b, unsigned long *c);$/;"	m	language:C++	struct:__anon54	access:public
modi	libtomcrypt/src/math/gmp_desc.c	/^static int modi(void *a, unsigned long b, unsigned long *c)$/;"	f	language:C	file:	signature:(void *a, unsigned long b, unsigned long *c)
modi	libtomcrypt/src/math/ltm_desc.c	/^static int modi(void *a, unsigned long b, unsigned long *c)$/;"	f	language:C	file:	signature:(void *a, unsigned long b, unsigned long *c)
modi	libtomcrypt/src/math/tfm_desc.c	/^static int modi(void *a, unsigned long b, unsigned long *c)$/;"	f	language:C	file:	signature:(void *a, unsigned long b, unsigned long *c)
montgomery_deinit	libtomcrypt/src/headers/tomcrypt_math.h	/^   void (*montgomery_deinit)(void *a);$/;"	m	language:C++	struct:__anon54	access:public
montgomery_deinit	libtomcrypt/src/math/gmp_desc.c	/^static void montgomery_deinit(void *a)$/;"	f	language:C	file:	signature:(void *a)
montgomery_deinit	libtomcrypt/src/math/ltm_desc.c	/^static void montgomery_deinit(void *a)$/;"	f	language:C	file:	signature:(void *a)
montgomery_deinit	libtomcrypt/src/math/tfm_desc.c	/^static void montgomery_deinit(void *a)$/;"	f	language:C	file:	signature:(void *a)
montgomery_normalization	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*montgomery_normalization)(void *a, void *b);$/;"	m	language:C++	struct:__anon54	access:public
montgomery_normalization	libtomcrypt/src/math/gmp_desc.c	/^static int montgomery_normalization(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
montgomery_normalization	libtomcrypt/src/math/ltm_desc.c	/^static int montgomery_normalization(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
montgomery_normalization	libtomcrypt/src/math/tfm_desc.c	/^static int montgomery_normalization(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
montgomery_reduce	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*montgomery_reduce)(void *a, void *b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
montgomery_reduce	libtomcrypt/src/math/gmp_desc.c	/^static int montgomery_reduce(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
montgomery_reduce	libtomcrypt/src/math/ltm_desc.c	/^static int montgomery_reduce(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
montgomery_reduce	libtomcrypt/src/math/tfm_desc.c	/^static int montgomery_reduce(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
montgomery_setup	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*montgomery_setup)(void *a, void **b);$/;"	m	language:C++	struct:__anon54	access:public
montgomery_setup	libtomcrypt/src/math/gmp_desc.c	/^static int montgomery_setup(void *a, void **b)$/;"	f	language:C	file:	signature:(void *a, void **b)
montgomery_setup	libtomcrypt/src/math/ltm_desc.c	/^static int montgomery_setup(void *a, void **b)$/;"	f	language:C	file:	signature:(void *a, void **b)
montgomery_setup	libtomcrypt/src/math/tfm_desc.c	/^static int montgomery_setup(void *a, void **b)$/;"	f	language:C	file:	signature:(void *a, void **b)
mp_2expt	libtomcrypt/src/headers/tomcrypt_math.h	462;"	d	language:C++
mp_2expt	libtommath/bn_mp_2expt.c	/^mp_2expt (mp_int * a, int b)$/;"	f	language:C	signature:(mp_int * a, int b)
mp_2expt	libtommath/mtest/mpi.c	/^mp_err mp_2expt(mp_int *a, mp_digit k)$/;"	f	language:C	signature:(mp_int *a, mp_digit k)
mp_2expt	libtommath/mtest/mpi.h	/^mp_err mp_2expt(mp_int *a, mp_digit k);$/;"	p	language:C++	signature:(mp_int *a, mp_digit k)
mp_2expt	libtommath/pre_gen/mpi.c	/^mp_2expt (mp_int * a, int b)$/;"	f	language:C	signature:(mp_int * a, int b)
mp_2expt	libtommath/tommath.h	/^int mp_2expt(mp_int *a, int b);$/;"	p	language:C++	signature:(mp_int *a, int b)
mp_abs	libtommath/bn_mp_abs.c	/^mp_abs (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_abs	libtommath/mtest/mpi.c	/^mp_err mp_abs(mp_int *a, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
mp_abs	libtommath/mtest/mpi.h	/^mp_err mp_abs(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_abs	libtommath/pre_gen/mpi.c	/^mp_abs (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_abs	libtommath/tommath.h	/^int mp_abs(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_add	libtomcrypt/src/headers/tomcrypt_math.h	470;"	d	language:C++
mp_add	libtommath/bn_mp_add.c	/^int mp_add (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_add	libtommath/mtest/mpi.c	/^mp_err mp_add(mp_int *a, mp_int *b, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_add	libtommath/mtest/mpi.h	/^mp_err mp_add(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_add	libtommath/pre_gen/mpi.c	/^int mp_add (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_add	libtommath/tommath.h	/^int mp_add(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_add_d	libtomcrypt/src/headers/tomcrypt_math.h	471;"	d	language:C++
mp_add_d	libtommath/bn_mp_add_d.c	/^mp_add_d (mp_int * a, mp_digit b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_digit b, mp_int * c)
mp_add_d	libtommath/mtest/mpi.c	/^mp_err mp_add_d(mp_int *a, mp_digit d, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_digit d, mp_int *b)
mp_add_d	libtommath/mtest/mpi.h	/^mp_err mp_add_d(mp_int *a, mp_digit d, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_digit d, mp_int *b)
mp_add_d	libtommath/pre_gen/mpi.c	/^mp_add_d (mp_int * a, mp_digit b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_digit b, mp_int * c)
mp_add_d	libtommath/tommath.h	/^int mp_add_d(mp_int *a, mp_digit b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_digit b, mp_int *c)
mp_addmod	libtommath/bn_mp_addmod.c	/^mp_addmod (mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, mp_int * d)
mp_addmod	libtommath/mtest/mpi.c	/^mp_err mp_addmod(mp_int *a, mp_int *b, mp_int *m, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *m, mp_int *c)
mp_addmod	libtommath/mtest/mpi.h	/^mp_err mp_addmod(mp_int *a, mp_int *b, mp_int *m, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *m, mp_int *c)
mp_addmod	libtommath/pre_gen/mpi.c	/^mp_addmod (mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, mp_int * d)
mp_addmod	libtommath/tommath.h	/^int mp_addmod(mp_int *a, mp_int *b, mp_int *c, mp_int *d);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c, mp_int *d)
mp_and	libtommath/bn_mp_and.c	/^mp_and (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_and	libtommath/pre_gen/mpi.c	/^mp_and (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_and	libtommath/tommath.h	/^int mp_and(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_char2value	libtommath/mtest/mpi.c	/^int    mp_char2value(char ch, int r)$/;"	f	language:C	signature:(char ch, int r)
mp_char2value	libtommath/mtest/mpi.h	/^int    mp_char2value(char ch, int r);$/;"	p	language:C++	signature:(char ch, int r)
mp_clamp	libtommath/bn_mp_clamp.c	/^mp_clamp (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_clamp	libtommath/pre_gen/mpi.c	/^mp_clamp (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_clamp	libtommath/tommath.h	/^void mp_clamp(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_clear	libtomcrypt/src/headers/tomcrypt_math.h	446;"	d	language:C++
mp_clear	libtommath/bn_mp_clear.c	/^mp_clear (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_clear	libtommath/mtest/mpi.c	/^void   mp_clear(mp_int *mp)$/;"	f	language:C	signature:(mp_int *mp)
mp_clear	libtommath/mtest/mpi.h	/^void   mp_clear(mp_int *mp);$/;"	p	language:C++	signature:(mp_int *mp)
mp_clear	libtommath/pre_gen/mpi.c	/^mp_clear (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_clear	libtommath/tommath.h	/^void mp_clear(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_clear_array	libtommath/mtest/mpi.c	/^void   mp_clear_array(mp_int mp[], int count)$/;"	f	language:C	signature:(mp_int mp[], int count)
mp_clear_array	libtommath/mtest/mpi.h	/^void   mp_clear_array(mp_int mp[], int count);$/;"	p	language:C++	signature:(mp_int mp[], int count)
mp_clear_multi	libtomcrypt/src/headers/tomcrypt_math.h	447;"	d	language:C++
mp_clear_multi	libtommath/bn_mp_clear_multi.c	/^void mp_clear_multi(mp_int *mp, ...) $/;"	f	language:C	signature:(mp_int *mp, ...)
mp_clear_multi	libtommath/pre_gen/mpi.c	/^void mp_clear_multi(mp_int *mp, ...) $/;"	f	language:C	signature:(mp_int *mp, ...)
mp_clear_multi	libtommath/tommath.h	/^void mp_clear_multi(mp_int *mp, ...);$/;"	p	language:C++	signature:(mp_int *mp, ...)
mp_cmp	libtomcrypt/src/headers/tomcrypt_math.h	458;"	d	language:C++
mp_cmp	libtommath/bn_mp_cmp.c	/^mp_cmp (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_cmp	libtommath/mtest/mpi.c	/^int    mp_cmp(mp_int *a, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
mp_cmp	libtommath/mtest/mpi.h	/^int    mp_cmp(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_cmp	libtommath/pre_gen/mpi.c	/^mp_cmp (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_cmp	libtommath/tommath.h	/^int mp_cmp(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_cmp_d	libtomcrypt/src/headers/tomcrypt_math.h	459;"	d	language:C++
mp_cmp_d	libtommath/bn_mp_cmp_d.c	/^int mp_cmp_d(mp_int * a, mp_digit b)$/;"	f	language:C	signature:(mp_int * a, mp_digit b)
mp_cmp_d	libtommath/mtest/mpi.c	/^int    mp_cmp_d(mp_int *a, mp_digit d)$/;"	f	language:C	signature:(mp_int *a, mp_digit d)
mp_cmp_d	libtommath/mtest/mpi.h	/^int    mp_cmp_d(mp_int *a, mp_digit d);$/;"	p	language:C++	signature:(mp_int *a, mp_digit d)
mp_cmp_d	libtommath/pre_gen/mpi.c	/^int mp_cmp_d(mp_int * a, mp_digit b)$/;"	f	language:C	signature:(mp_int * a, mp_digit b)
mp_cmp_d	libtommath/tommath.h	/^int mp_cmp_d(mp_int *a, mp_digit b);$/;"	p	language:C++	signature:(mp_int *a, mp_digit b)
mp_cmp_int	libtommath/mtest/mpi.c	/^int    mp_cmp_int(mp_int *a, long z)$/;"	f	language:C	signature:(mp_int *a, long z)
mp_cmp_int	libtommath/mtest/mpi.h	/^int    mp_cmp_int(mp_int *a, long z);$/;"	p	language:C++	signature:(mp_int *a, long z)
mp_cmp_mag	libtommath/bn_mp_cmp_mag.c	/^int mp_cmp_mag (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_cmp_mag	libtommath/mtest/mpi.c	/^int    mp_cmp_mag(mp_int *a, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
mp_cmp_mag	libtommath/mtest/mpi.h	/^int    mp_cmp_mag(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_cmp_mag	libtommath/pre_gen/mpi.c	/^int mp_cmp_mag (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_cmp_mag	libtommath/tommath.h	/^int mp_cmp_mag(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_cmp_z	libtommath/mtest/mpi.c	/^int    mp_cmp_z(mp_int *a)$/;"	f	language:C	signature:(mp_int *a)
mp_cmp_z	libtommath/mtest/mpi.h	/^int    mp_cmp_z(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_cnt_lsb	libtomcrypt/src/headers/tomcrypt_math.h	461;"	d	language:C++
mp_cnt_lsb	libtommath/bn_mp_cnt_lsb.c	/^int mp_cnt_lsb(mp_int *a)$/;"	f	language:C	signature:(mp_int *a)
mp_cnt_lsb	libtommath/pre_gen/mpi.c	/^int mp_cnt_lsb(mp_int *a)$/;"	f	language:C	signature:(mp_int *a)
mp_cnt_lsb	libtommath/tommath.h	/^int mp_cnt_lsb(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_copy	libtomcrypt/src/headers/tomcrypt_math.h	451;"	d	language:C++
mp_copy	libtommath/bn_mp_copy.c	/^mp_copy (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_copy	libtommath/mtest/mpi.c	/^mp_err mp_copy(mp_int *from, mp_int *to)$/;"	f	language:C	signature:(mp_int *from, mp_int *to)
mp_copy	libtommath/mtest/mpi.h	/^mp_err mp_copy(mp_int *from, mp_int *to);$/;"	p	language:C++	signature:(mp_int *from, mp_int *to)
mp_copy	libtommath/pre_gen/mpi.c	/^mp_copy (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_copy	libtommath/tommath.h	/^int mp_copy(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_count_bits	libtomcrypt/src/headers/tomcrypt_math.h	460;"	d	language:C++
mp_count_bits	libtommath/bn_mp_count_bits.c	/^mp_count_bits (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_count_bits	libtommath/mtest/mpi.c	/^int    mp_count_bits(mp_int *mp)$/;"	f	language:C	signature:(mp_int *mp)
mp_count_bits	libtommath/mtest/mpi.h	/^int    mp_count_bits(mp_int *mp);$/;"	p	language:C++	signature:(mp_int *mp)
mp_count_bits	libtommath/pre_gen/mpi.c	/^mp_count_bits (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_count_bits	libtommath/tommath.h	/^int mp_count_bits(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_digit	libtommath/mtest/mpi-types.h	/^typedef unsigned short     mp_digit;  \/* 2 byte type *\/$/;"	t	language:C++
mp_digit	libtommath/tommath.h	/^   typedef unsigned char      mp_digit;$/;"	t	language:C++
mp_digit	libtommath/tommath.h	/^   typedef unsigned long      mp_digit;$/;"	t	language:C++
mp_digit	libtommath/tommath.h	/^   typedef unsigned short     mp_digit;$/;"	t	language:C++
mp_div	libtomcrypt/src/headers/tomcrypt_math.h	477;"	d	language:C++
mp_div	libtommath/bn_mp_div.c	/^int mp_div (mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, mp_int * d)
mp_div	libtommath/bn_mp_div.c	/^int mp_div(mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, mp_int * d)
mp_div	libtommath/mtest/mpi.c	/^mp_err mp_div(mp_int *a, mp_int *b, mp_int *q, mp_int *r)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *q, mp_int *r)
mp_div	libtommath/mtest/mpi.h	/^mp_err mp_div(mp_int *a, mp_int *b, mp_int *q, mp_int *r);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *q, mp_int *r)
mp_div	libtommath/pre_gen/mpi.c	/^int mp_div (mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, mp_int * d)
mp_div	libtommath/pre_gen/mpi.c	/^int mp_div(mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, mp_int * d)
mp_div	libtommath/tommath.h	/^int mp_div(mp_int *a, mp_int *b, mp_int *c, mp_int *d);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c, mp_int *d)
mp_div_2	libtomcrypt/src/headers/tomcrypt_math.h	478;"	d	language:C++
mp_div_2	libtommath/bn_mp_div_2.c	/^int mp_div_2(mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_div_2	libtommath/mtest/mpi.c	/^mp_err mp_div_2(mp_int *a, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *c)
mp_div_2	libtommath/mtest/mpi.h	/^mp_err mp_div_2(mp_int *a, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *c)
mp_div_2	libtommath/pre_gen/mpi.c	/^int mp_div_2(mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_div_2	libtommath/tommath.h	/^int mp_div_2(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_div_2d	libtommath/bn_mp_div_2d.c	/^int mp_div_2d (mp_int * a, int b, mp_int * c, mp_int * d)$/;"	f	language:C	signature:(mp_int * a, int b, mp_int * c, mp_int * d)
mp_div_2d	libtommath/mtest/mpi.c	/^mp_err mp_div_2d(mp_int *a, mp_digit d, mp_int *q, mp_int *r)$/;"	f	language:C	signature:(mp_int *a, mp_digit d, mp_int *q, mp_int *r)
mp_div_2d	libtommath/mtest/mpi.h	/^mp_err mp_div_2d(mp_int *a, mp_digit d, mp_int *q, mp_int *r);$/;"	p	language:C++	signature:(mp_int *a, mp_digit d, mp_int *q, mp_int *r)
mp_div_2d	libtommath/pre_gen/mpi.c	/^int mp_div_2d (mp_int * a, int b, mp_int * c, mp_int * d)$/;"	f	language:C	signature:(mp_int * a, int b, mp_int * c, mp_int * d)
mp_div_2d	libtommath/tommath.h	/^int mp_div_2d(mp_int *a, int b, mp_int *c, mp_int *d);$/;"	p	language:C++	signature:(mp_int *a, int b, mp_int *c, mp_int *d)
mp_div_3	libtommath/bn_mp_div_3.c	/^mp_div_3 (mp_int * a, mp_int *c, mp_digit * d)$/;"	f	language:C	signature:(mp_int * a, mp_int *c, mp_digit * d)
mp_div_3	libtommath/pre_gen/mpi.c	/^mp_div_3 (mp_int * a, mp_int *c, mp_digit * d)$/;"	f	language:C	signature:(mp_int * a, mp_int *c, mp_digit * d)
mp_div_3	libtommath/tommath.h	/^int mp_div_3(mp_int *a, mp_int *c, mp_digit *d);$/;"	p	language:C++	signature:(mp_int *a, mp_int *c, mp_digit *d)
mp_div_d	libtommath/bn_mp_div_d.c	/^int mp_div_d (mp_int * a, mp_digit b, mp_int * c, mp_digit * d)$/;"	f	language:C	signature:(mp_int * a, mp_digit b, mp_int * c, mp_digit * d)
mp_div_d	libtommath/mtest/mpi.c	/^mp_err mp_div_d(mp_int *a, mp_digit d, mp_int *q, mp_digit *r)$/;"	f	language:C	signature:(mp_int *a, mp_digit d, mp_int *q, mp_digit *r)
mp_div_d	libtommath/mtest/mpi.h	/^mp_err mp_div_d(mp_int *a, mp_digit d, mp_int *q, mp_digit *r);$/;"	p	language:C++	signature:(mp_int *a, mp_digit d, mp_int *q, mp_digit *r)
mp_div_d	libtommath/pre_gen/mpi.c	/^int mp_div_d (mp_int * a, mp_digit b, mp_int * c, mp_digit * d)$/;"	f	language:C	signature:(mp_int * a, mp_digit b, mp_int * c, mp_digit * d)
mp_div_d	libtommath/tommath.h	/^int mp_div_d(mp_int *a, mp_digit b, mp_int *c, mp_digit *d);$/;"	p	language:C++	signature:(mp_int *a, mp_digit b, mp_int *c, mp_digit *d)
mp_dr_is_modulus	libtommath/bn_mp_dr_is_modulus.c	/^int mp_dr_is_modulus(mp_int *a)$/;"	f	language:C	signature:(mp_int *a)
mp_dr_is_modulus	libtommath/pre_gen/mpi.c	/^int mp_dr_is_modulus(mp_int *a)$/;"	f	language:C	signature:(mp_int *a)
mp_dr_is_modulus	libtommath/tommath.h	/^int mp_dr_is_modulus(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_dr_reduce	libtommath/bn_mp_dr_reduce.c	/^mp_dr_reduce (mp_int * x, mp_int * n, mp_digit k)$/;"	f	language:C	signature:(mp_int * x, mp_int * n, mp_digit k)
mp_dr_reduce	libtommath/pre_gen/mpi.c	/^mp_dr_reduce (mp_int * x, mp_int * n, mp_digit k)$/;"	f	language:C	signature:(mp_int * x, mp_int * n, mp_digit k)
mp_dr_reduce	libtommath/tommath.h	/^int mp_dr_reduce(mp_int *a, mp_int *b, mp_digit mp);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_digit mp)
mp_dr_setup	libtommath/bn_mp_dr_setup.c	/^void mp_dr_setup(mp_int *a, mp_digit *d)$/;"	f	language:C	signature:(mp_int *a, mp_digit *d)
mp_dr_setup	libtommath/pre_gen/mpi.c	/^void mp_dr_setup(mp_int *a, mp_digit *d)$/;"	f	language:C	signature:(mp_int *a, mp_digit *d)
mp_dr_setup	libtommath/tommath.h	/^void mp_dr_setup(mp_int *a, mp_digit *d);$/;"	p	language:C++	signature:(mp_int *a, mp_digit *d)
mp_err	libtommath/mtest/mpi-types.h	/^typedef int                mp_err;$/;"	t	language:C++
mp_err	libtommath/tommath.h	/^typedef int           mp_err;$/;"	t	language:C++
mp_err_string	libtommath/mtest/mpi.c	/^static const char *mp_err_string[] = {$/;"	v	language:C	file:
mp_error_to_string	libtommath/bn_error.c	/^char *mp_error_to_string(int code)$/;"	f	language:C	signature:(int code)
mp_error_to_string	libtommath/pre_gen/mpi.c	/^char *mp_error_to_string(int code)$/;"	f	language:C	signature:(int code)
mp_error_to_string	libtommath/tommath.h	/^char *mp_error_to_string(int code);$/;"	p	language:C++	signature:(int code)
mp_exch	libtomcrypt/src/headers/tomcrypt_math.h	498;"	d	language:C++
mp_exch	libtommath/bn_mp_exch.c	/^mp_exch (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_exch	libtommath/mtest/mpi.c	/^void mp_exch(mp_int *mp1, mp_int *mp2)$/;"	f	language:C	signature:(mp_int *mp1, mp_int *mp2)
mp_exch	libtommath/mtest/mpi.h	/^void   mp_exch(mp_int *mp1, mp_int *mp2);$/;"	p	language:C++	signature:(mp_int *mp1, mp_int *mp2)
mp_exch	libtommath/pre_gen/mpi.c	/^mp_exch (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_exch	libtommath/tommath.h	/^void mp_exch(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_expt	libtommath/mtest/mpi.c	/^mp_err mp_expt(mp_int *a, mp_int *b, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_expt	libtommath/mtest/mpi.h	/^mp_err mp_expt(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_expt_d	libtommath/bn_mp_expt_d.c	/^int mp_expt_d (mp_int * a, mp_digit b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_digit b, mp_int * c)
mp_expt_d	libtommath/mtest/mpi.c	/^mp_err mp_expt_d(mp_int *a, mp_digit d, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_digit d, mp_int *c)
mp_expt_d	libtommath/mtest/mpi.h	/^mp_err mp_expt_d(mp_int *a, mp_digit d, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_digit d, mp_int *c)
mp_expt_d	libtommath/pre_gen/mpi.c	/^int mp_expt_d (mp_int * a, mp_digit b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_digit b, mp_int * c)
mp_expt_d	libtommath/tommath.h	/^int mp_expt_d(mp_int *a, mp_digit b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_digit b, mp_int *c)
mp_exptmod	libtomcrypt/src/headers/tomcrypt_math.h	493;"	d	language:C++
mp_exptmod	libtommath/bn_mp_exptmod.c	/^int mp_exptmod (mp_int * G, mp_int * X, mp_int * P, mp_int * Y)$/;"	f	language:C	signature:(mp_int * G, mp_int * X, mp_int * P, mp_int * Y)
mp_exptmod	libtommath/mtest/mpi.c	/^mp_err mp_exptmod(mp_int *a, mp_int *b, mp_int *m, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *m, mp_int *c)
mp_exptmod	libtommath/mtest/mpi.h	/^mp_err mp_exptmod(mp_int *a, mp_int *b, mp_int *m, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *m, mp_int *c)
mp_exptmod	libtommath/pre_gen/mpi.c	/^int mp_exptmod (mp_int * G, mp_int * X, mp_int * P, mp_int * Y)$/;"	f	language:C	signature:(mp_int * G, mp_int * X, mp_int * P, mp_int * Y)
mp_exptmod	libtommath/tommath.h	/^int mp_exptmod(mp_int *a, mp_int *b, mp_int *c, mp_int *d);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c, mp_int *d)
mp_exptmod_d	libtommath/mtest/mpi.c	/^mp_err mp_exptmod_d(mp_int *a, mp_digit d, mp_int *m, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_digit d, mp_int *m, mp_int *c)
mp_exptmod_d	libtommath/mtest/mpi.h	/^mp_err mp_exptmod_d(mp_int *a, mp_digit d, mp_int *m, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_digit d, mp_int *m, mp_int *c)
mp_exptmod_fast	libtommath/bn_mp_exptmod_fast.c	/^int mp_exptmod_fast (mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)$/;"	f	language:C	signature:(mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)
mp_exptmod_fast	libtommath/pre_gen/mpi.c	/^int mp_exptmod_fast (mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)$/;"	f	language:C	signature:(mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)
mp_exptmod_fast	libtommath/tommath.h	/^int mp_exptmod_fast(mp_int *G, mp_int *X, mp_int *P, mp_int *Y, int mode);$/;"	p	language:C++	signature:(mp_int *G, mp_int *X, mp_int *P, mp_int *Y, int mode)
mp_exteuclid	libtommath/bn_mp_exteuclid.c	/^int mp_exteuclid(mp_int *a, mp_int *b, mp_int *U1, mp_int *U2, mp_int *U3)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *U1, mp_int *U2, mp_int *U3)
mp_exteuclid	libtommath/pre_gen/mpi.c	/^int mp_exteuclid(mp_int *a, mp_int *b, mp_int *U1, mp_int *U2, mp_int *U3)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *U1, mp_int *U2, mp_int *U3)
mp_exteuclid	libtommath/tommath.h	/^int mp_exteuclid(mp_int *a, mp_int *b, mp_int *U1, mp_int *U2, mp_int *U3);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *U1, mp_int *U2, mp_int *U3)
mp_fread	libtommath/bn_mp_fread.c	/^int mp_fread(mp_int *a, int radix, FILE *stream)$/;"	f	language:C	signature:(mp_int *a, int radix, FILE *stream)
mp_fread	libtommath/pre_gen/mpi.c	/^int mp_fread(mp_int *a, int radix, FILE *stream)$/;"	f	language:C	signature:(mp_int *a, int radix, FILE *stream)
mp_fread	libtommath/tommath.h	/^int mp_fread(mp_int *a, int radix, FILE *stream);$/;"	p	language:C++	signature:(mp_int *a, int radix, FILE *stream)
mp_fwrite	libtommath/bn_mp_fwrite.c	/^int mp_fwrite(mp_int *a, int radix, FILE *stream)$/;"	f	language:C	signature:(mp_int *a, int radix, FILE *stream)
mp_fwrite	libtommath/pre_gen/mpi.c	/^int mp_fwrite(mp_int *a, int radix, FILE *stream)$/;"	f	language:C	signature:(mp_int *a, int radix, FILE *stream)
mp_fwrite	libtommath/tommath.h	/^int mp_fwrite(mp_int *a, int radix, FILE *stream);$/;"	p	language:C++	signature:(mp_int *a, int radix, FILE *stream)
mp_gcd	libtomcrypt/src/headers/tomcrypt_math.h	481;"	d	language:C++
mp_gcd	libtommath/bn_mp_gcd.c	/^int mp_gcd (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_gcd	libtommath/mtest/mpi.c	/^mp_err mp_gcd(mp_int *a, mp_int *b, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_gcd	libtommath/mtest/mpi.h	/^mp_err mp_gcd(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_gcd	libtommath/pre_gen/mpi.c	/^int mp_gcd (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_gcd	libtommath/tommath.h	/^int mp_gcd(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_get_digit	libtomcrypt/src/headers/tomcrypt_math.h	456;"	d	language:C++
mp_get_digit_count	libtomcrypt/src/headers/tomcrypt_math.h	457;"	d	language:C++
mp_get_int	libtomcrypt/src/headers/tomcrypt_math.h	455;"	d	language:C++
mp_get_int	libtommath/bn_mp_get_int.c	/^unsigned long mp_get_int(mp_int * a) $/;"	f	language:C	signature:(mp_int * a)
mp_get_int	libtommath/pre_gen/mpi.c	/^unsigned long mp_get_int(mp_int * a) $/;"	f	language:C	signature:(mp_int * a)
mp_get_int	libtommath/tommath.h	/^unsigned long mp_get_int(mp_int * a);$/;"	p	language:C++	signature:(mp_int * a)
mp_get_prec	libtommath/mtest/mpi.c	/^unsigned int mp_get_prec(void)$/;"	f	language:C	signature:(void)
mp_get_prec	libtommath/mtest/mpi.h	/^unsigned int mp_get_prec(void);$/;"	p	language:C++	signature:(void)
mp_grow	libtommath/bn_mp_grow.c	/^int mp_grow (mp_int * a, int size)$/;"	f	language:C	signature:(mp_int * a, int size)
mp_grow	libtommath/pre_gen/mpi.c	/^int mp_grow (mp_int * a, int size)$/;"	f	language:C	signature:(mp_int * a, int size)
mp_grow	libtommath/tommath.h	/^int mp_grow(mp_int *a, int size);$/;"	p	language:C++	signature:(mp_int *a, int size)
mp_init	libtomcrypt/src/headers/tomcrypt_math.h	444;"	d	language:C++
mp_init	libtommath/bn_mp_init.c	/^int mp_init (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_init	libtommath/mtest/mpi.c	/^mp_err mp_init(mp_int *mp)$/;"	f	language:C	signature:(mp_int *mp)
mp_init	libtommath/mtest/mpi.h	/^mp_err mp_init(mp_int *mp);$/;"	p	language:C++	signature:(mp_int *mp)
mp_init	libtommath/pre_gen/mpi.c	/^int mp_init (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_init	libtommath/tommath.h	/^int mp_init(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_init_array	libtommath/mtest/mpi.c	/^mp_err mp_init_array(mp_int mp[], int count)$/;"	f	language:C	signature:(mp_int mp[], int count)
mp_init_array	libtommath/mtest/mpi.h	/^mp_err mp_init_array(mp_int mp[], int count);$/;"	p	language:C++	signature:(mp_int mp[], int count)
mp_init_copy	libtomcrypt/src/headers/tomcrypt_math.h	448;"	d	language:C++
mp_init_copy	libtommath/bn_mp_init_copy.c	/^int mp_init_copy (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_init_copy	libtommath/mtest/mpi.c	/^mp_err mp_init_copy(mp_int *mp, mp_int *from)$/;"	f	language:C	signature:(mp_int *mp, mp_int *from)
mp_init_copy	libtommath/mtest/mpi.h	/^mp_err mp_init_copy(mp_int *mp, mp_int *from);$/;"	p	language:C++	signature:(mp_int *mp, mp_int *from)
mp_init_copy	libtommath/pre_gen/mpi.c	/^int mp_init_copy (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_init_copy	libtommath/tommath.h	/^int mp_init_copy(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_init_multi	libtomcrypt/src/headers/tomcrypt_math.h	445;"	d	language:C++
mp_init_multi	libtommath/bn_mp_init_multi.c	/^int mp_init_multi(mp_int *mp, ...) $/;"	f	language:C	signature:(mp_int *mp, ...)
mp_init_multi	libtommath/pre_gen/mpi.c	/^int mp_init_multi(mp_int *mp, ...) $/;"	f	language:C	signature:(mp_int *mp, ...)
mp_init_multi	libtommath/tommath.h	/^int mp_init_multi(mp_int *mp, ...);$/;"	p	language:C++	signature:(mp_int *mp, ...)
mp_init_set	libtommath/bn_mp_init_set.c	/^int mp_init_set (mp_int * a, mp_digit b)$/;"	f	language:C	signature:(mp_int * a, mp_digit b)
mp_init_set	libtommath/pre_gen/mpi.c	/^int mp_init_set (mp_int * a, mp_digit b)$/;"	f	language:C	signature:(mp_int * a, mp_digit b)
mp_init_set	libtommath/tommath.h	/^int mp_init_set (mp_int * a, mp_digit b);$/;"	p	language:C++	signature:(mp_int * a, mp_digit b)
mp_init_set_int	libtommath/bn_mp_init_set_int.c	/^int mp_init_set_int (mp_int * a, unsigned long b)$/;"	f	language:C	signature:(mp_int * a, unsigned long b)
mp_init_set_int	libtommath/pre_gen/mpi.c	/^int mp_init_set_int (mp_int * a, unsigned long b)$/;"	f	language:C	signature:(mp_int * a, unsigned long b)
mp_init_set_int	libtommath/tommath.h	/^int mp_init_set_int (mp_int * a, unsigned long b);$/;"	p	language:C++	signature:(mp_int * a, unsigned long b)
mp_init_size	libtommath/bn_mp_init_size.c	/^int mp_init_size (mp_int * a, int size)$/;"	f	language:C	signature:(mp_int * a, int size)
mp_init_size	libtommath/mtest/mpi.c	/^mp_err mp_init_size(mp_int *mp, mp_size prec)$/;"	f	language:C	signature:(mp_int *mp, mp_size prec)
mp_init_size	libtommath/mtest/mpi.h	/^mp_err mp_init_size(mp_int *mp, mp_size prec);$/;"	p	language:C++	signature:(mp_int *mp, mp_size prec)
mp_init_size	libtommath/pre_gen/mpi.c	/^int mp_init_size (mp_int * a, int size)$/;"	f	language:C	signature:(mp_int * a, int size)
mp_init_size	libtommath/tommath.h	/^int mp_init_size(mp_int *a, int size);$/;"	p	language:C++	signature:(mp_int *a, int size)
mp_int	libtommath/mtest/mpi.h	/^} mp_int;$/;"	t	language:C++	typeref:struct:__anon23
mp_int	libtommath/tommath.h	/^} mp_int;$/;"	t	language:C++	typeref:struct:__anon18
mp_invmod	libtomcrypt/src/headers/tomcrypt_math.h	486;"	d	language:C++
mp_invmod	libtommath/bn_mp_invmod.c	/^int mp_invmod (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_invmod	libtommath/mtest/mpi.c	/^mp_err mp_invmod(mp_int *a, mp_int *m, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *m, mp_int *c)
mp_invmod	libtommath/mtest/mpi.h	/^mp_err mp_invmod(mp_int *a, mp_int *m, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *m, mp_int *c)
mp_invmod	libtommath/pre_gen/mpi.c	/^int mp_invmod (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_invmod	libtommath/tommath.h	/^int mp_invmod(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_invmod_slow	libtommath/bn_mp_invmod_slow.c	/^int mp_invmod_slow (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_invmod_slow	libtommath/pre_gen/mpi.c	/^int mp_invmod_slow (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_invmod_slow	libtommath/tommath.h	/^int mp_invmod_slow (mp_int * a, mp_int * b, mp_int * c);$/;"	p	language:C++	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_is_square	libtommath/bn_mp_is_square.c	/^int mp_is_square(mp_int *arg,int *ret) $/;"	f	language:C	signature:(mp_int *arg,int *ret)
mp_is_square	libtommath/pre_gen/mpi.c	/^int mp_is_square(mp_int *arg,int *ret) $/;"	f	language:C	signature:(mp_int *arg,int *ret)
mp_is_square	libtommath/tommath.h	/^int mp_is_square(mp_int *arg, int *ret);$/;"	p	language:C++	signature:(mp_int *arg, int *ret)
mp_iseven	libtommath/mtest/mpi.c	/^int    mp_iseven(mp_int *a)$/;"	f	language:C	signature:(mp_int *a)
mp_iseven	libtommath/mtest/mpi.h	/^int    mp_iseven(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_iseven	libtommath/tommath.h	222;"	d	language:C++
mp_isodd	libtomcrypt/src/headers/tomcrypt_math.h	497;"	d	language:C++
mp_isodd	libtommath/mtest/mpi.c	/^int    mp_isodd(mp_int *a)$/;"	f	language:C	signature:(mp_int *a)
mp_isodd	libtommath/mtest/mpi.h	/^int    mp_isodd(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_isodd	libtommath/tommath.h	223;"	d	language:C++
mp_iszero	libtomcrypt/src/headers/tomcrypt_math.h	496;"	d	language:C++
mp_iszero	libtommath/tommath.h	221;"	d	language:C++
mp_jacobi	libtommath/bn_mp_jacobi.c	/^int mp_jacobi (mp_int * a, mp_int * p, int *c)$/;"	f	language:C	signature:(mp_int * a, mp_int * p, int *c)
mp_jacobi	libtommath/pre_gen/mpi.c	/^int mp_jacobi (mp_int * a, mp_int * p, int *c)$/;"	f	language:C	signature:(mp_int * a, mp_int * p, int *c)
mp_jacobi	libtommath/tommath.h	/^int mp_jacobi(mp_int *a, mp_int *n, int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *n, int *c)
mp_karatsuba_mul	libtommath/bn_mp_karatsuba_mul.c	/^int mp_karatsuba_mul (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_karatsuba_mul	libtommath/pre_gen/mpi.c	/^int mp_karatsuba_mul (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_karatsuba_mul	libtommath/tommath.h	/^int mp_karatsuba_mul(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_karatsuba_sqr	libtommath/bn_mp_karatsuba_sqr.c	/^int mp_karatsuba_sqr (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_karatsuba_sqr	libtommath/pre_gen/mpi.c	/^int mp_karatsuba_sqr (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_karatsuba_sqr	libtommath/tommath.h	/^int mp_karatsuba_sqr(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_lcm	libtomcrypt/src/headers/tomcrypt_math.h	482;"	d	language:C++
mp_lcm	libtommath/bn_mp_lcm.c	/^int mp_lcm (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_lcm	libtommath/mtest/mpi.c	/^mp_err mp_lcm(mp_int *a, mp_int *b, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_lcm	libtommath/mtest/mpi.h	/^mp_err mp_lcm(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_lcm	libtommath/pre_gen/mpi.c	/^int mp_lcm (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_lcm	libtommath/tommath.h	/^int mp_lcm(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_lshd	libtommath/bn_mp_lshd.c	/^int mp_lshd (mp_int * a, int b)$/;"	f	language:C	signature:(mp_int * a, int b)
mp_lshd	libtommath/pre_gen/mpi.c	/^int mp_lshd (mp_int * a, int b)$/;"	f	language:C	signature:(mp_int * a, int b)
mp_lshd	libtommath/tommath.h	/^int mp_lshd(mp_int *a, int b);$/;"	p	language:C++	signature:(mp_int *a, int b)
mp_mag_size	libtommath/mtest/mpi.h	206;"	d	language:C++
mp_mag_size	libtommath/tommath.h	544;"	d	language:C++
mp_mod	libtomcrypt/src/headers/tomcrypt_math.h	479;"	d	language:C++
mp_mod	libtommath/bn_mp_mod.c	/^mp_mod (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_mod	libtommath/mtest/mpi.c	/^mp_err mp_mod(mp_int *a, mp_int *m, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *m, mp_int *c)
mp_mod	libtommath/mtest/mpi.h	/^mp_err mp_mod(mp_int *a, mp_int *m, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *m, mp_int *c)
mp_mod	libtommath/pre_gen/mpi.c	/^mp_mod (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_mod	libtommath/tommath.h	/^int mp_mod(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_mod_2d	libtommath/bn_mp_mod_2d.c	/^mp_mod_2d (mp_int * a, int b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, int b, mp_int * c)
mp_mod_2d	libtommath/pre_gen/mpi.c	/^mp_mod_2d (mp_int * a, int b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, int b, mp_int * c)
mp_mod_2d	libtommath/tommath.h	/^int mp_mod_2d(mp_int *a, int b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, int b, mp_int *c)
mp_mod_d	libtomcrypt/src/headers/tomcrypt_math.h	480;"	d	language:C++
mp_mod_d	libtommath/bn_mp_mod_d.c	/^mp_mod_d (mp_int * a, mp_digit b, mp_digit * c)$/;"	f	language:C	signature:(mp_int * a, mp_digit b, mp_digit * c)
mp_mod_d	libtommath/mtest/mpi.c	/^mp_err mp_mod_d(mp_int *a, mp_digit d, mp_digit *c)$/;"	f	language:C	signature:(mp_int *a, mp_digit d, mp_digit *c)
mp_mod_d	libtommath/mtest/mpi.h	/^mp_err mp_mod_d(mp_int *a, mp_digit d, mp_digit *c);$/;"	p	language:C++	signature:(mp_int *a, mp_digit d, mp_digit *c)
mp_mod_d	libtommath/pre_gen/mpi.c	/^mp_mod_d (mp_int * a, mp_digit b, mp_digit * c)$/;"	f	language:C	signature:(mp_int * a, mp_digit b, mp_digit * c)
mp_mod_d	libtommath/tommath.h	/^int mp_mod_d(mp_int *a, mp_digit b, mp_digit *c);$/;"	p	language:C++	signature:(mp_int *a, mp_digit b, mp_digit *c)
mp_montgomery_calc_normalization	libtommath/bn_mp_montgomery_calc_normalization.c	/^int mp_montgomery_calc_normalization (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_montgomery_calc_normalization	libtommath/pre_gen/mpi.c	/^int mp_montgomery_calc_normalization (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_montgomery_calc_normalization	libtommath/tommath.h	/^int mp_montgomery_calc_normalization(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_montgomery_free	libtomcrypt/src/headers/tomcrypt_math.h	491;"	d	language:C++
mp_montgomery_normalization	libtomcrypt/src/headers/tomcrypt_math.h	489;"	d	language:C++
mp_montgomery_reduce	libtomcrypt/src/headers/tomcrypt_math.h	490;"	d	language:C++
mp_montgomery_reduce	libtommath/bn_mp_montgomery_reduce.c	/^mp_montgomery_reduce (mp_int * x, mp_int * n, mp_digit rho)$/;"	f	language:C	signature:(mp_int * x, mp_int * n, mp_digit rho)
mp_montgomery_reduce	libtommath/pre_gen/mpi.c	/^mp_montgomery_reduce (mp_int * x, mp_int * n, mp_digit rho)$/;"	f	language:C	signature:(mp_int * x, mp_int * n, mp_digit rho)
mp_montgomery_reduce	libtommath/tommath.h	/^int mp_montgomery_reduce(mp_int *a, mp_int *m, mp_digit mp);$/;"	p	language:C++	signature:(mp_int *a, mp_int *m, mp_digit mp)
mp_montgomery_setup	libtomcrypt/src/headers/tomcrypt_math.h	488;"	d	language:C++
mp_montgomery_setup	libtommath/bn_mp_montgomery_setup.c	/^mp_montgomery_setup (mp_int * n, mp_digit * rho)$/;"	f	language:C	signature:(mp_int * n, mp_digit * rho)
mp_montgomery_setup	libtommath/pre_gen/mpi.c	/^mp_montgomery_setup (mp_int * n, mp_digit * rho)$/;"	f	language:C	signature:(mp_int * n, mp_digit * rho)
mp_montgomery_setup	libtommath/tommath.h	/^int mp_montgomery_setup(mp_int *a, mp_digit *mp);$/;"	p	language:C++	signature:(mp_int *a, mp_digit *mp)
mp_mul	libtomcrypt/src/headers/tomcrypt_math.h	474;"	d	language:C++
mp_mul	libtommath/bn_mp_mul.c	/^int mp_mul (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_mul	libtommath/mtest/mpi.c	/^mp_err mp_mul(mp_int *a, mp_int *b, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_mul	libtommath/mtest/mpi.h	/^mp_err mp_mul(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_mul	libtommath/pre_gen/mpi.c	/^int mp_mul (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_mul	libtommath/tommath.h	/^int mp_mul(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_mul_2	libtommath/bn_mp_mul_2.c	/^int mp_mul_2(mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_mul_2	libtommath/mtest/mpi.c	/^mp_err mp_mul_2(mp_int *a, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *c)
mp_mul_2	libtommath/mtest/mpi.h	/^mp_err mp_mul_2(mp_int *a, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *c)
mp_mul_2	libtommath/pre_gen/mpi.c	/^int mp_mul_2(mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_mul_2	libtommath/tommath.h	/^int mp_mul_2(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_mul_2d	libtommath/bn_mp_mul_2d.c	/^int mp_mul_2d (mp_int * a, int b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, int b, mp_int * c)
mp_mul_2d	libtommath/mtest/mpi.c	/^mp_err mp_mul_2d(mp_int *a, mp_digit d, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_digit d, mp_int *c)
mp_mul_2d	libtommath/mtest/mpi.h	/^mp_err mp_mul_2d(mp_int *a, mp_digit d, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_digit d, mp_int *c)
mp_mul_2d	libtommath/pre_gen/mpi.c	/^int mp_mul_2d (mp_int * a, int b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, int b, mp_int * c)
mp_mul_2d	libtommath/tommath.h	/^int mp_mul_2d(mp_int *a, int b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, int b, mp_int *c)
mp_mul_d	libtomcrypt/src/headers/tomcrypt_math.h	475;"	d	language:C++
mp_mul_d	libtommath/bn_mp_mul_d.c	/^mp_mul_d (mp_int * a, mp_digit b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_digit b, mp_int * c)
mp_mul_d	libtommath/mtest/mpi.c	/^mp_err mp_mul_d(mp_int *a, mp_digit d, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_digit d, mp_int *b)
mp_mul_d	libtommath/mtest/mpi.h	/^mp_err mp_mul_d(mp_int *a, mp_digit d, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_digit d, mp_int *b)
mp_mul_d	libtommath/pre_gen/mpi.c	/^mp_mul_d (mp_int * a, mp_digit b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_digit b, mp_int * c)
mp_mul_d	libtommath/tommath.h	/^int mp_mul_d(mp_int *a, mp_digit b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_digit b, mp_int *c)
mp_mulmod	libtomcrypt/src/headers/tomcrypt_math.h	484;"	d	language:C++
mp_mulmod	libtommath/bn_mp_mulmod.c	/^int mp_mulmod (mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, mp_int * d)
mp_mulmod	libtommath/mtest/mpi.c	/^mp_err mp_mulmod(mp_int *a, mp_int *b, mp_int *m, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *m, mp_int *c)
mp_mulmod	libtommath/mtest/mpi.h	/^mp_err mp_mulmod(mp_int *a, mp_int *b, mp_int *m, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *m, mp_int *c)
mp_mulmod	libtommath/pre_gen/mpi.c	/^int mp_mulmod (mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, mp_int * d)
mp_mulmod	libtommath/tommath.h	/^int mp_mulmod(mp_int *a, mp_int *b, mp_int *c, mp_int *d);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c, mp_int *d)
mp_n_root	libtommath/bn_mp_n_root.c	/^int mp_n_root (mp_int * a, mp_digit b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_digit b, mp_int * c)
mp_n_root	libtommath/pre_gen/mpi.c	/^int mp_n_root (mp_int * a, mp_digit b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_digit b, mp_int * c)
mp_n_root	libtommath/tommath.h	/^int mp_n_root(mp_int *a, mp_digit b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_digit b, mp_int *c)
mp_neg	libtomcrypt/src/headers/tomcrypt_math.h	450;"	d	language:C++
mp_neg	libtommath/bn_mp_neg.c	/^int mp_neg (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_neg	libtommath/mtest/mpi.c	/^mp_err mp_neg(mp_int *a, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
mp_neg	libtommath/mtest/mpi.h	/^mp_err mp_neg(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_neg	libtommath/pre_gen/mpi.c	/^int mp_neg (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_neg	libtommath/tommath.h	/^int mp_neg(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_or	libtommath/bn_mp_or.c	/^int mp_or (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_or	libtommath/pre_gen/mpi.c	/^int mp_or (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_or	libtommath/tommath.h	/^int mp_or(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_prime_fermat	libtommath/bn_mp_prime_fermat.c	/^int mp_prime_fermat (mp_int * a, mp_int * b, int *result)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, int *result)
mp_prime_fermat	libtommath/pre_gen/mpi.c	/^int mp_prime_fermat (mp_int * a, mp_int * b, int *result)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, int *result)
mp_prime_fermat	libtommath/tommath.h	/^int mp_prime_fermat(mp_int *a, mp_int *b, int *result);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, int *result)
mp_prime_is_divisible	libtommath/bn_mp_prime_is_divisible.c	/^int mp_prime_is_divisible (mp_int * a, int *result)$/;"	f	language:C	signature:(mp_int * a, int *result)
mp_prime_is_divisible	libtommath/pre_gen/mpi.c	/^int mp_prime_is_divisible (mp_int * a, int *result)$/;"	f	language:C	signature:(mp_int * a, int *result)
mp_prime_is_divisible	libtommath/tommath.h	/^int mp_prime_is_divisible(mp_int *a, int *result);$/;"	p	language:C++	signature:(mp_int *a, int *result)
mp_prime_is_prime	libtomcrypt/src/headers/tomcrypt_math.h	494;"	d	language:C++
mp_prime_is_prime	libtommath/bn_mp_prime_is_prime.c	/^int mp_prime_is_prime (mp_int * a, int t, int *result)$/;"	f	language:C	signature:(mp_int * a, int t, int *result)
mp_prime_is_prime	libtommath/pre_gen/mpi.c	/^int mp_prime_is_prime (mp_int * a, int t, int *result)$/;"	f	language:C	signature:(mp_int * a, int t, int *result)
mp_prime_is_prime	libtommath/tommath.h	/^int mp_prime_is_prime(mp_int *a, int t, int *result);$/;"	p	language:C++	signature:(mp_int *a, int t, int *result)
mp_prime_miller_rabin	libtommath/bn_mp_prime_miller_rabin.c	/^int mp_prime_miller_rabin (mp_int * a, mp_int * b, int *result)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, int *result)
mp_prime_miller_rabin	libtommath/pre_gen/mpi.c	/^int mp_prime_miller_rabin (mp_int * a, mp_int * b, int *result)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, int *result)
mp_prime_miller_rabin	libtommath/tommath.h	/^int mp_prime_miller_rabin(mp_int *a, mp_int *b, int *result);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, int *result)
mp_prime_next_prime	libtommath/bn_mp_prime_next_prime.c	/^int mp_prime_next_prime(mp_int *a, int t, int bbs_style)$/;"	f	language:C	signature:(mp_int *a, int t, int bbs_style)
mp_prime_next_prime	libtommath/pre_gen/mpi.c	/^int mp_prime_next_prime(mp_int *a, int t, int bbs_style)$/;"	f	language:C	signature:(mp_int *a, int t, int bbs_style)
mp_prime_next_prime	libtommath/tommath.h	/^int mp_prime_next_prime(mp_int *a, int t, int bbs_style);$/;"	p	language:C++	signature:(mp_int *a, int t, int bbs_style)
mp_prime_rabin_miller_trials	libtommath/bn_mp_prime_rabin_miller_trials.c	/^int mp_prime_rabin_miller_trials(int size)$/;"	f	language:C	signature:(int size)
mp_prime_rabin_miller_trials	libtommath/pre_gen/mpi.c	/^int mp_prime_rabin_miller_trials(int size)$/;"	f	language:C	signature:(int size)
mp_prime_rabin_miller_trials	libtommath/tommath.h	/^int mp_prime_rabin_miller_trials(int size);$/;"	p	language:C++	signature:(int size)
mp_prime_random	libtommath/tommath.h	501;"	d	language:C++
mp_prime_random_ex	libtommath/bn_mp_prime_random_ex.c	/^int mp_prime_random_ex(mp_int *a, int t, int size, int flags, ltm_prime_callback cb, void *dat)$/;"	f	language:C	signature:(mp_int *a, int t, int size, int flags, ltm_prime_callback cb, void *dat)
mp_prime_random_ex	libtommath/pre_gen/mpi.c	/^int mp_prime_random_ex(mp_int *a, int t, int size, int flags, ltm_prime_callback cb, void *dat)$/;"	f	language:C	signature:(mp_int *a, int t, int size, int flags, ltm_prime_callback cb, void *dat)
mp_prime_random_ex	libtommath/tommath.h	/^int mp_prime_random_ex(mp_int *a, int t, int size, int flags, ltm_prime_callback cb, void *dat);$/;"	p	language:C++	signature:(mp_int *a, int t, int size, int flags, ltm_prime_callback cb, void *dat)
mp_print	libtommath/mtest/mpi.c	/^void   mp_print(mp_int *mp, FILE *ofp)$/;"	f	language:C	signature:(mp_int *mp, FILE *ofp)
mp_print	libtommath/mtest/mpi.h	/^void   mp_print(mp_int *mp, FILE *ofp);$/;"	p	language:C++	signature:(mp_int *mp, FILE *ofp)
mp_radix_size	libtommath/bn_mp_radix_size.c	/^int mp_radix_size (mp_int * a, int radix, int *size)$/;"	f	language:C	signature:(mp_int * a, int radix, int *size)
mp_radix_size	libtommath/mtest/mpi.c	/^int    mp_radix_size(mp_int *mp, int radix)$/;"	f	language:C	signature:(mp_int *mp, int radix)
mp_radix_size	libtommath/mtest/mpi.h	/^int    mp_radix_size(mp_int *mp, int radix);$/;"	p	language:C++	signature:(mp_int *mp, int radix)
mp_radix_size	libtommath/pre_gen/mpi.c	/^int mp_radix_size (mp_int * a, int radix, int *size)$/;"	f	language:C	signature:(mp_int * a, int radix, int *size)
mp_radix_size	libtommath/tommath.h	/^int mp_radix_size(mp_int *a, int radix, int *size);$/;"	p	language:C++	signature:(mp_int *a, int radix, int *size)
mp_rand	libtommath/bn_mp_rand.c	/^mp_rand (mp_int * a, int digits)$/;"	f	language:C	signature:(mp_int * a, int digits)
mp_rand	libtommath/pre_gen/mpi.c	/^mp_rand (mp_int * a, int digits)$/;"	f	language:C	signature:(mp_int * a, int digits)
mp_rand	libtommath/tommath.h	/^int mp_rand(mp_int *a, int digits);$/;"	p	language:C++	signature:(mp_int *a, int digits)
mp_raw_size	libtommath/mtest/mpi.h	203;"	d	language:C++
mp_raw_size	libtommath/tommath.h	541;"	d	language:C++
mp_read_mag	libtommath/mtest/mpi.h	205;"	d	language:C++
mp_read_mag	libtommath/tommath.h	543;"	d	language:C++
mp_read_radix	libtomcrypt/src/headers/tomcrypt_math.h	464;"	d	language:C++
mp_read_radix	libtommath/bn_mp_read_radix.c	/^int mp_read_radix (mp_int * a, const char *str, int radix)$/;"	f	language:C	signature:(mp_int * a, const char *str, int radix)
mp_read_radix	libtommath/mtest/mpi.c	/^mp_err  mp_read_radix(mp_int *mp, unsigned char *str, int radix)$/;"	f	language:C	signature:(mp_int *mp, unsigned char *str, int radix)
mp_read_radix	libtommath/mtest/mpi.h	/^mp_err mp_read_radix(mp_int *mp, unsigned char *str, int radix);$/;"	p	language:C++	signature:(mp_int *mp, unsigned char *str, int radix)
mp_read_radix	libtommath/pre_gen/mpi.c	/^int mp_read_radix (mp_int * a, const char *str, int radix)$/;"	f	language:C	signature:(mp_int * a, const char *str, int radix)
mp_read_radix	libtommath/tommath.h	/^int mp_read_radix(mp_int *a, const char *str, int radix);$/;"	p	language:C++	signature:(mp_int *a, const char *str, int radix)
mp_read_raw	libtommath/mtest/mpi.h	202;"	d	language:C++
mp_read_raw	libtommath/tommath.h	540;"	d	language:C++
mp_read_signed_bin	libtommath/bn_mp_read_signed_bin.c	/^int mp_read_signed_bin (mp_int * a, const unsigned char *b, int c)$/;"	f	language:C	signature:(mp_int * a, const unsigned char *b, int c)
mp_read_signed_bin	libtommath/mtest/mpi.c	/^mp_err  mp_read_signed_bin(mp_int *mp, unsigned char *str, int len)$/;"	f	language:C	signature:(mp_int *mp, unsigned char *str, int len)
mp_read_signed_bin	libtommath/mtest/mpi.h	/^mp_err mp_read_signed_bin(mp_int *mp, unsigned char *str, int len);$/;"	p	language:C++	signature:(mp_int *mp, unsigned char *str, int len)
mp_read_signed_bin	libtommath/pre_gen/mpi.c	/^int mp_read_signed_bin (mp_int * a, const unsigned char *b, int c)$/;"	f	language:C	signature:(mp_int * a, const unsigned char *b, int c)
mp_read_signed_bin	libtommath/tommath.h	/^int mp_read_signed_bin(mp_int *a, const unsigned char *b, int c);$/;"	p	language:C++	signature:(mp_int *a, const unsigned char *b, int c)
mp_read_unsigned_bin	libtomcrypt/src/headers/tomcrypt_math.h	468;"	d	language:C++
mp_read_unsigned_bin	libtommath/bn_mp_read_unsigned_bin.c	/^int mp_read_unsigned_bin (mp_int * a, const unsigned char *b, int c)$/;"	f	language:C	signature:(mp_int * a, const unsigned char *b, int c)
mp_read_unsigned_bin	libtommath/mtest/mpi.c	/^mp_err  mp_read_unsigned_bin(mp_int *mp, unsigned char *str, int len)$/;"	f	language:C	signature:(mp_int *mp, unsigned char *str, int len)
mp_read_unsigned_bin	libtommath/mtest/mpi.h	/^mp_err mp_read_unsigned_bin(mp_int *mp, unsigned char *str, int len);$/;"	p	language:C++	signature:(mp_int *mp, unsigned char *str, int len)
mp_read_unsigned_bin	libtommath/pre_gen/mpi.c	/^int mp_read_unsigned_bin (mp_int * a, const unsigned char *b, int c)$/;"	f	language:C	signature:(mp_int * a, const unsigned char *b, int c)
mp_read_unsigned_bin	libtommath/tommath.h	/^int mp_read_unsigned_bin(mp_int *a, const unsigned char *b, int c);$/;"	p	language:C++	signature:(mp_int *a, const unsigned char *b, int c)
mp_reduce	libtommath/bn_mp_reduce.c	/^int mp_reduce (mp_int * x, mp_int * m, mp_int * mu)$/;"	f	language:C	signature:(mp_int * x, mp_int * m, mp_int * mu)
mp_reduce	libtommath/pre_gen/mpi.c	/^int mp_reduce (mp_int * x, mp_int * m, mp_int * mu)$/;"	f	language:C	signature:(mp_int * x, mp_int * m, mp_int * mu)
mp_reduce	libtommath/tommath.h	/^int mp_reduce(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_reduce_2k	libtommath/bn_mp_reduce_2k.c	/^int mp_reduce_2k(mp_int *a, mp_int *n, mp_digit d)$/;"	f	language:C	signature:(mp_int *a, mp_int *n, mp_digit d)
mp_reduce_2k	libtommath/pre_gen/mpi.c	/^int mp_reduce_2k(mp_int *a, mp_int *n, mp_digit d)$/;"	f	language:C	signature:(mp_int *a, mp_int *n, mp_digit d)
mp_reduce_2k	libtommath/tommath.h	/^int mp_reduce_2k(mp_int *a, mp_int *n, mp_digit d);$/;"	p	language:C++	signature:(mp_int *a, mp_int *n, mp_digit d)
mp_reduce_2k_l	libtommath/bn_mp_reduce_2k_l.c	/^int mp_reduce_2k_l(mp_int *a, mp_int *n, mp_int *d)$/;"	f	language:C	signature:(mp_int *a, mp_int *n, mp_int *d)
mp_reduce_2k_l	libtommath/pre_gen/mpi.c	/^int mp_reduce_2k_l(mp_int *a, mp_int *n, mp_int *d)$/;"	f	language:C	signature:(mp_int *a, mp_int *n, mp_int *d)
mp_reduce_2k_l	libtommath/tommath.h	/^int mp_reduce_2k_l(mp_int *a, mp_int *n, mp_int *d);$/;"	p	language:C++	signature:(mp_int *a, mp_int *n, mp_int *d)
mp_reduce_2k_setup	libtommath/bn_mp_reduce_2k_setup.c	/^int mp_reduce_2k_setup(mp_int *a, mp_digit *d)$/;"	f	language:C	signature:(mp_int *a, mp_digit *d)
mp_reduce_2k_setup	libtommath/pre_gen/mpi.c	/^int mp_reduce_2k_setup(mp_int *a, mp_digit *d)$/;"	f	language:C	signature:(mp_int *a, mp_digit *d)
mp_reduce_2k_setup	libtommath/tommath.h	/^int mp_reduce_2k_setup(mp_int *a, mp_digit *d);$/;"	p	language:C++	signature:(mp_int *a, mp_digit *d)
mp_reduce_2k_setup_l	libtommath/bn_mp_reduce_2k_setup_l.c	/^int mp_reduce_2k_setup_l(mp_int *a, mp_int *d)$/;"	f	language:C	signature:(mp_int *a, mp_int *d)
mp_reduce_2k_setup_l	libtommath/pre_gen/mpi.c	/^int mp_reduce_2k_setup_l(mp_int *a, mp_int *d)$/;"	f	language:C	signature:(mp_int *a, mp_int *d)
mp_reduce_2k_setup_l	libtommath/tommath.h	/^int mp_reduce_2k_setup_l(mp_int *a, mp_int *d);$/;"	p	language:C++	signature:(mp_int *a, mp_int *d)
mp_reduce_is_2k	libtommath/bn_mp_reduce_is_2k.c	/^int mp_reduce_is_2k(mp_int *a)$/;"	f	language:C	signature:(mp_int *a)
mp_reduce_is_2k	libtommath/pre_gen/mpi.c	/^int mp_reduce_is_2k(mp_int *a)$/;"	f	language:C	signature:(mp_int *a)
mp_reduce_is_2k	libtommath/tommath.h	/^int mp_reduce_is_2k(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_reduce_is_2k_l	libtommath/bn_mp_reduce_is_2k_l.c	/^int mp_reduce_is_2k_l(mp_int *a)$/;"	f	language:C	signature:(mp_int *a)
mp_reduce_is_2k_l	libtommath/pre_gen/mpi.c	/^int mp_reduce_is_2k_l(mp_int *a)$/;"	f	language:C	signature:(mp_int *a)
mp_reduce_is_2k_l	libtommath/tommath.h	/^int mp_reduce_is_2k_l(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_reduce_setup	libtommath/bn_mp_reduce_setup.c	/^int mp_reduce_setup (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_reduce_setup	libtommath/pre_gen/mpi.c	/^int mp_reduce_setup (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_reduce_setup	libtommath/tommath.h	/^int mp_reduce_setup(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_rshd	libtommath/bn_mp_rshd.c	/^void mp_rshd (mp_int * a, int b)$/;"	f	language:C	signature:(mp_int * a, int b)
mp_rshd	libtommath/pre_gen/mpi.c	/^void mp_rshd (mp_int * a, int b)$/;"	f	language:C	signature:(mp_int * a, int b)
mp_rshd	libtommath/tommath.h	/^void mp_rshd(mp_int *a, int b);$/;"	p	language:C++	signature:(mp_int *a, int b)
mp_s_rmap	libtommath/bn_mp_radix_smap.c	/^const char *mp_s_rmap = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+\/";$/;"	v	language:C
mp_s_rmap	libtommath/pre_gen/mpi.c	/^const char *mp_s_rmap = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+\/";$/;"	v	language:C
mp_set	libtomcrypt/src/headers/tomcrypt_math.h	453;"	d	language:C++
mp_set	libtommath/bn_mp_set.c	/^void mp_set (mp_int * a, mp_digit b)$/;"	f	language:C	signature:(mp_int * a, mp_digit b)
mp_set	libtommath/mtest/mpi.c	/^void   mp_set(mp_int *mp, mp_digit d)$/;"	f	language:C	signature:(mp_int *mp, mp_digit d)
mp_set	libtommath/mtest/mpi.h	/^void   mp_set(mp_int *mp, mp_digit d);$/;"	p	language:C++	signature:(mp_int *mp, mp_digit d)
mp_set	libtommath/pre_gen/mpi.c	/^void mp_set (mp_int * a, mp_digit b)$/;"	f	language:C	signature:(mp_int * a, mp_digit b)
mp_set	libtommath/tommath.h	/^void mp_set(mp_int *a, mp_digit b);$/;"	p	language:C++	signature:(mp_int *a, mp_digit b)
mp_set_int	libtomcrypt/src/headers/tomcrypt_math.h	454;"	d	language:C++
mp_set_int	libtommath/bn_mp_set_int.c	/^int mp_set_int (mp_int * a, unsigned long b)$/;"	f	language:C	signature:(mp_int * a, unsigned long b)
mp_set_int	libtommath/mtest/mpi.c	/^mp_err mp_set_int(mp_int *mp, long z)$/;"	f	language:C	signature:(mp_int *mp, long z)
mp_set_int	libtommath/mtest/mpi.h	/^mp_err mp_set_int(mp_int *mp, long z);$/;"	p	language:C++	signature:(mp_int *mp, long z)
mp_set_int	libtommath/pre_gen/mpi.c	/^int mp_set_int (mp_int * a, unsigned long b)$/;"	f	language:C	signature:(mp_int * a, unsigned long b)
mp_set_int	libtommath/tommath.h	/^int mp_set_int(mp_int *a, unsigned long b);$/;"	p	language:C++	signature:(mp_int *a, unsigned long b)
mp_set_prec	libtommath/mtest/mpi.c	/^void         mp_set_prec(unsigned int prec)$/;"	f	language:C	signature:(unsigned int prec)
mp_set_prec	libtommath/mtest/mpi.h	/^void         mp_set_prec(unsigned int prec);$/;"	p	language:C++	signature:(unsigned int prec)
mp_shrink	libtommath/bn_mp_shrink.c	/^int mp_shrink (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_shrink	libtommath/mtest/mpi.h	/^mp_err mp_shrink(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_shrink	libtommath/pre_gen/mpi.c	/^int mp_shrink (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_shrink	libtommath/tommath.h	/^int mp_shrink(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_sign	libtommath/mtest/mpi-types.h	/^typedef char               mp_sign;$/;"	t	language:C++
mp_signed_bin_size	libtommath/bn_mp_signed_bin_size.c	/^int mp_signed_bin_size (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_signed_bin_size	libtommath/mtest/mpi.c	/^int    mp_signed_bin_size(mp_int *mp)$/;"	f	language:C	signature:(mp_int *mp)
mp_signed_bin_size	libtommath/mtest/mpi.h	/^int    mp_signed_bin_size(mp_int *mp);$/;"	p	language:C++	signature:(mp_int *mp)
mp_signed_bin_size	libtommath/pre_gen/mpi.c	/^int mp_signed_bin_size (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_signed_bin_size	libtommath/tommath.h	/^int mp_signed_bin_size(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_size	libtommath/mtest/mpi-types.h	/^typedef unsigned int       mp_size;$/;"	t	language:C++
mp_sqr	libtomcrypt/src/headers/tomcrypt_math.h	476;"	d	language:C++
mp_sqr	libtommath/bn_mp_sqr.c	/^mp_sqr (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_sqr	libtommath/mtest/mpi.c	/^mp_err mp_sqr(mp_int *a, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
mp_sqr	libtommath/mtest/mpi.h	/^mp_err mp_sqr(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_sqr	libtommath/mtest/mpi.h	131;"	d	language:C++
mp_sqr	libtommath/pre_gen/mpi.c	/^mp_sqr (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
mp_sqr	libtommath/tommath.h	/^int mp_sqr(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_sqrmod	libtomcrypt/src/headers/tomcrypt_math.h	485;"	d	language:C++
mp_sqrmod	libtommath/bn_mp_sqrmod.c	/^mp_sqrmod (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_sqrmod	libtommath/mtest/mpi.c	/^mp_err mp_sqrmod(mp_int *a, mp_int *m, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *m, mp_int *c)
mp_sqrmod	libtommath/mtest/mpi.h	/^mp_err mp_sqrmod(mp_int *a, mp_int *m, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *m, mp_int *c)
mp_sqrmod	libtommath/mtest/mpi.h	151;"	d	language:C++
mp_sqrmod	libtommath/pre_gen/mpi.c	/^mp_sqrmod (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_sqrmod	libtommath/tommath.h	/^int mp_sqrmod(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_sqrt	libtommath/bn_mp_sqrt.c	/^int mp_sqrt(mp_int *arg, mp_int *ret) $/;"	f	language:C	signature:(mp_int *arg, mp_int *ret)
mp_sqrt	libtommath/mtest/mpi.c	/^mp_err mp_sqrt(mp_int *a, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
mp_sqrt	libtommath/mtest/mpi.h	/^mp_err mp_sqrt(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_sqrt	libtommath/pre_gen/mpi.c	/^int mp_sqrt(mp_int *arg, mp_int *ret) $/;"	f	language:C	signature:(mp_int *arg, mp_int *ret)
mp_sqrt	libtommath/tommath.h	/^int mp_sqrt(mp_int *arg, mp_int *ret);$/;"	p	language:C++	signature:(mp_int *arg, mp_int *ret)
mp_strerror	libtommath/mtest/mpi.c	/^const char  *mp_strerror(mp_err ec)$/;"	f	language:C	signature:(mp_err ec)
mp_strerror	libtommath/mtest/mpi.h	/^const  char  *mp_strerror(mp_err ec);$/;"	p	language:C++	signature:(mp_err ec)
mp_sub	libtomcrypt/src/headers/tomcrypt_math.h	472;"	d	language:C++
mp_sub	libtommath/bn_mp_sub.c	/^mp_sub (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_sub	libtommath/mtest/mpi.c	/^mp_err mp_sub(mp_int *a, mp_int *b, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_sub	libtommath/mtest/mpi.h	/^mp_err mp_sub(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_sub	libtommath/pre_gen/mpi.c	/^mp_sub (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_sub	libtommath/tommath.h	/^int mp_sub(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_sub_d	libtomcrypt/src/headers/tomcrypt_math.h	473;"	d	language:C++
mp_sub_d	libtommath/bn_mp_sub_d.c	/^mp_sub_d (mp_int * a, mp_digit b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_digit b, mp_int * c)
mp_sub_d	libtommath/mtest/mpi.c	/^mp_err mp_sub_d(mp_int *a, mp_digit d, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_digit d, mp_int *b)
mp_sub_d	libtommath/mtest/mpi.h	/^mp_err mp_sub_d(mp_int *a, mp_digit d, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_digit d, mp_int *b)
mp_sub_d	libtommath/pre_gen/mpi.c	/^mp_sub_d (mp_int * a, mp_digit b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_digit b, mp_int * c)
mp_sub_d	libtommath/tommath.h	/^int mp_sub_d(mp_int *a, mp_digit b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_digit b, mp_int *c)
mp_submod	libtommath/bn_mp_submod.c	/^mp_submod (mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, mp_int * d)
mp_submod	libtommath/mtest/mpi.c	/^mp_err mp_submod(mp_int *a, mp_int *b, mp_int *m, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *m, mp_int *c)
mp_submod	libtommath/mtest/mpi.h	/^mp_err mp_submod(mp_int *a, mp_int *b, mp_int *m, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *m, mp_int *c)
mp_submod	libtommath/pre_gen/mpi.c	/^mp_submod (mp_int * a, mp_int * b, mp_int * c, mp_int * d)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, mp_int * d)
mp_submod	libtommath/tommath.h	/^int mp_submod(mp_int *a, mp_int *b, mp_int *c, mp_int *d);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c, mp_int *d)
mp_to64	libtommath/mtest/mtest.c	68;"	d	language:C	file:
mp_to_signed_bin	libtommath/bn_mp_to_signed_bin.c	/^int mp_to_signed_bin (mp_int * a, unsigned char *b)$/;"	f	language:C	signature:(mp_int * a, unsigned char *b)
mp_to_signed_bin	libtommath/mtest/mpi.c	/^mp_err mp_to_signed_bin(mp_int *mp, unsigned char *str)$/;"	f	language:C	signature:(mp_int *mp, unsigned char *str)
mp_to_signed_bin	libtommath/mtest/mpi.h	/^mp_err mp_to_signed_bin(mp_int *mp, unsigned char *str);$/;"	p	language:C++	signature:(mp_int *mp, unsigned char *str)
mp_to_signed_bin	libtommath/pre_gen/mpi.c	/^int mp_to_signed_bin (mp_int * a, unsigned char *b)$/;"	f	language:C	signature:(mp_int * a, unsigned char *b)
mp_to_signed_bin	libtommath/tommath.h	/^int mp_to_signed_bin(mp_int *a,  unsigned char *b);$/;"	p	language:C++	signature:(mp_int *a, unsigned char *b)
mp_to_signed_bin_n	libtommath/bn_mp_to_signed_bin_n.c	/^int mp_to_signed_bin_n (mp_int * a, unsigned char *b, unsigned long *outlen)$/;"	f	language:C	signature:(mp_int * a, unsigned char *b, unsigned long *outlen)
mp_to_signed_bin_n	libtommath/pre_gen/mpi.c	/^int mp_to_signed_bin_n (mp_int * a, unsigned char *b, unsigned long *outlen)$/;"	f	language:C	signature:(mp_int * a, unsigned char *b, unsigned long *outlen)
mp_to_signed_bin_n	libtommath/tommath.h	/^int mp_to_signed_bin_n (mp_int * a, unsigned char *b, unsigned long *outlen);$/;"	p	language:C++	signature:(mp_int * a, unsigned char *b, unsigned long *outlen)
mp_to_unsigned_bin	libtomcrypt/src/headers/tomcrypt_math.h	467;"	d	language:C++
mp_to_unsigned_bin	libtommath/bn_mp_to_unsigned_bin.c	/^int mp_to_unsigned_bin (mp_int * a, unsigned char *b)$/;"	f	language:C	signature:(mp_int * a, unsigned char *b)
mp_to_unsigned_bin	libtommath/mtest/mpi.c	/^mp_err mp_to_unsigned_bin(mp_int *mp, unsigned char *str)$/;"	f	language:C	signature:(mp_int *mp, unsigned char *str)
mp_to_unsigned_bin	libtommath/mtest/mpi.h	/^mp_err mp_to_unsigned_bin(mp_int *mp, unsigned char *str);$/;"	p	language:C++	signature:(mp_int *mp, unsigned char *str)
mp_to_unsigned_bin	libtommath/pre_gen/mpi.c	/^int mp_to_unsigned_bin (mp_int * a, unsigned char *b)$/;"	f	language:C	signature:(mp_int * a, unsigned char *b)
mp_to_unsigned_bin	libtommath/tommath.h	/^int mp_to_unsigned_bin(mp_int *a, unsigned char *b);$/;"	p	language:C++	signature:(mp_int *a, unsigned char *b)
mp_to_unsigned_bin_n	libtommath/bn_mp_to_unsigned_bin_n.c	/^int mp_to_unsigned_bin_n (mp_int * a, unsigned char *b, unsigned long *outlen)$/;"	f	language:C	signature:(mp_int * a, unsigned char *b, unsigned long *outlen)
mp_to_unsigned_bin_n	libtommath/pre_gen/mpi.c	/^int mp_to_unsigned_bin_n (mp_int * a, unsigned char *b, unsigned long *outlen)$/;"	f	language:C	signature:(mp_int * a, unsigned char *b, unsigned long *outlen)
mp_to_unsigned_bin_n	libtommath/tommath.h	/^int mp_to_unsigned_bin_n (mp_int * a, unsigned char *b, unsigned long *outlen);$/;"	p	language:C++	signature:(mp_int * a, unsigned char *b, unsigned long *outlen)
mp_tobinary	libtommath/mtest/mpi.h	217;"	d	language:C++
mp_tobinary	libtommath/tommath.h	547;"	d	language:C++
mp_todecimal	libtommath/mtest/mpi.h	219;"	d	language:C++
mp_todecimal	libtommath/tommath.h	549;"	d	language:C++
mp_tohex	libtomcrypt/src/headers/tomcrypt_math.h	500;"	d	language:C++
mp_tohex	libtommath/mtest/mpi.h	220;"	d	language:C++
mp_tohex	libtommath/tommath.h	550;"	d	language:C++
mp_tomag	libtommath/mtest/mpi.h	207;"	d	language:C++
mp_tomag	libtommath/tommath.h	545;"	d	language:C++
mp_tooctal	libtommath/mtest/mpi.h	218;"	d	language:C++
mp_tooctal	libtommath/tommath.h	548;"	d	language:C++
mp_toom_mul	libtommath/bn_mp_toom_mul.c	/^int mp_toom_mul(mp_int *a, mp_int *b, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_toom_mul	libtommath/pre_gen/mpi.c	/^int mp_toom_mul(mp_int *a, mp_int *b, mp_int *c)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_toom_mul	libtommath/tommath.h	/^int mp_toom_mul(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_toom_sqr	libtommath/bn_mp_toom_sqr.c	/^mp_toom_sqr(mp_int *a, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
mp_toom_sqr	libtommath/pre_gen/mpi.c	/^mp_toom_sqr(mp_int *a, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
mp_toom_sqr	libtommath/tommath.h	/^int mp_toom_sqr(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
mp_toradix	libtomcrypt/src/headers/tomcrypt_math.h	465;"	d	language:C++
mp_toradix	libtommath/bn_mp_toradix.c	/^int mp_toradix (mp_int * a, char *str, int radix)$/;"	f	language:C	signature:(mp_int * a, char *str, int radix)
mp_toradix	libtommath/mtest/mpi.c	/^mp_err mp_toradix(mp_int *mp, unsigned char *str, int radix)$/;"	f	language:C	signature:(mp_int *mp, unsigned char *str, int radix)
mp_toradix	libtommath/mtest/mpi.h	/^mp_err mp_toradix(mp_int *mp, unsigned char *str, int radix);$/;"	p	language:C++	signature:(mp_int *mp, unsigned char *str, int radix)
mp_toradix	libtommath/pre_gen/mpi.c	/^int mp_toradix (mp_int * a, char *str, int radix)$/;"	f	language:C	signature:(mp_int * a, char *str, int radix)
mp_toradix	libtommath/tommath.h	/^int mp_toradix(mp_int *a, char *str, int radix);$/;"	p	language:C++	signature:(mp_int *a, char *str, int radix)
mp_toradix_n	libtommath/bn_mp_toradix_n.c	/^int mp_toradix_n(mp_int * a, char *str, int radix, int maxlen)$/;"	f	language:C	signature:(mp_int * a, char *str, int radix, int maxlen)
mp_toradix_n	libtommath/pre_gen/mpi.c	/^int mp_toradix_n(mp_int * a, char *str, int radix, int maxlen)$/;"	f	language:C	signature:(mp_int * a, char *str, int radix, int maxlen)
mp_toradix_n	libtommath/tommath.h	/^int mp_toradix_n(mp_int * a, char *str, int radix, int maxlen);$/;"	p	language:C++	signature:(mp_int * a, char *str, int radix, int maxlen)
mp_toraw	libtommath/mtest/mpi.h	204;"	d	language:C++
mp_toraw	libtommath/tommath.h	542;"	d	language:C++
mp_unsigned_bin_size	libtomcrypt/src/headers/tomcrypt_math.h	466;"	d	language:C++
mp_unsigned_bin_size	libtommath/bn_mp_unsigned_bin_size.c	/^int mp_unsigned_bin_size (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_unsigned_bin_size	libtommath/mtest/mpi.c	/^int     mp_unsigned_bin_size(mp_int *mp) $/;"	f	language:C	signature:(mp_int *mp)
mp_unsigned_bin_size	libtommath/mtest/mpi.h	/^int    mp_unsigned_bin_size(mp_int *mp);$/;"	p	language:C++	signature:(mp_int *mp)
mp_unsigned_bin_size	libtommath/pre_gen/mpi.c	/^int mp_unsigned_bin_size (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_unsigned_bin_size	libtommath/tommath.h	/^int mp_unsigned_bin_size(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mp_value_radix_size	libtommath/mtest/mpi.c	/^int    mp_value_radix_size(int num, int qty, int radix)$/;"	f	language:C	signature:(int num, int qty, int radix)
mp_value_radix_size	libtommath/mtest/mpi.h	/^int    mp_value_radix_size(int num, int qty, int radix);$/;"	p	language:C++	signature:(int num, int qty, int radix)
mp_word	libtommath/mtest/mpi-types.h	/^typedef unsigned int       mp_word;   \/* 4 byte type *\/$/;"	t	language:C++
mp_word	libtommath/tommath.h	/^   typedef ulong64            mp_word;$/;"	t	language:C++
mp_word	libtommath/tommath.h	/^   typedef unsigned long      mp_word __attribute__ ((mode(TI)));$/;"	t	language:C++
mp_word	libtommath/tommath.h	/^   typedef unsigned long      mp_word;$/;"	t	language:C++
mp_word	libtommath/tommath.h	/^   typedef unsigned short     mp_word;$/;"	t	language:C++
mp_xgcd	libtommath/mtest/mpi.c	/^mp_err mp_xgcd(mp_int *a, mp_int *b, mp_int *g, mp_int *x, mp_int *y)$/;"	f	language:C	signature:(mp_int *a, mp_int *b, mp_int *g, mp_int *x, mp_int *y)
mp_xgcd	libtommath/mtest/mpi.h	/^mp_err mp_xgcd(mp_int *a, mp_int *b, mp_int *g, mp_int *x, mp_int *y);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *g, mp_int *x, mp_int *y)
mp_xor	libtommath/bn_mp_xor.c	/^mp_xor (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_xor	libtommath/pre_gen/mpi.c	/^mp_xor (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
mp_xor	libtommath/tommath.h	/^int mp_xor(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
mp_zero	libtommath/bn_mp_zero.c	/^void mp_zero (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_zero	libtommath/mtest/mpi.c	/^void   mp_zero(mp_int *mp)$/;"	f	language:C	signature:(mp_int *mp)
mp_zero	libtommath/mtest/mpi.h	/^void   mp_zero(mp_int *mp);$/;"	p	language:C++	signature:(mp_int *mp)
mp_zero	libtommath/pre_gen/mpi.c	/^void mp_zero (mp_int * a)$/;"	f	language:C	signature:(mp_int * a)
mp_zero	libtommath/tommath.h	/^void mp_zero(mp_int *a);$/;"	p	language:C++	signature:(mp_int *a)
mpdiv	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*mpdiv)(void *a, void *b, void *c, void *d);$/;"	m	language:C++	struct:__anon54	access:public
mpi_code	libtomcrypt/src/math/ltm_desc.c	/^    int mpi_code, ltc_code;$/;"	m	language:C	struct:__anon28	file:	access:public
mpi_to_ltc_codes	libtomcrypt/src/math/ltm_desc.c	/^} mpi_to_ltc_codes[] = {$/;"	v	language:C	typeref:struct:__anon28	file:
mpi_to_ltc_error	libtomcrypt/src/math/ltm_desc.c	/^static int mpi_to_ltc_error(int err)$/;"	f	language:C	file:	signature:(int err)
mpint_pos	keyimport.c	/^struct mpint_pos { void *start; int bytes; };$/;"	s	language:C	file:
mpint_pos::bytes	keyimport.c	/^struct mpint_pos { void *start; int bytes; };$/;"	m	language:C	struct:mpint_pos	file:	access:public
mpint_pos::start	keyimport.c	/^struct mpint_pos { void *start; int bytes; };$/;"	m	language:C	struct:mpint_pos	file:	access:public
mptobytes	dss.c	/^static unsigned char* mptobytes(mp_int *mp, int *len) {$/;"	f	language:C	file:	signature:(mp_int *mp, int *len)
ms_subtract_diff	sftp-server/misc.c	/^ms_subtract_diff(struct timeval *start, int *ms)$/;"	f	language:C	signature:(struct timeval *start, int *ms)
ms_subtract_diff	sftp-server/misc.h	/^void	 ms_subtract_diff(struct timeval *, int *);$/;"	p	language:C++	signature:(struct timeval *, int *)
ms_to_timeval	sftp-server/misc.c	/^ms_to_timeval(struct timeval *tv, int ms)$/;"	f	language:C	signature:(struct timeval *tv, int ms)
ms_to_timeval	sftp-server/misc.h	/^void	 ms_to_timeval(struct timeval *, int);$/;"	p	language:C++	signature:(struct timeval *, int)
msg	libtommath/bn_error.c	/^     char *msg;$/;"	m	language:C	struct:__anon19	file:	access:public
msg	libtommath/pre_gen/mpi.c	/^     char *msg;$/;"	m	language:C	struct:__anon21	file:	access:public
msgs	libtommath/bn_error.c	/^} msgs[] = {$/;"	v	language:C	typeref:struct:__anon19	file:
msgs	libtommath/pre_gen/mpi.c	/^} msgs[] = {$/;"	v	language:C	typeref:struct:__anon21	file:
mtime	scp.c	786;"	d	language:C	file:
mtime	sftp-server/sftp-common.h	/^	u_int32_t	mtime;$/;"	m	language:C++	struct:Attrib	access:public
mu	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^   void      *mu;             \/* copy of the montgomery constant *\/$/;"	m	language:C	struct:__anon30	file:	access:public
mul	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*mul)(void *a, void *b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
mul	libtomcrypt/src/math/gmp_desc.c	/^static int mul(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
mul	libtomcrypt/src/math/ltm_desc.c	/^static int mul(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
mul	libtomcrypt/src/math/tfm_desc.c	/^static int mul(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
muli	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*muli)(void *a, unsigned long b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
muli	libtomcrypt/src/math/gmp_desc.c	/^static int muli(void *a, unsigned long b, void *c)$/;"	f	language:C	file:	signature:(void *a, unsigned long b, void *c)
muli	libtomcrypt/src/math/ltm_desc.c	/^static int muli(void *a, unsigned long b, void *c)$/;"	f	language:C	file:	signature:(void *a, unsigned long b, void *c)
muli	libtomcrypt/src/math/tfm_desc.c	/^static int muli(void *a, unsigned long b, void *c)$/;"	f	language:C	file:	signature:(void *a, unsigned long b, void *c)
mulmod	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*mulmod)(void *a, void *b, void *c, void *d);$/;"	m	language:C++	struct:__anon54	access:public
mulmod	libtomcrypt/src/math/gmp_desc.c	/^static int mulmod(void *a, void *b, void *c, void *d)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c, void *d)
mulmod	libtomcrypt/src/math/ltm_desc.c	/^static int mulmod(void *a, void *b, void *c, void *d)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c, void *d)
mulmod	libtomcrypt/src/math/tfm_desc.c	/^static int mulmod(void *a, void *b, void *c, void *d)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c, void *d)
multihop_passthrough_args	cli-runopts.c	/^multihop_passthrough_args() {$/;"	f	language:C	file:
mux_callback_fn	sftp-server/channels.h	/^typedef int mux_callback_fn(struct Channel *);$/;"	t	language:C++
mux_ctx	sftp-server/channels.h	/^	void			*mux_ctx;$/;"	m	language:C++	struct:Channel	access:public
mux_rcb	sftp-server/channels.h	/^	mux_callback_fn		*mux_rcb;$/;"	m	language:C++	struct:Channel	access:public
myrng	libtommath/demo/demo.c	/^int myrng(unsigned char *dst, int len, void *dat)$/;"	f	language:C	signature:(unsigned char *dst, int len, void *dat)
mysection{Password Based Cryptography}
n	rsa.h	/^	mp_int* n;$/;"	m	language:C++	struct:__anon1	access:public
n_prime	libtommath/etc/pprime.c	/^int   n_prime;$/;"	v	language:C
nalloc	scpmisc.h	/^	int     nalloc;$/;"	m	language:C++	struct:arglist	access:public
nalloc	sftp-server/misc.h	/^	u_int   nalloc;$/;"	m	language:C++	struct:arglist	access:public
name	algo.h	/^	unsigned char *name; \/* identifying name *\/$/;"	m	language:C++	struct:Algo_Type	access:public
name	channel.h	/^	char *name;$/;"	m	language:C++	struct:ChanType	access:public
name	chansession.h	/^	char* name;$/;"	m	language:C++	struct:SigMap	access:public
name	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   char *name;$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
name	libtomcrypt/src/headers/tomcrypt_hash.h	/^    char *name;$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
name	libtomcrypt/src/headers/tomcrypt_math.h	/^   char *name;$/;"	m	language:C++	struct:__anon54	access:public
name	libtomcrypt/src/headers/tomcrypt_pk.h	/^   char *name; $/;"	m	language:C++	struct:__anon34	access:public
name	libtomcrypt/src/headers/tomcrypt_prng.h	/^    char *name;$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
name	libtomcrypt/testprof/tomcrypt_test.h	/^    char *name, *prov, *req;$/;"	m	language:C++	struct:__anon55	access:public
name	sftp-server/log.c	/^	const char *name;$/;"	m	language:C	struct:__anon4	file:	access:public
name	sftp-server/log.c	/^	const char *name;$/;"	m	language:C	struct:__anon5	file:	access:public
name	sftp-server/sftp-server.c	/^	char *name;$/;"	m	language:C	struct:Handle	file:	access:public
name	sftp-server/sftp-server.c	/^	char *name;$/;"	m	language:C	struct:Stat	file:	access:public
nanosleep	sftp-server/openbsd-compat/bsd-misc.c	/^int nanosleep(const struct timespec *req, struct timespec *rem)$/;"	f	language:C	signature:(const struct timespec *req, struct timespec *rem)
nanosleep	sftp-server/openbsd-compat/bsd-misc.h	/^int nanosleep(const struct timespec *, struct timespec *);$/;"	p	language:C++	signature:(const struct timespec *, struct timespec *)
nanosleep	sftp-server/openbsd-compat/port-aix.h	66;"	d	language:C++
nbuf	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int          nbuf,           \/* number of part-word stream bits buffered *\/$/;"	m	language:C++	struct:sober128_prng	access:public
ndraw	libtommath/demo/demo.c	/^void ndraw(mp_int * a, char *name)$/;"	f	language:C	signature:(mp_int * a, char *name)
ndraw	libtommath/demo/timing.c	/^void ndraw(mp_int * a, char *name)$/;"	f	language:C	signature:(mp_int * a, char *name)
neg	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*neg)(void *src, void *dst);$/;"	m	language:C++	struct:__anon54	access:public
neg	libtomcrypt/src/math/gmp_desc.c	/^static int neg(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
neg	libtomcrypt/src/math/ltm_desc.c	/^static int neg(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
neg	libtomcrypt/src/math/tfm_desc.c	/^static int neg(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
netcat_host	runopts.h	/^	char *netcat_host;$/;"	m	language:C++	struct:cli_runopts	access:public
netcat_port	runopts.h	/^	unsigned int netcat_port;$/;"	m	language:C++	struct:cli_runopts	access:public
new_agent_chan	cli-agentfwd.c	/^static int new_agent_chan(struct Channel * channel) {$/;"	f	language:C	file:	signature:(struct Channel * channel)
new_agent_chan	cli-agentfwd.c	/^static int new_agent_chan(struct Channel * channel);$/;"	p	language:C	file:	signature:(struct Channel * channel)
new_listener	listener.c	/^struct Listener* new_listener(int socks[], unsigned int nsocks,$/;"	f	language:C	signature:(int socks[], unsigned int nsocks, int type, void* typedata, void (*acceptor)(struct Listener* listener, int sock), void (*cleanup)(struct Listener*))
new_listener	listener.h	/^struct Listener* new_listener(int socks[], unsigned int nsocks, $/;"	p	language:C++	signature:(int socks[], unsigned int nsocks, int type, void* typedata, void (*acceptor)(struct Listener* listener, int sock), void (*cleanup)(struct Listener*))
new_sign_key	signkey.c	/^sign_key * new_sign_key() {$/;"	f	language:C
new_sign_key	signkey.h	/^sign_key * new_sign_key();$/;"	p	language:C++	signature:()
newchannel	channel.h	/^struct Channel* newchannel(unsigned int remotechan, $/;"	p	language:C++	signature:(unsigned int remotechan, const struct ChanType *type, unsigned int transwindow, unsigned int transmaxpacket)
newchannel	common-channel.c	/^struct Channel* newchannel(unsigned int remotechan, $/;"	f	language:C	signature:(unsigned int remotechan, const struct ChanType *type, unsigned int transwindow, unsigned int transmaxpacket)
newchansess	svr-chansession.c	/^static int newchansess(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
newchansess	svr-chansession.c	/^static int newchansess(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
newkeys	session.h	/^	struct key_context *newkeys;$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::key_context	access:public
newtcpdirect	svr-tcpfwd.c	/^static int newtcpdirect(struct Channel * channel) {$/;"	f	language:C	file:	signature:(struct Channel * channel)
newtcpdirect	svr-tcpfwd.c	/^static int newtcpdirect(struct Channel * channel);$/;"	p	language:C	file:	signature:(struct Channel * channel)
newtcpforwarded	cli-tcpfwd.c	/^static int newtcpforwarded(struct Channel * channel) {$/;"	f	language:C	file:	signature:(struct Channel * channel)
newtcpforwarded	cli-tcpfwd.c	/^static int newtcpforwarded(struct Channel * channel);$/;"	p	language:C	file:	signature:(struct Channel * channel)
next	libtomcrypt/src/headers/tomcrypt_pk.h	/^   struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	language:C++	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::	access:public
next	list.h	/^	struct _m_list_elem *next;$/;"	m	language:C++	struct:_m_list_elem	typeref:struct:_m_list_elem::_m_list_elem	access:public
next	session.h	/^	struct packetlist *next;$/;"	m	language:C++	struct:packetlist	typeref:struct:packetlist::packetlist	access:public
next_unused	sftp-server/sftp-server.c	/^	int next_unused;$/;"	m	language:C	struct:Handle	file:	access:public
nfds_t	sftp-server/openbsd-compat/bsd-poll.h	/^typedef unsigned int	nfds_t;$/;"	t	language:C++
nltap	libtomcrypt/src/prngs/sober128.c	/^static ulong32 nltap(struct sober128_prng *c)$/;"	f	language:C	file:	signature:(struct sober128_prng *c)
no_agent_forwarding_flag	auth.h	/^	int no_agent_forwarding_flag;$/;"	m	language:C++	struct:PubKeyOptions	access:public
no_cmd	runopts.h	/^	int no_cmd;$/;"	m	language:C++	struct:cli_runopts	access:public
no_port_forwarding_flag	auth.h	/^	int no_port_forwarding_flag;$/;"	m	language:C++	struct:PubKeyOptions	access:public
no_pty_flag	auth.h	/^	int no_pty_flag;$/;"	m	language:C++	struct:PubKeyOptions	access:public
no_results	libtomcrypt/testprof/x86_prof.c	/^int no_results;$/;"	v	language:C
no_x11_forwarding_flag	auth.h	/^	int no_x11_forwarding_flag;$/;"	m	language:C++	struct:PubKeyOptions	access:public
noauthpass	runopts.h	/^	int noauthpass;$/;"	m	language:C++	struct:svr_runopts	access:public
noekeon	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct noekeon_key  noekeon;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::noekeon_key	access:public
noekeon_desc	libtomcrypt/src/ciphers/noekeon.c	/^const struct ltc_cipher_descriptor noekeon_desc =$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
noekeon_done	libtomcrypt/src/ciphers/noekeon.c	/^void noekeon_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
noekeon_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void noekeon_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
noekeon_ecb_decrypt	libtomcrypt/src/ciphers/noekeon.c	/^int noekeon_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
noekeon_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int noekeon_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
noekeon_ecb_encrypt	libtomcrypt/src/ciphers/noekeon.c	/^int noekeon_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
noekeon_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int noekeon_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
noekeon_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct noekeon_key {$/;"	s	language:C++
noekeon_key::K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 K[4], dK[4];$/;"	m	language:C++	struct:noekeon_key	access:public
noekeon_key::dK	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    ulong32 K[4], dK[4];$/;"	m	language:C++	struct:noekeon_key	access:public
noekeon_keysize	libtomcrypt/src/ciphers/noekeon.c	/^int noekeon_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
noekeon_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int noekeon_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
noekeon_setup	libtomcrypt/src/ciphers/noekeon.c	/^int noekeon_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
noekeon_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int noekeon_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
noekeon_test	libtomcrypt/src/ciphers/noekeon.c	/^int noekeon_test(void)$/;"	f	language:C	signature:(void)
noekeon_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int noekeon_test(void);$/;"	p	language:C++	signature:(void)
nolocaltcp	runopts.h	/^	int nolocaltcp;$/;"	m	language:C++	struct:svr_runopts	access:public
noptycommand	svr-chansession.c	/^static int noptycommand(struct Channel *channel, struct ChanSess *chansess) {$/;"	f	language:C	file:	signature:(struct Channel *channel, struct ChanSess *chansess)
noptycommand	svr-chansession.c	/^static int noptycommand(struct Channel *channel, struct ChanSess *chansess);$/;"	p	language:C	file:	signature:(struct Channel *channel, struct ChanSess *chansess)
noremotetcp	runopts.h	/^	int noremotetcp;$/;"	m	language:C++	struct:svr_runopts	access:public
norootlogin	runopts.h	/^	int norootlogin;$/;"	m	language:C++	struct:svr_runopts	access:public
norootpass	runopts.h	/^	int norootpass;$/;"	m	language:C++	struct:svr_runopts	access:public
nospace	scp.c	/^void nospace(void);$/;"	p	language:C	file:	signature:(void)
nsocks	listener.h	/^	unsigned int nsocks;$/;"	m	language:C++	struct:Listener	access:public
num	scpmisc.h	/^	int     num;$/;"	m	language:C++	struct:arglist	access:public
num	sftp-server/misc.h	/^	u_int   num;$/;"	m	language:C++	struct:arglist	access:public
num_handles	sftp-server/sftp-server.c	/^u_int num_handles = 0;$/;"	v	language:C
ocb_decrypt	libtomcrypt/src/encauth/ocb/ocb_decrypt.c	/^int ocb_decrypt(ocb_state *ocb, const unsigned char *ct, unsigned char *pt)$/;"	f	language:C	signature:(ocb_state *ocb, const unsigned char *ct, unsigned char *pt)
ocb_decrypt	libtomcrypt/src/headers/tomcrypt_mac.h	/^int ocb_decrypt(ocb_state *ocb, const unsigned char *ct, unsigned char *pt);$/;"	p	language:C++	signature:(ocb_state *ocb, const unsigned char *ct, unsigned char *pt)
ocb_decrypt_verify_memory	libtomcrypt/src/encauth/ocb/ocb_decrypt_verify_memory.c	/^int ocb_decrypt_verify_memory(int cipher,$/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *nonce, const unsigned char *ct, unsigned long ctlen, unsigned char *pt, const unsigned char *tag, unsigned long taglen, int *stat)
ocb_decrypt_verify_memory	libtomcrypt/src/headers/tomcrypt_mac.h	/^int ocb_decrypt_verify_memory(int cipher,$/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *nonce, const unsigned char *ct, unsigned long ctlen, unsigned char *pt, const unsigned char *tag, unsigned long taglen, int *stat)
ocb_done_decrypt	libtomcrypt/src/encauth/ocb/ocb_done_decrypt.c	/^int ocb_done_decrypt(ocb_state *ocb, $/;"	f	language:C	signature:(ocb_state *ocb, const unsigned char *ct, unsigned long ctlen, unsigned char *pt, const unsigned char *tag, unsigned long taglen, int *stat)
ocb_done_decrypt	libtomcrypt/src/headers/tomcrypt_mac.h	/^int ocb_done_decrypt(ocb_state *ocb, $/;"	p	language:C++	signature:(ocb_state *ocb, const unsigned char *ct, unsigned long ctlen, unsigned char *pt, const unsigned char *tag, unsigned long taglen, int *stat)
ocb_done_encrypt	libtomcrypt/src/encauth/ocb/ocb_done_encrypt.c	/^int ocb_done_encrypt(ocb_state *ocb, const unsigned char *pt, unsigned long ptlen,$/;"	f	language:C	signature:(ocb_state *ocb, const unsigned char *pt, unsigned long ptlen, unsigned char *ct, unsigned char *tag, unsigned long *taglen)
ocb_done_encrypt	libtomcrypt/src/headers/tomcrypt_mac.h	/^int ocb_done_encrypt(ocb_state *ocb, $/;"	p	language:C++	signature:(ocb_state *ocb, const unsigned char *pt, unsigned long ptlen, unsigned char *ct, unsigned char *tag, unsigned long *taglen)
ocb_encrypt	libtomcrypt/src/encauth/ocb/ocb_encrypt.c	/^int ocb_encrypt(ocb_state *ocb, const unsigned char *pt, unsigned char *ct)$/;"	f	language:C	signature:(ocb_state *ocb, const unsigned char *pt, unsigned char *ct)
ocb_encrypt	libtomcrypt/src/headers/tomcrypt_mac.h	/^int ocb_encrypt(ocb_state *ocb, const unsigned char *pt, unsigned char *ct);$/;"	p	language:C++	signature:(ocb_state *ocb, const unsigned char *pt, unsigned char *ct)
ocb_encrypt_authenticate_memory	libtomcrypt/src/encauth/ocb/ocb_encrypt_authenticate_memory.c	/^int ocb_encrypt_authenticate_memory(int cipher,$/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *nonce, const unsigned char *pt, unsigned long ptlen, unsigned char *ct, unsigned char *tag, unsigned long *taglen)
ocb_encrypt_authenticate_memory	libtomcrypt/src/headers/tomcrypt_mac.h	/^int ocb_encrypt_authenticate_memory(int cipher,$/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *nonce, const unsigned char *pt, unsigned long ptlen, unsigned char *ct, unsigned char *tag, unsigned long *taglen)
ocb_gen	libtomcrypt/demos/tv_gen.c	/^void ocb_gen(void)$/;"	f	language:C	signature:(void)
ocb_init	libtomcrypt/src/encauth/ocb/ocb_init.c	/^int ocb_init(ocb_state *ocb, int cipher, $/;"	f	language:C	signature:(ocb_state *ocb, int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *nonce)
ocb_init	libtomcrypt/src/headers/tomcrypt_mac.h	/^int ocb_init(ocb_state *ocb, int cipher, $/;"	p	language:C++	signature:(ocb_state *ocb, int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *nonce)
ocb_ntz	libtomcrypt/src/encauth/ocb/ocb_ntz.c	/^int ocb_ntz(unsigned long x)$/;"	f	language:C	signature:(unsigned long x)
ocb_ntz	libtomcrypt/src/headers/tomcrypt_mac.h	/^int ocb_ntz(unsigned long x);$/;"	p	language:C++	signature:(unsigned long x)
ocb_shift_xor	libtomcrypt/src/encauth/ocb/ocb_shift_xor.c	/^void ocb_shift_xor(ocb_state *ocb, unsigned char *Z)$/;"	f	language:C	signature:(ocb_state *ocb, unsigned char *Z)
ocb_shift_xor	libtomcrypt/src/headers/tomcrypt_mac.h	/^void ocb_shift_xor(ocb_state *ocb, unsigned char *Z);$/;"	p	language:C++	signature:(ocb_state *ocb, unsigned char *Z)
ocb_state	libtomcrypt/src/headers/tomcrypt_mac.h	/^} ocb_state;$/;"	t	language:C++	typeref:struct:__anon50
ocb_test	libtomcrypt/src/encauth/ocb/ocb_test.c	/^int ocb_test(void)$/;"	f	language:C	signature:(void)
ocb_test	libtomcrypt/src/headers/tomcrypt_mac.h	/^int ocb_test(void);$/;"	p	language:C++	signature:(void)
ofb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ofb_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_OFB *ofb);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_OFB *ofb)
ofb_decrypt	libtomcrypt/src/modes/ofb/ofb_decrypt.c	/^int ofb_decrypt(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_OFB *ofb)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, unsigned long len, symmetric_OFB *ofb)
ofb_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ofb_done(symmetric_OFB *ofb);$/;"	p	language:C++	signature:(symmetric_OFB *ofb)
ofb_done	libtomcrypt/src/modes/ofb/ofb_done.c	/^int ofb_done(symmetric_OFB *ofb)$/;"	f	language:C	signature:(symmetric_OFB *ofb)
ofb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ofb_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_OFB *ofb);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_OFB *ofb)
ofb_encrypt	libtomcrypt/src/modes/ofb/ofb_encrypt.c	/^int ofb_encrypt(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_OFB *ofb)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, unsigned long len, symmetric_OFB *ofb)
ofb_getiv	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ofb_getiv(unsigned char *IV, unsigned long *len, symmetric_OFB *ofb);$/;"	p	language:C++	signature:(unsigned char *IV, unsigned long *len, symmetric_OFB *ofb)
ofb_getiv	libtomcrypt/src/modes/ofb/ofb_getiv.c	/^int ofb_getiv(unsigned char *IV, unsigned long *len, symmetric_OFB *ofb)$/;"	f	language:C	signature:(unsigned char *IV, unsigned long *len, symmetric_OFB *ofb)
ofb_setiv	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ofb_setiv(const unsigned char *IV, unsigned long len, symmetric_OFB *ofb);$/;"	p	language:C++	signature:(const unsigned char *IV, unsigned long len, symmetric_OFB *ofb)
ofb_setiv	libtomcrypt/src/modes/ofb/ofb_setiv.c	/^int ofb_setiv(const unsigned char *IV, unsigned long len, symmetric_OFB *ofb)$/;"	f	language:C	signature:(const unsigned char *IV, unsigned long len, symmetric_OFB *ofb)
ofb_start	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int ofb_start(int cipher, const unsigned char *IV, const unsigned char *key, $/;"	p	language:C++	signature:(int cipher, const unsigned char *IV, const unsigned char *key, int keylen, int num_rounds, symmetric_OFB *ofb)
ofb_start	libtomcrypt/src/modes/ofb/ofb_start.c	/^int ofb_start(int cipher, const unsigned char *IV, const unsigned char *key, $/;"	f	language:C	signature:(int cipher, const unsigned char *IV, const unsigned char *key, int keylen, int num_rounds, symmetric_OFB *ofb)
off_dir	libtomcrypt/src/headers/tomcrypt_pk.h	/^            off_dir, \/* timezone offset direction 0 == +, 1 == - *\/$/;"	m	language:C++	struct:__anon39	access:public
off_hh	libtomcrypt/src/headers/tomcrypt_pk.h	/^            off_hh, \/* timezone offset hours *\/$/;"	m	language:C++	struct:__anon39	access:public
off_mm	libtomcrypt/src/headers/tomcrypt_pk.h	/^            off_mm; \/* timezone offset minutes *\/$/;"	m	language:C++	struct:__anon39	access:public
offset	sftp-server/buffer.h	/^	u_int	 offset;	\/* Offset of first byte containing data. *\/$/;"	m	language:C++	struct:__anon3	access:public
offsetof	sftp-server/defines.h	488;"	d	language:C++
okname	scp.c	/^int okname(char *);$/;"	p	language:C	file:	signature:(char *)
okname	scp.c	/^okname(char *cp0)$/;"	f	language:C	signature:(char *cp0)
omac_done	libtomcrypt/src/headers/tomcrypt_mac.h	/^int omac_done(omac_state *omac, unsigned char *out, unsigned long *outlen);$/;"	p	language:C++	signature:(omac_state *omac, unsigned char *out, unsigned long *outlen)
omac_done	libtomcrypt/src/mac/omac/omac_done.c	/^int omac_done(omac_state *omac, unsigned char *out, unsigned long *outlen)$/;"	f	language:C	signature:(omac_state *omac, unsigned char *out, unsigned long *outlen)
omac_file	libtomcrypt/src/headers/tomcrypt_mac.h	/^int omac_file(int cipher, $/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, const char *filename, unsigned char *out, unsigned long *outlen)
omac_file	libtomcrypt/src/mac/omac/omac_file.c	/^int omac_file(int cipher, $/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, const char *filename, unsigned char *out, unsigned long *outlen)
omac_gen	libtomcrypt/demos/tv_gen.c	/^void omac_gen(void)$/;"	f	language:C	signature:(void)
omac_init	libtomcrypt/src/headers/tomcrypt_mac.h	/^int omac_init(omac_state *omac, int cipher, const unsigned char *key, unsigned long keylen);$/;"	p	language:C++	signature:(omac_state *omac, int cipher, const unsigned char *key, unsigned long keylen)
omac_init	libtomcrypt/src/mac/omac/omac_init.c	/^int omac_init(omac_state *omac, int cipher, const unsigned char *key, unsigned long keylen)$/;"	f	language:C	signature:(omac_state *omac, int cipher, const unsigned char *key, unsigned long keylen)
omac_memory	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*omac_memory)($/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
omac_memory	libtomcrypt/src/headers/tomcrypt_mac.h	/^int omac_memory(int cipher, $/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
omac_memory	libtomcrypt/src/mac/omac/omac_memory.c	/^int omac_memory(int cipher, $/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
omac_memory_multi	libtomcrypt/src/headers/tomcrypt_mac.h	/^int omac_memory_multi(int cipher, $/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, unsigned char *out, unsigned long *outlen, const unsigned char *in, unsigned long inlen, ...)
omac_memory_multi	libtomcrypt/src/mac/omac/omac_memory_multi.c	/^int omac_memory_multi(int cipher, $/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, unsigned char *out, unsigned long *outlen, const unsigned char *in, unsigned long inlen, ...)
omac_process	libtomcrypt/src/headers/tomcrypt_mac.h	/^int omac_process(omac_state *omac, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(omac_state *omac, const unsigned char *in, unsigned long inlen)
omac_process	libtomcrypt/src/mac/omac/omac_process.c	/^int omac_process(omac_state *omac, const unsigned char *in, unsigned long inlen)$/;"	f	language:C	signature:(omac_state *omac, const unsigned char *in, unsigned long inlen)
omac_state	libtomcrypt/src/headers/tomcrypt_mac.h	/^} omac_state;$/;"	t	language:C++	typeref:struct:__anon47
omac_test	libtomcrypt/src/headers/tomcrypt_mac.h	/^int omac_test(void);$/;"	p	language:C++	signature:(void)
omac_test	libtomcrypt/src/mac/omac/omac_test.c	/^int omac_test(void)$/;"	f	language:C	signature:(void)
oom_adjust_restore	sftp-server/openbsd-compat/port-linux.h	/^void oom_adjust_restore(void);$/;"	p	language:C++	signature:(void)
oom_adjust_setup	sftp-server/openbsd-compat/port-linux.h	/^void oom_adjust_setup(void);$/;"	p	language:C++	signature:(void)
open	sftp-server/openbsd-compat/bsd-cygwin_util.h	49;"	d	language:C++
open_confirm	sftp-server/channels.h	/^	channel_callback_fn	*open_confirm;$/;"	m	language:C++	struct:Channel	access:public
open_confirm_ctx	sftp-server/channels.h	/^	void			*open_confirm_ctx;$/;"	m	language:C++	struct:Channel	access:public
open_known_hosts_file	cli-kex.c	/^static FILE* open_known_hosts_file(int * readonly)$/;"	f	language:C	file:	signature:(int * readonly)
openpty	sftp-server/openbsd-compat/openbsd-compat.h	/^int openpty(int *, int *, char *, struct termios *, struct winsize *);$/;"	p	language:C++	signature:(int *, int *, char *, struct termios *, struct winsize *)
openpty	sshpty.c	/^openpty (int *amaster, int *aslave, char *name, struct termios *termp,$/;"	f	language:C	signature:(int *amaster, int *aslave, char *name, struct termios *termp, struct winsize *winp)
openssh_encrypted	keyimport.c	/^static int openssh_encrypted(const char *filename)$/;"	f	language:C	file:	signature:(const char *filename)
openssh_encrypted	keyimport.c	/^static int openssh_encrypted(const char *filename);$/;"	p	language:C	file:	signature:(const char *filename)
openssh_key	keyimport.c	/^struct openssh_key {$/;"	s	language:C	file:
openssh_key::encrypted	keyimport.c	/^	int encrypted;$/;"	m	language:C	struct:openssh_key	file:	access:public
openssh_key::iv	keyimport.c	/^	char iv[32];$/;"	m	language:C	struct:openssh_key	file:	access:public
openssh_key::keyblob	keyimport.c	/^	unsigned char *keyblob;$/;"	m	language:C	struct:openssh_key	file:	access:public
openssh_key::keyblob_len	keyimport.c	/^	unsigned int keyblob_len, keyblob_size;$/;"	m	language:C	struct:openssh_key	file:	access:public
openssh_key::keyblob_size	keyimport.c	/^	unsigned int keyblob_len, keyblob_size;$/;"	m	language:C	struct:openssh_key	file:	access:public
openssh_key::type	keyimport.c	/^	int type;$/;"	m	language:C	struct:openssh_key	file:	access:public
openssh_read	keyimport.c	/^static sign_key *openssh_read(const char *filename, char *passphrase)$/;"	f	language:C	file:	signature:(const char *filename, char *passphrase)
openssh_read	keyimport.c	/^static sign_key *openssh_read(const char *filename, char *passphrase);$/;"	p	language:C	file:	signature:(const char *filename, char *passphrase)
openssh_write	keyimport.c	/^static int openssh_write(const char *filename, sign_key *key,$/;"	f	language:C	file:	signature:(const char *filename, sign_key *key, char *passphrase)
openssh_write	keyimport.c	/^static int openssh_write(const char *filename, sign_key *key,$/;"	p	language:C	file:	signature:(const char *filename, sign_key *key, char *passphrase)
openssl_private_rsa	libtomcrypt/testprof/rsa_test.c	/^static const unsigned char openssl_private_rsa[] = {$/;"	v	language:C	file:
openssl_public_rsa	libtomcrypt/testprof/rsa_test.c	/^static const unsigned char openssl_public_rsa[] = {$/;"	v	language:C	file:
openssl_public_rsa_stripped	libtomcrypt/testprof/rsa_test.c	/^static const unsigned char openssl_public_rsa_stripped[] = {$/;"	v	language:C	file:
optarg	sftp-server/defines.h	519;"	d	language:C++
optarg	sftp-server/defines.h	525;"	d	language:C++
opterr	sftp-server/defines.h	515;"	d	language:C++
opterr	sftp-server/defines.h	521;"	d	language:C++
optind	sftp-server/defines.h	516;"	d	language:C++
optind	sftp-server/defines.h	522;"	d	language:C++
optopt	sftp-server/defines.h	517;"	d	language:C++
optopt	sftp-server/defines.h	523;"	d	language:C++
optreset	sftp-server/defines.h	518;"	d	language:C++
optreset	sftp-server/defines.h	524;"	d	language:C++
opts	common-runopts.c	/^runopts opts; \/* GLOBAL *\/$/;"	v	language:C
oqueue	sftp-server/sftp-server.c	/^Buffer oqueue;$/;"	v	language:C
order	libtomcrypt/src/headers/tomcrypt_pk.h	/^   char *order;$/;"	m	language:C++	struct:__anon34	access:public
original_command	auth.h	/^	unsigned char * original_command;$/;"	m	language:C++	struct:PubKeyOptions	access:public
ostate	sftp-server/channels.h	/^	u_int   ostate;		\/* output to channel  (state of transmit half) *\/$/;"	m	language:C++	struct:Channel	access:public
output	sftp-server/channels.h	/^	Buffer  output;		\/* data received over encrypted connection for$/;"	m	language:C++	struct:Channel	access:public
output_filter	sftp-server/channels.h	/^	channel_outfilter_fn	*output_filter;$/;"	m	language:C++	struct:Channel	access:public
own_user	runopts.h	/^	char *own_user;$/;"	m	language:C++	struct:cli_runopts	access:public
p	dss.h	/^	mp_int* p;$/;"	m	language:C++	struct:__anon56	access:public
p	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *p; $/;"	m	language:C++	struct:KAT_key	access:public
p	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *p; $/;"	m	language:C++	struct:Rsa_key	access:public
p	libtomcrypt/src/headers/tomcrypt_pk.h	/^   void *p;$/;"	m	language:C++	struct:__anon37	access:public
p	rsa.h	/^	mp_int* p;$/;"	m	language:C++	struct:__anon1	access:public
packet_add_padding	sftp-server/packet.h	/^void	 packet_add_padding(u_char);$/;"	p	language:C++	signature:(u_char)
packet_backup_state	sftp-server/packet.h	/^void	 packet_backup_state(void);$/;"	p	language:C++	signature:(void)
packet_check_eom	sftp-server/packet.h	97;"	d	language:C++
packet_close	sftp-server/packet.h	/^void     packet_close(void);$/;"	p	language:C++	signature:(void)
packet_connection_is_ipv4	sftp-server/packet.h	/^int	 packet_connection_is_ipv4(void);$/;"	p	language:C++	signature:(void)
packet_connection_is_on_socket	sftp-server/packet.h	/^int	 packet_connection_is_on_socket(void);$/;"	p	language:C++	signature:(void)
packet_disconnect	sftp-server/packet.h	/^void     packet_disconnect(const char *fmt,...) __attribute__((format(printf, 1, 2)));$/;"	p	language:C++	signature:(const char *fmt,...)
packet_get_bignum	sftp-server/packet.h	/^void     packet_get_bignum(BIGNUM * value);$/;"	p	language:C++	signature:(BIGNUM * value)
packet_get_bignum2	sftp-server/packet.h	/^void     packet_get_bignum2(BIGNUM * value);$/;"	p	language:C++	signature:(BIGNUM * value)
packet_get_char	sftp-server/packet.h	/^u_int	 packet_get_char(void);$/;"	p	language:C++	signature:(void)
packet_get_connection_in	sftp-server/packet.h	/^int      packet_get_connection_in(void);$/;"	p	language:C++	signature:(void)
packet_get_connection_out	sftp-server/packet.h	/^int      packet_get_connection_out(void);$/;"	p	language:C++	signature:(void)
packet_get_encryption_key	sftp-server/packet.h	/^u_int	 packet_get_encryption_key(u_char *);$/;"	p	language:C++	signature:(u_char *)
packet_get_input	sftp-server/packet.h	/^void	*packet_get_input(void);$/;"	p	language:C++	signature:(void)
packet_get_int	sftp-server/packet.h	/^u_int	 packet_get_int(void);$/;"	p	language:C++	signature:(void)
packet_get_int64	sftp-server/packet.h	/^u_int64_t packet_get_int64(void);$/;"	p	language:C++	signature:(void)
packet_get_keycontext	sftp-server/packet.h	/^int	 packet_get_keycontext(int, u_char *);$/;"	p	language:C++	signature:(int, u_char *)
packet_get_keyiv	sftp-server/packet.h	/^void	 packet_get_keyiv(int, u_char *, u_int);$/;"	p	language:C++	signature:(int, u_char *, u_int)
packet_get_keyiv_len	sftp-server/packet.h	/^int	 packet_get_keyiv_len(int);$/;"	p	language:C++	signature:(int)
packet_get_maxsize	sftp-server/packet.h	/^u_int	 packet_get_maxsize(void);$/;"	p	language:C++	signature:(void)
packet_get_newkeys	sftp-server/packet.h	/^void	*packet_get_newkeys(int);$/;"	p	language:C++	signature:(int)
packet_get_output	sftp-server/packet.h	/^void	*packet_get_output(void);$/;"	p	language:C++	signature:(void)
packet_get_protocol_flags	sftp-server/packet.h	/^u_int	 packet_get_protocol_flags(void);$/;"	p	language:C++	signature:(void)
packet_get_raw	sftp-server/packet.h	/^void	*packet_get_raw(u_int *length_ptr);$/;"	p	language:C++	signature:(u_int *length_ptr)
packet_get_ssh1_cipher	sftp-server/packet.h	/^int	 packet_get_ssh1_cipher(void);$/;"	p	language:C++	signature:(void)
packet_get_state	sftp-server/packet.h	/^void	 packet_get_state(int, u_int32_t *, u_int64_t *, u_int32_t *, u_int64_t *);$/;"	p	language:C++	signature:(int, u_int32_t *, u_int64_t *, u_int32_t *, u_int64_t *)
packet_get_string	sftp-server/packet.h	/^void	*packet_get_string(u_int *length_ptr);$/;"	p	language:C++	signature:(u_int *length_ptr)
packet_get_string_ptr	sftp-server/packet.h	/^void	*packet_get_string_ptr(u_int *length_ptr);$/;"	p	language:C++	signature:(u_int *length_ptr)
packet_have_data_to_write	sftp-server/packet.h	/^int      packet_have_data_to_write(void);$/;"	p	language:C++	signature:(void)
packet_inc_alive_timeouts	sftp-server/packet.h	/^int	 packet_inc_alive_timeouts(void);$/;"	p	language:C++	signature:(void)
packet_is_interactive	sftp-server/packet.h	/^int      packet_is_interactive(void);$/;"	p	language:C++	signature:(void)
packet_is_okay_kex	packet.c	/^static int packet_is_okay_kex(unsigned char type) {$/;"	f	language:C	file:	signature:(unsigned char type)
packet_need_rekeying	sftp-server/packet.h	/^int	 packet_need_rekeying(void);$/;"	p	language:C++	signature:(void)
packet_not_very_much_data_to_write	sftp-server/packet.h	/^int      packet_not_very_much_data_to_write(void);$/;"	p	language:C++	signature:(void)
packet_process_incoming	sftp-server/packet.h	/^void     packet_process_incoming(const char *buf, u_int len);$/;"	p	language:C++	signature:(const char *buf, u_int len)
packet_put_char	sftp-server/packet.h	/^void     packet_put_char(int ch);$/;"	p	language:C++	signature:(int ch)
packet_put_cstring	sftp-server/packet.h	/^void     packet_put_cstring(const char *str);$/;"	p	language:C++	signature:(const char *str)
packet_put_int	sftp-server/packet.h	/^void     packet_put_int(u_int value);$/;"	p	language:C++	signature:(u_int value)
packet_put_int64	sftp-server/packet.h	/^void     packet_put_int64(u_int64_t value);$/;"	p	language:C++	signature:(u_int64_t value)
packet_put_raw	sftp-server/packet.h	/^void     packet_put_raw(const void *buf, u_int len);$/;"	p	language:C++	signature:(const void *buf, u_int len)
packet_put_string	sftp-server/packet.h	/^void     packet_put_string(const void *buf, u_int len);$/;"	p	language:C++	signature:(const void *buf, u_int len)
packet_read	sftp-server/packet.h	/^int      packet_read(void);$/;"	p	language:C++	signature:(void)
packet_read_expect	sftp-server/packet.h	/^void     packet_read_expect(int type);$/;"	p	language:C++	signature:(int type)
packet_read_poll	sftp-server/packet.h	/^int      packet_read_poll(void);$/;"	p	language:C++	signature:(void)
packet_read_poll_seqnr	sftp-server/packet.h	/^int      packet_read_poll_seqnr(u_int32_t *seqnr_p);$/;"	p	language:C++	signature:(u_int32_t *seqnr_p)
packet_read_seqnr	sftp-server/packet.h	/^int      packet_read_seqnr(u_int32_t *seqnr_p);$/;"	p	language:C++	signature:(u_int32_t *seqnr_p)
packet_remaining	sftp-server/packet.h	/^int	 packet_remaining(void);$/;"	p	language:C++	signature:(void)
packet_restore_state	sftp-server/packet.h	/^void	 packet_restore_state(void);$/;"	p	language:C++	signature:(void)
packet_send	sftp-server/packet.h	/^void     packet_send(void);$/;"	p	language:C++	signature:(void)
packet_send_debug	sftp-server/packet.h	/^void     packet_send_debug(const char *fmt,...) __attribute__((format(printf, 1, 2)));$/;"	p	language:C++	signature:(const char *fmt,...)
packet_send_ignore	sftp-server/packet.h	/^void	 packet_send_ignore(int);$/;"	p	language:C++	signature:(int)
packet_set_alive_timeouts	sftp-server/packet.h	/^void	 packet_set_alive_timeouts(int);$/;"	p	language:C++	signature:(int)
packet_set_authenticated	sftp-server/packet.h	/^void     packet_set_authenticated(void);$/;"	p	language:C++	signature:(void)
packet_set_connection	sftp-server/packet.h	/^void     packet_set_connection(int, int);$/;"	p	language:C++	signature:(int, int)
packet_set_encryption_key	sftp-server/packet.h	/^void	 packet_set_encryption_key(const u_char *, u_int, int);$/;"	p	language:C++	signature:(const u_char *, u_int, int)
packet_set_interactive	sftp-server/packet.h	/^void     packet_set_interactive(int);$/;"	p	language:C++	signature:(int)
packet_set_iv	sftp-server/packet.h	/^void	 packet_set_iv(int, u_char *);$/;"	p	language:C++	signature:(int, u_char *)
packet_set_keycontext	sftp-server/packet.h	/^void	 packet_set_keycontext(int, u_char *);$/;"	p	language:C++	signature:(int, u_char *)
packet_set_maxsize	sftp-server/packet.h	/^int	 packet_set_maxsize(u_int);$/;"	p	language:C++	signature:(u_int)
packet_set_nonblocking	sftp-server/packet.h	/^void     packet_set_nonblocking(void);$/;"	p	language:C++	signature:(void)
packet_set_protocol_flags	sftp-server/packet.h	/^void     packet_set_protocol_flags(u_int);$/;"	p	language:C++	signature:(u_int)
packet_set_rekey_limit	sftp-server/packet.h	/^void	 packet_set_rekey_limit(u_int32_t);$/;"	p	language:C++	signature:(u_int32_t)
packet_set_server	sftp-server/packet.h	/^void     packet_set_server(void);$/;"	p	language:C++	signature:(void)
packet_set_state	sftp-server/packet.h	/^void	 packet_set_state(int, u_int32_t, u_int64_t, u_int32_t, u_int64_t);$/;"	p	language:C++	signature:(int, u_int32_t, u_int64_t, u_int32_t, u_int64_t)
packet_set_timeout	sftp-server/packet.h	/^void     packet_set_timeout(int, int);$/;"	p	language:C++	signature:(int, int)
packet_start	sftp-server/packet.h	/^void     packet_start(u_char);$/;"	p	language:C++	signature:(u_char)
packet_start_compression	sftp-server/packet.h	/^void     packet_start_compression(int);$/;"	p	language:C++	signature:(int)
packet_write_poll	sftp-server/packet.h	/^void     packet_write_poll(void);$/;"	p	language:C++	signature:(void)
packet_write_wait	sftp-server/packet.h	/^void     packet_write_wait(void);$/;"	p	language:C++	signature:(void)
packetlist	session.h	/^struct packetlist {$/;"	s	language:C++
packetlist::next	session.h	/^	struct packetlist *next;$/;"	m	language:C++	struct:packetlist	typeref:struct:packetlist::packetlist	access:public
packetlist::payload	session.h	/^	buffer * payload;$/;"	m	language:C++	struct:packetlist	access:public
packettype	packet.h	/^} packettype;$/;"	t	language:C++	typeref:struct:PacketType
packettypes	session.h	/^	const packettype * packettypes; \/* Packet handler mappings for this$/;"	m	language:C++	struct:sshsession	access:public
pad	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       pad[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon41	access:public
pad	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       pad[MAXBLOCKSIZE];$/;"	m	language:C++	struct:__anon44	access:public
pad	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                      pad[16];$/;"	m	language:C++	struct:__anon45	access:public
padlen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       padlen, $/;"	m	language:C++	struct:__anon44	access:public
padlen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       padlen;$/;"	m	language:C++	struct:__anon41	access:public
padlen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       padlen;$/;"	m	language:C++	struct:__anon42	access:public
padlen	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                       padlen;$/;"	m	language:C++	struct:__anon46	access:public
pamConvFunc	svr-authpam.c	/^pamConvFunc(int num_msg, $/;"	f	language:C	signature:(int num_msg, const struct pam_message **msg, struct pam_response **respp, void *appdata_ptr)
parent	libtomcrypt/src/headers/tomcrypt_pk.h	/^   struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	language:C++	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::	access:public
parse_hostname	cli-runopts.c	/^static void parse_hostname(const char* orighostarg) {$/;"	f	language:C	file:	signature:(const char* orighostarg)
parse_hostname	cli-runopts.c	/^static void parse_hostname(const char* orighostarg);$/;"	p	language:C	file:	signature:(const char* orighostarg)
parse_multihop_hostname	cli-runopts.c	/^static void parse_multihop_hostname(const char* orighostarg, const char* argv0) {$/;"	f	language:C	file:	signature:(const char* orighostarg, const char* argv0)
parse_multihop_hostname	cli-runopts.c	/^static void parse_multihop_hostname(const char* orighostarg, const char* argv0);$/;"	p	language:C	file:	signature:(const char* orighostarg, const char* argv0)
pass	libtomcrypt/src/hashes/tiger.c	/^static void pass(ulong64 *a, ulong64 *b, ulong64 *c, ulong64 *x, int mul)$/;"	f	language:C	file:	signature:(ulong64 *a, ulong64 *b, ulong64 *c, ulong64 *x, int mul)
pass	svr-auth.c	/^struct passwd pass;$/;"	v	language:C	typeref:struct:passwd
passwd	svr-authpam.c	/^	char* passwd;$/;"	m	language:C	struct:UserDataS	file:	access:public
passwdexpired	sftp-server/openbsd-compat/port-aix.h	/^int passwdexpired(char *, char **);$/;"	p	language:C++	signature:(char *, char **)
path	sftp-server/channels.h	/^	char    *path;$/;"	m	language:C++	struct:Channel	access:public
path_append	sftp-server/sftp-client.h	/^char *path_append(char *, char *);$/;"	p	language:C++	signature:(char *, char *)
payload	session.h	/^	buffer * payload;$/;"	m	language:C++	struct:packetlist	access:public
payload	session.h	/^	buffer *payload; \/* Post-decompression, the actual SSH packet *\/$/;"	m	language:C++	struct:sshsession	access:public
pc1	libtomcrypt/src/ciphers/des.c	/^static const unsigned char pc1[56] = {$/;"	v	language:C	file:
pc2	libtomcrypt/src/ciphers/des.c	/^static const unsigned char pc2[48] = {$/;"	v	language:C	file:
pelican_done	libtomcrypt/src/headers/tomcrypt_mac.h	/^int pelican_done(pelican_state *pelmac, unsigned char *out);$/;"	p	language:C++	signature:(pelican_state *pelmac, unsigned char *out)
pelican_done	libtomcrypt/src/mac/pelican/pelican.c	/^int pelican_done(pelican_state *pelmac, unsigned char *out)$/;"	f	language:C	signature:(pelican_state *pelmac, unsigned char *out)
pelican_init	libtomcrypt/src/headers/tomcrypt_mac.h	/^int pelican_init(pelican_state *pelmac, const unsigned char *key, unsigned long keylen);$/;"	p	language:C++	signature:(pelican_state *pelmac, const unsigned char *key, unsigned long keylen)
pelican_init	libtomcrypt/src/mac/pelican/pelican.c	/^int pelican_init(pelican_state *pelmac, const unsigned char *key, unsigned long keylen)$/;"	f	language:C	signature:(pelican_state *pelmac, const unsigned char *key, unsigned long keylen)
pelican_memory	libtomcrypt/src/headers/tomcrypt_mac.h	/^int pelican_memory(const unsigned char *key, unsigned long keylen,$/;"	p	language:C++	signature:(const unsigned char *key, unsigned long keylen, const unsigned char *in, unsigned long inlen, unsigned char *out)
pelican_memory	libtomcrypt/src/mac/pelican/pelican_memory.c	/^int pelican_memory(const unsigned char *key, unsigned long keylen,$/;"	f	language:C	signature:(const unsigned char *key, unsigned long keylen, const unsigned char *in, unsigned long inlen, unsigned char *out)
pelican_process	libtomcrypt/src/headers/tomcrypt_mac.h	/^int pelican_process(pelican_state *pelmac, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(pelican_state *pelmac, const unsigned char *in, unsigned long inlen)
pelican_process	libtomcrypt/src/mac/pelican/pelican.c	/^int pelican_process(pelican_state *pelmac, const unsigned char *in, unsigned long inlen)$/;"	f	language:C	signature:(pelican_state *pelmac, const unsigned char *in, unsigned long inlen)
pelican_state	libtomcrypt/src/headers/tomcrypt_mac.h	/^typedef struct pelican_state$/;"	s	language:C++
pelican_state	libtomcrypt/src/headers/tomcrypt_mac.h	/^} pelican_state;$/;"	t	language:C++	typeref:struct:pelican_state
pelican_state::K	libtomcrypt/src/headers/tomcrypt_mac.h	/^    symmetric_key K;$/;"	m	language:C++	struct:pelican_state	access:public
pelican_state::buflen	libtomcrypt/src/headers/tomcrypt_mac.h	/^    int           buflen;$/;"	m	language:C++	struct:pelican_state	access:public
pelican_state::state	libtomcrypt/src/headers/tomcrypt_mac.h	/^    unsigned char state[16];$/;"	m	language:C++	struct:pelican_state	access:public
pelican_test	libtomcrypt/src/headers/tomcrypt_mac.h	/^int pelican_test(void);$/;"	p	language:C++	signature:(void)
pelican_test	libtomcrypt/src/mac/pelican/pelican_test.c	/^int pelican_test(void)$/;"	f	language:C	signature:(void)
people trying to brute force guess the password.  The higher the iteration counter the longer the delay.  This algorithm also requires a hash 
percent_expand	sftp-server/misc.c	/^percent_expand(const char *string, ...)$/;"	f	language:C	signature:(const char *string, ...)
percent_expand	sftp-server/misc.h	/^char	*percent_expand(const char *, ...) __attribute__((__sentinel__));$/;"	p	language:C++	signature:(const char *, ...)
perm	sftp-server/sftp-common.h	/^	u_int32_t	perm;$/;"	m	language:C++	struct:Attrib	access:public
perm_warn	auth.h	/^	unsigned perm_warn : 1; \/* Server only, set if bad permissions on $/;"	m	language:C++	struct:AuthState	access:public
permanently_drop_suid	sftp-server/uidswap.h	/^void	 permanently_drop_suid(uid_t);$/;"	p	language:C++	signature:(uid_t)
permanently_set_uid	sftp-server/uidswap.h	/^void	 permanently_set_uid(struct passwd *);$/;"	p	language:C++	signature:(struct passwd *)
permute	libtomcrypt/src/ciphers/rc2.c	/^static const unsigned char permute[256] = {$/;"	v	language:C	file:
pexport	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int (*pexport)(unsigned char *out, unsigned long *outlen, prng_state *prng);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
pflag	scp.c	/^int pflag, iamremote, iamrecursive, targetshouldbedirectory;$/;"	v	language:C
pid	chansession.h	/^	pid_t pid; \/* child process pid *\/$/;"	m	language:C++	struct:ChanSess	access:public
pid	chansession.h	/^	pid_t pid;$/;"	m	language:C++	struct:ChildPid	access:public
pid	loginrec.h	/^	int        pid;                          \/* PID of login process *\/$/;"	m	language:C++	struct:logininfo	access:public
pid_t	sftp-server/defines.h	/^typedef int pid_t;$/;"	t	language:C++
pidfile	runopts.h	/^	char * pidfile;$/;"	m	language:C++	struct:svr_runopts	access:public
pimport	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int (*pimport)(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
pipe	sftp-server/openbsd-compat/bsd-cygwin_util.h	50;"	d	language:C++
pkcs_1_i2osp	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^int pkcs_1_i2osp(void *n, unsigned long modulus_len, unsigned char *out);$/;"	p	language:C++	signature:(void *n, unsigned long modulus_len, unsigned char *out)
pkcs_1_i2osp	libtomcrypt/src/pk/pkcs1/pkcs_1_i2osp.c	/^int pkcs_1_i2osp(void *n, unsigned long modulus_len, unsigned char *out)$/;"	f	language:C	signature:(void *n, unsigned long modulus_len, unsigned char *out)
pkcs_1_mgf1	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^int pkcs_1_mgf1(      int            hash_idx,$/;"	p	language:C++	signature:( int hash_idx, const unsigned char *seed, unsigned long seedlen, unsigned char *mask, unsigned long masklen)
pkcs_1_mgf1	libtomcrypt/src/pk/pkcs1/pkcs_1_mgf1.c	/^int pkcs_1_mgf1(int                  hash_idx,$/;"	f	language:C	signature:(int hash_idx, const unsigned char *seed, unsigned long seedlen, unsigned char *mask, unsigned long masklen)
pkcs_1_oaep_decode	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^int pkcs_1_oaep_decode(const unsigned char *msg,    unsigned long msglen,$/;"	p	language:C++	signature:(const unsigned char *msg, unsigned long msglen, const unsigned char *lparam, unsigned long lparamlen, unsigned long modulus_bitlen, int hash_idx, unsigned char *out, unsigned long *outlen, int *res)
pkcs_1_oaep_decode	libtomcrypt/src/pk/pkcs1/pkcs_1_oaep_decode.c	/^int pkcs_1_oaep_decode(const unsigned char *msg,    unsigned long msglen,$/;"	f	language:C	signature:(const unsigned char *msg, unsigned long msglen, const unsigned char *lparam, unsigned long lparamlen, unsigned long modulus_bitlen, int hash_idx, unsigned char *out, unsigned long *outlen, int *res)
pkcs_1_oaep_encode	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^int pkcs_1_oaep_encode(const unsigned char *msg,    unsigned long msglen,$/;"	p	language:C++	signature:(const unsigned char *msg, unsigned long msglen, const unsigned char *lparam, unsigned long lparamlen, unsigned long modulus_bitlen, prng_state *prng, int prng_idx, int hash_idx, unsigned char *out, unsigned long *outlen)
pkcs_1_oaep_encode	libtomcrypt/src/pk/pkcs1/pkcs_1_oaep_encode.c	/^int pkcs_1_oaep_encode(const unsigned char *msg,    unsigned long msglen,$/;"	f	language:C	signature:(const unsigned char *msg, unsigned long msglen, const unsigned char *lparam, unsigned long lparamlen, unsigned long modulus_bitlen, prng_state *prng, int prng_idx, int hash_idx, unsigned char *out, unsigned long *outlen)
pkcs_1_os2ip	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^int pkcs_1_os2ip(void *n, unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(void *n, unsigned char *in, unsigned long inlen)
pkcs_1_os2ip	libtomcrypt/src/pk/pkcs1/pkcs_1_os2ip.c	/^int pkcs_1_os2ip(void *n, unsigned char *in, unsigned long inlen)$/;"	f	language:C	signature:(void *n, unsigned char *in, unsigned long inlen)
pkcs_1_pss_decode	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^int pkcs_1_pss_decode(const unsigned char *msghash, unsigned long msghashlen,$/;"	p	language:C++	signature:(const unsigned char *msghash, unsigned long msghashlen, const unsigned char *sig, unsigned long siglen, unsigned long saltlen, int hash_idx, unsigned long modulus_bitlen, int *res)
pkcs_1_pss_decode	libtomcrypt/src/pk/pkcs1/pkcs_1_pss_decode.c	/^int pkcs_1_pss_decode(const unsigned char *msghash, unsigned long msghashlen,$/;"	f	language:C	signature:(const unsigned char *msghash, unsigned long msghashlen, const unsigned char *sig, unsigned long siglen, unsigned long saltlen, int hash_idx, unsigned long modulus_bitlen, int *res)
pkcs_1_pss_encode	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^int pkcs_1_pss_encode(const unsigned char *msghash, unsigned long msghashlen,$/;"	p	language:C++	signature:(const unsigned char *msghash, unsigned long msghashlen, unsigned long saltlen, prng_state *prng, int prng_idx, int hash_idx, unsigned long modulus_bitlen, unsigned char *out, unsigned long *outlen)
pkcs_1_pss_encode	libtomcrypt/src/pk/pkcs1/pkcs_1_pss_encode.c	/^int pkcs_1_pss_encode(const unsigned char *msghash, unsigned long msghashlen,$/;"	f	language:C	signature:(const unsigned char *msghash, unsigned long msghashlen, unsigned long saltlen, prng_state *prng, int prng_idx, int hash_idx, unsigned long modulus_bitlen, unsigned char *out, unsigned long *outlen)
pkcs_1_test	libtomcrypt/testprof/pkcs_1_test.c	/^int pkcs_1_test(void)$/;"	f	language:C	signature:(void)
pkcs_1_test	libtomcrypt/testprof/tomcrypt_test.h	/^int pkcs_1_test(void);$/;"	p	language:C++	signature:(void)
pkcs_1_v1_5_decode	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^int pkcs_1_v1_5_decode(const unsigned char *msg, $/;"	p	language:C++	signature:(const unsigned char *msg, unsigned long msglen, int block_type, unsigned long modulus_bitlen, unsigned char *out, unsigned long *outlen, int *is_valid)
pkcs_1_v1_5_decode	libtomcrypt/src/pk/pkcs1/pkcs_1_v1_5_decode.c	/^int pkcs_1_v1_5_decode(const unsigned char *msg, $/;"	f	language:C	signature:(const unsigned char *msg, unsigned long msglen, int block_type, unsigned long modulus_bitlen, unsigned char *out, unsigned long *outlen, int *is_valid)
pkcs_1_v1_5_encode	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^int pkcs_1_v1_5_encode(const unsigned char *msg, $/;"	p	language:C++	signature:(const unsigned char *msg, unsigned long msglen, int block_type, unsigned long modulus_bitlen, prng_state *prng, int prng_idx, unsigned char *out, unsigned long *outlen)
pkcs_1_v1_5_encode	libtomcrypt/src/pk/pkcs1/pkcs_1_v1_5_encode.c	/^int pkcs_1_v1_5_encode(const unsigned char *msg, $/;"	f	language:C	signature:(const unsigned char *msg, unsigned long msglen, int block_type, unsigned long modulus_bitlen, prng_state *prng, int prng_idx, unsigned char *out, unsigned long *outlen)
pkcs_5_alg1	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^int pkcs_5_alg1(const unsigned char *password, unsigned long password_len, $/;"	p	language:C++	signature:(const unsigned char *password, unsigned long password_len, const unsigned char *salt, int iteration_count, int hash_idx, unsigned char *out, unsigned long *outlen)
pkcs_5_alg1	libtomcrypt/src/misc/pkcs5/pkcs_5_1.c	/^int pkcs_5_alg1(const unsigned char *password, unsigned long password_len, $/;"	f	language:C	signature:(const unsigned char *password, unsigned long password_len, const unsigned char *salt, int iteration_count, int hash_idx, unsigned char *out, unsigned long *outlen)
pkcs_5_alg2	libtomcrypt/src/headers/tomcrypt_pkcs.h	/^int pkcs_5_alg2(const unsigned char *password, unsigned long password_len, $/;"	p	language:C++	signature:(const unsigned char *password, unsigned long password_len, const unsigned char *salt, unsigned long salt_len, int iteration_count, int hash_idx, unsigned char *out, unsigned long *outlen)
pkcs_5_alg2	libtomcrypt/src/misc/pkcs5/pkcs_5_2.c	/^int pkcs_5_alg2(const unsigned char *password, unsigned long password_len, $/;"	f	language:C	signature:(const unsigned char *password, unsigned long password_len, const unsigned char *salt, unsigned long salt_len, int iteration_count, int hash_idx, unsigned char *out, unsigned long *outlen)
platform_get_krb5_client	sftp-server/platform.h	/^char *platform_get_krb5_client(const char *);$/;"	p	language:C++	signature:(const char *)
platform_krb5_get_principal_name	sftp-server/platform.h	/^char *platform_krb5_get_principal_name(const char *);$/;"	p	language:C++	signature:(const char *)
platform_post_fork_child	sftp-server/platform.h	/^void platform_post_fork_child(void);$/;"	p	language:C++	signature:(void)
platform_post_fork_parent	sftp-server/platform.h	/^void platform_post_fork_parent(pid_t child_pid);$/;"	p	language:C++	signature:(pid_t child_pid)
platform_pre_fork	sftp-server/platform.h	/^void platform_pre_fork(void);$/;"	p	language:C++	signature:(void)
platform_pre_listen	sftp-server/platform.h	/^void platform_pre_listen(void);$/;"	p	language:C++	signature:(void)
pmac_done	libtomcrypt/src/headers/tomcrypt_mac.h	/^int pmac_done(pmac_state *pmac, unsigned char *out, unsigned long *outlen);$/;"	p	language:C++	signature:(pmac_state *pmac, unsigned char *out, unsigned long *outlen)
pmac_done	libtomcrypt/src/mac/pmac/pmac_done.c	/^int pmac_done(pmac_state *state, unsigned char *out, unsigned long *outlen)$/;"	f	language:C	signature:(pmac_state *state, unsigned char *out, unsigned long *outlen)
pmac_file	libtomcrypt/src/headers/tomcrypt_mac.h	/^int pmac_file(int cipher, $/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, const char *filename, unsigned char *out, unsigned long *outlen)
pmac_file	libtomcrypt/src/mac/pmac/pmac_file.c	/^int pmac_file(int cipher, $/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, const char *filename, unsigned char *out, unsigned long *outlen)
pmac_gen	libtomcrypt/demos/tv_gen.c	/^void pmac_gen(void)$/;"	f	language:C	signature:(void)
pmac_init	libtomcrypt/src/headers/tomcrypt_mac.h	/^int pmac_init(pmac_state *pmac, int cipher, const unsigned char *key, unsigned long keylen);$/;"	p	language:C++	signature:(pmac_state *pmac, int cipher, const unsigned char *key, unsigned long keylen)
pmac_init	libtomcrypt/src/mac/pmac/pmac_init.c	/^int pmac_init(pmac_state *pmac, int cipher, const unsigned char *key, unsigned long keylen)$/;"	f	language:C	signature:(pmac_state *pmac, int cipher, const unsigned char *key, unsigned long keylen)
pmac_memory	libtomcrypt/src/headers/tomcrypt_mac.h	/^int pmac_memory(int cipher, $/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *msg, unsigned long msglen, unsigned char *out, unsigned long *outlen)
pmac_memory	libtomcrypt/src/mac/pmac/pmac_memory.c	/^int pmac_memory(int cipher, $/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
pmac_memory_multi	libtomcrypt/src/headers/tomcrypt_mac.h	/^int pmac_memory_multi(int cipher, $/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, unsigned char *out, unsigned long *outlen, const unsigned char *in, unsigned long inlen, ...)
pmac_memory_multi	libtomcrypt/src/mac/pmac/pmac_memory_multi.c	/^int pmac_memory_multi(int cipher, $/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, unsigned char *out, unsigned long *outlen, const unsigned char *in, unsigned long inlen, ...)
pmac_ntz	libtomcrypt/src/headers/tomcrypt_mac.h	/^int pmac_ntz(unsigned long x);$/;"	p	language:C++	signature:(unsigned long x)
pmac_ntz	libtomcrypt/src/mac/pmac/pmac_ntz.c	/^int pmac_ntz(unsigned long x)$/;"	f	language:C	signature:(unsigned long x)
pmac_process	libtomcrypt/src/headers/tomcrypt_mac.h	/^int pmac_process(pmac_state *pmac, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(pmac_state *pmac, const unsigned char *in, unsigned long inlen)
pmac_process	libtomcrypt/src/mac/pmac/pmac_process.c	/^int pmac_process(pmac_state *pmac, const unsigned char *in, unsigned long inlen)$/;"	f	language:C	signature:(pmac_state *pmac, const unsigned char *in, unsigned long inlen)
pmac_shift_xor	libtomcrypt/src/headers/tomcrypt_mac.h	/^void pmac_shift_xor(pmac_state *pmac);$/;"	p	language:C++	signature:(pmac_state *pmac)
pmac_shift_xor	libtomcrypt/src/mac/pmac/pmac_shift_xor.c	/^void pmac_shift_xor(pmac_state *pmac)$/;"	f	language:C	signature:(pmac_state *pmac)
pmac_state	libtomcrypt/src/headers/tomcrypt_mac.h	/^} pmac_state;$/;"	t	language:C++	typeref:struct:__anon48
pmac_test	libtomcrypt/src/headers/tomcrypt_mac.h	/^int pmac_test(void);$/;"	p	language:C++	signature:(void)
pmac_test	libtomcrypt/src/mac/pmac/pmac_test.c	/^int pmac_test(void)$/;"	f	language:C	signature:(void)
poll	sftp-server/openbsd-compat/bsd-poll.h	/^int   poll(struct pollfd *, nfds_t, int);$/;"	p	language:C++	signature:(struct pollfd *, nfds_t, int)
pollfd	sftp-server/openbsd-compat/bsd-poll.h	/^typedef struct pollfd {$/;"	s	language:C++
pollfd::events	sftp-server/openbsd-compat/bsd-poll.h	/^	short	events;$/;"	m	language:C++	struct:pollfd	access:public
pollfd::fd	sftp-server/openbsd-compat/bsd-poll.h	/^	int 	fd;$/;"	m	language:C++	struct:pollfd	access:public
pollfd::revents	sftp-server/openbsd-compat/bsd-poll.h	/^	short	revents;$/;"	m	language:C++	struct:pollfd	access:public
pollfd_t	sftp-server/openbsd-compat/bsd-poll.h	/^} pollfd_t;$/;"	t	language:C++	typeref:struct:pollfd
poly	libtomcrypt/src/encauth/gcm/gcm_gf_mult.c	/^static const unsigned char poly[] = { 0x00, 0xE1 };$/;"	v	language:C	file:
poly_div	libtomcrypt/src/encauth/ocb/ocb_init.c	/^    unsigned char poly_div[MAXBLOCKSIZE], $/;"	m	language:C	struct:__anon27	file:	access:public
poly_div	libtomcrypt/src/mac/pmac/pmac_init.c	/^    unsigned char poly_div[MAXBLOCKSIZE], $/;"	m	language:C	struct:__anon26	file:	access:public
poly_mul	libtomcrypt/src/encauth/ocb/ocb_init.c	/^                  poly_mul[MAXBLOCKSIZE];$/;"	m	language:C	struct:__anon27	file:	access:public
poly_mul	libtomcrypt/src/mac/pmac/pmac_init.c	/^                  poly_mul[MAXBLOCKSIZE];$/;"	m	language:C	struct:__anon26	file:	access:public
polys	libtomcrypt/src/encauth/ocb/ocb_init.c	/^} polys[] = {$/;"	v	language:C	typeref:struct:__anon27	file:
polys	libtomcrypt/src/mac/pmac/pmac_init.c	/^} polys[] = {$/;"	v	language:C	typeref:struct:__anon26	file:
pool	libtomcrypt/src/headers/tomcrypt_prng.h	/^    hash_state pool[FORTUNA_POOLS];     \/* the  pools *\/$/;"	m	language:C++	struct:fortuna_prng	access:public
pool	libtomcrypt/src/headers/tomcrypt_prng.h	/^    unsigned char         pool[MAXBLOCKSIZE];$/;"	m	language:C++	struct:yarrow_prng	access:public
pool0_len	libtomcrypt/src/headers/tomcrypt_prng.h	/^                  pool0_len,  \/* length of 0'th pool *\/$/;"	m	language:C++	struct:fortuna_prng	access:public
pool_idx	libtomcrypt/src/headers/tomcrypt_prng.h	/^    unsigned long pool_idx,   \/* current pool we will add to *\/$/;"	m	language:C++	struct:fortuna_prng	access:public
port	sftp-server/channels.h	/^	int port;$/;"	m	language:C++	struct:channel_connect	access:public
portcount	runopts.h	/^	unsigned int portcount;$/;"	m	language:C++	struct:svr_runopts	access:public
ports	runopts.h	/^	char *ports[DROPBEAR_MAX_PORTS];$/;"	m	language:C++	struct:svr_runopts	access:public
pos	buffer.h	/^	unsigned int pos;$/;"	m	language:C++	struct:buf	access:public
posix_wait	sftp-server/openbsd-compat/bsd-nextstep.h	/^pid_t posix_wait(int *);$/;"	p	language:C++	signature:(int *)
pprime	libtommath/etc/pprime.c	/^pprime (int k, int li, mp_int * p, mp_int * q)$/;"	f	language:C	signature:(int k, int li, mp_int * p, mp_int * q)
pq	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *pq;$/;"	m	language:C++	struct:KAT_key	access:public
prev	libtomcrypt/src/headers/tomcrypt_mac.h	/^                   prev[MAXBLOCKSIZE],$/;"	m	language:C++	struct:__anon47	access:public
prev	libtomcrypt/src/headers/tomcrypt_pk.h	/^   struct ltc_asn1_list_ *prev, *next, *child, *parent;$/;"	m	language:C++	struct:ltc_asn1_list_	typeref:struct:ltc_asn1_list_::ltc_asn1_list_	access:public
prev	list.h	/^	struct _m_list_elem *prev;$/;"	m	language:C++	struct:_m_list_elem	typeref:struct:_m_list_elem::_m_list_elem	access:public
prime	libtomcrypt/src/headers/tomcrypt_pk.h	/^   char *prime;$/;"	m	language:C++	struct:__anon34	access:public
prime_digit	libtommath/etc/pprime.c	/^mp_digit prime_digit(void)$/;"	f	language:C	signature:(void)
primes	libtommath/etc/pprime.c	/^FILE *primes;$/;"	v	language:C
printable_table	libtomcrypt/src/pk/asn1/der/printable_string/der_length_printable_string.c	/^} printable_table[] = {$/;"	v	language:C	typeref:struct:__anon25	file:
printhelp	cli-runopts.c	/^static void printhelp() {$/;"	f	language:C	file:
printhelp	cli-runopts.c	/^static void printhelp();$/;"	p	language:C	file:
printhelp	dropbearconvert.c	/^static void printhelp(char * progname) {$/;"	f	language:C	file:	signature:(char * progname)
printhelp	dropbearconvert.c	/^static void printhelp(char * progname);$/;"	p	language:C	file:	signature:(char * progname)
printhelp	dropbearkey.c	/^static void printhelp(char * progname) {$/;"	f	language:C	file:	signature:(char * progname)
printhelp	dropbearkey.c	/^static void printhelp(char * progname);$/;"	p	language:C	file:	signature:(char * progname)
printhelp	svr-runopts.c	/^static void printhelp(const char * progname) {$/;"	f	language:C	file:	signature:(const char * progname)
printhelp	svr-runopts.c	/^static void printhelp(const char * progname);$/;"	p	language:C	file:	signature:(const char * progname)
printhex	dbutil.c	/^void printhex(const char * label, const unsigned char * buf, int len) {$/;"	f	language:C	signature:(const char * label, const unsigned char * buf, int len)
printhex	dbutil.h	/^void printhex(const char * label, const unsigned char * buf, int len);$/;"	p	language:C++	signature:(const char * label, const unsigned char * buf, int len)
printpubkey	dropbearkey.c	/^static void printpubkey(sign_key * key, int keytype) {$/;"	f	language:C	file:	signature:(sign_key * key, int keytype)
printpubkey	dropbearkey.c	/^static void printpubkey(sign_key * key, int keytype);$/;"	p	language:C	file:	signature:(sign_key * key, int keytype)
privkeys	runopts.h	/^	m_list *privkeys; \/* Keys to use for public-key auth *\/$/;"	m	language:C++	struct:cli_runopts	access:public
prng_descriptor	libtomcrypt/src/misc/crypt/crypt_prng_descriptor.c	/^struct ltc_prng_descriptor prng_descriptor[TAB_SIZE] = {$/;"	v	language:C	typeref:struct:ltc_prng_descriptor
prng_is_valid	libtomcrypt/src/headers/tomcrypt_prng.h	/^int prng_is_valid(int idx);$/;"	p	language:C++	signature:(int idx)
prng_is_valid	libtomcrypt/src/misc/crypt/crypt_prng_is_valid.c	/^int prng_is_valid(int idx)$/;"	f	language:C	signature:(int idx)
prng_state	libtomcrypt/src/headers/tomcrypt_prng.h	/^} prng_state;$/;"	t	language:C++	typeref:union:Prng_state
process	libtomcrypt/src/headers/tomcrypt_hash.h	/^    int (*process)(hash_state *hash, const unsigned char *in, unsigned long inlen);$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
process	sftp-server/sftp-server.c	/^process(void)$/;"	f	language:C	file:	signature:(void)
process_close	sftp-server/sftp-server.c	/^process_close(void)$/;"	f	language:C	file:	signature:(void)
process_do_stat	sftp-server/sftp-server.c	/^process_do_stat(int do_lstat)$/;"	f	language:C	file:	signature:(int do_lstat)
process_extended	sftp-server/sftp-server.c	/^process_extended(void)$/;"	f	language:C	file:	signature:(void)
process_extended_fstatvfs	sftp-server/sftp-server.c	/^process_extended_fstatvfs(u_int32_t id)$/;"	f	language:C	file:	signature:(u_int32_t id)
process_extended_posix_rename	sftp-server/sftp-server.c	/^process_extended_posix_rename(u_int32_t id)$/;"	f	language:C	file:	signature:(u_int32_t id)
process_extended_statvfs	sftp-server/sftp-server.c	/^process_extended_statvfs(u_int32_t id)$/;"	f	language:C	file:	signature:(u_int32_t id)
process_fsetstat	sftp-server/sftp-server.c	/^process_fsetstat(void)$/;"	f	language:C	file:	signature:(void)
process_fstat	sftp-server/sftp-server.c	/^process_fstat(void)$/;"	f	language:C	file:	signature:(void)
process_init	sftp-server/sftp-server.c	/^process_init(void)$/;"	f	language:C	file:	signature:(void)
process_lstat	sftp-server/sftp-server.c	/^process_lstat(void)$/;"	f	language:C	file:	signature:(void)
process_mkdir	sftp-server/sftp-server.c	/^process_mkdir(void)$/;"	f	language:C	file:	signature:(void)
process_open	sftp-server/sftp-server.c	/^process_open(void)$/;"	f	language:C	file:	signature:(void)
process_opendir	sftp-server/sftp-server.c	/^process_opendir(void)$/;"	f	language:C	file:	signature:(void)
process_packet	packet.h	/^void process_packet();$/;"	p	language:C++	signature:()
process_packet	process-packet.c	/^void process_packet() {$/;"	f	language:C
process_read	sftp-server/sftp-server.c	/^process_read(void)$/;"	f	language:C	file:	signature:(void)
process_readdir	sftp-server/sftp-server.c	/^process_readdir(void)$/;"	f	language:C	file:	signature:(void)
process_readlink	sftp-server/sftp-server.c	/^process_readlink(void)$/;"	f	language:C	file:	signature:(void)
process_realpath	sftp-server/sftp-server.c	/^process_realpath(void)$/;"	f	language:C	file:	signature:(void)
process_remove	sftp-server/sftp-server.c	/^process_remove(void)$/;"	f	language:C	file:	signature:(void)
process_rename	sftp-server/sftp-server.c	/^process_rename(void)$/;"	f	language:C	file:	signature:(void)
process_rmdir	sftp-server/sftp-server.c	/^process_rmdir(void)$/;"	f	language:C	file:	signature:(void)
process_setstat	sftp-server/sftp-server.c	/^process_setstat(void)$/;"	f	language:C	file:	signature:(void)
process_stat	sftp-server/sftp-server.c	/^process_stat(void)$/;"	f	language:C	file:	signature:(void)
process_symlink	sftp-server/sftp-server.c	/^process_symlink(void)$/;"	f	language:C	file:	signature:(void)
process_write	sftp-server/sftp-server.c	/^process_write(void)$/;"	f	language:C	file:	signature:(void)
progname	loginrec.h	/^	char       progname[LINFO_PROGSIZE];     \/* name of program (for PAM) *\/$/;"	m	language:C++	struct:logininfo	access:public
progname	runopts.h	/^	char *progname;$/;"	m	language:C++	struct:cli_runopts	access:public
progname_null	loginrec.h	/^	int        progname_null;$/;"	m	language:C++	struct:logininfo	access:public
proto_spec	sftp-server/compat.c	/^proto_spec(const char *spec)$/;"	f	language:C	signature:(const char *spec)
proto_spec	sftp-server/compat.h	/^int	 proto_spec(const char *);$/;"	p	language:C++	signature:(const char *)
prov	libtomcrypt/testprof/tomcrypt_test.h	/^    char *name, *prov, *req;$/;"	m	language:C++	struct:__anon55	access:public
proxycmd	runopts.h	/^	char *proxycmd;$/;"	m	language:C++	struct:cli_runopts	access:public
pttotlen	libtomcrypt/src/headers/tomcrypt_mac.h	/^                       pttotlen;     \/* 64-bit counter for the PT *\/$/;"	m	language:C++	struct:__anon51	access:public
pty_allocate	sshpty.c	/^pty_allocate(int *ptyfd, int *ttyfd, char *namebuf, int namebuflen)$/;"	f	language:C	signature:(int *ptyfd, int *ttyfd, char *namebuf, int namebuflen)
pty_allocate	sshpty.h	/^int	 pty_allocate(int *, int *, char *, int);$/;"	p	language:C++	signature:(int *, int *, char *, int)
pty_change_window_size	sshpty.c	/^pty_change_window_size(int ptyfd, int row, int col,$/;"	f	language:C	signature:(int ptyfd, int row, int col, int xpixel, int ypixel)
pty_change_window_size	sshpty.h	/^void	 pty_change_window_size(int, int, int, int, int);$/;"	p	language:C++	signature:(int, int, int, int, int)
pty_make_controlling_tty	sshpty.c	/^pty_make_controlling_tty(int *ttyfd, const char *tty_name)$/;"	f	language:C	signature:(int *ttyfd, const char *tty_name)
pty_make_controlling_tty	sshpty.h	/^void	 pty_make_controlling_tty(int *, const char *);$/;"	p	language:C++	signature:(int *, const char *)
pty_release	sshpty.c	/^pty_release(const char *tty_name)$/;"	f	language:C	signature:(const char *tty_name)
pty_release	sshpty.h	/^void	 pty_release(const char *);$/;"	p	language:C++	signature:(const char *)
pty_setowner	sshpty.c	/^pty_setowner(struct passwd *pw, const char *tty_name)$/;"	f	language:C	signature:(struct passwd *pw, const char *tty_name)
pty_setowner	sshpty.h	/^void	 pty_setowner(struct passwd *, const char *);$/;"	p	language:C++	signature:(struct passwd *, const char *)
ptycommand	svr-chansession.c	/^static int ptycommand(struct Channel *channel, struct ChanSess *chansess) {$/;"	f	language:C	file:	signature:(struct Channel *channel, struct ChanSess *chansess)
ptycommand	svr-chansession.c	/^static int ptycommand(struct Channel *channel, struct ChanSess *chansess);$/;"	p	language:C	file:	signature:(struct Channel *channel, struct ChanSess *chansess)
pubkey	libtomcrypt/src/headers/tomcrypt_pk.h	/^    ecc_point pubkey;$/;"	m	language:C++	struct:__anon36	access:public
pubkey_options	auth.h	/^	struct PubKeyOptions* pubkey_options;$/;"	m	language:C++	struct:AuthState	typeref:struct:AuthState::PubKeyOptions	access:public
put_host_port	sftp-server/misc.c	/^put_host_port(const char *host, u_short port)$/;"	f	language:C	signature:(const char *host, u_short port)
put_host_port	sftp-server/misc.h	/^char	*put_host_port(const char *, u_short);$/;"	p	language:C++	signature:(const char *, u_short)
put_termcodes	cli-chansession.c	/^static void put_termcodes() {$/;"	f	language:C	file:
put_u16	sftp-server/misc.c	/^put_u16(void *vp, u_int16_t v)$/;"	f	language:C	signature:(void *vp, u_int16_t v)
put_u16	sftp-server/misc.h	/^void		put_u16(void *, u_int16_t)$/;"	p	language:C++	signature:(void *, u_int16_t)
put_u32	sftp-server/misc.c	/^put_u32(void *vp, u_int32_t v)$/;"	f	language:C	signature:(void *vp, u_int32_t v)
put_u32	sftp-server/misc.h	/^void		put_u32(void *, u_int32_t)$/;"	p	language:C++	signature:(void *, u_int32_t)
put_u64	sftp-server/misc.c	/^put_u64(void *vp, u_int64_t v)$/;"	f	language:C	signature:(void *vp, u_int64_t v)
put_u64	sftp-server/misc.h	/^void		put_u64(void *, u_int64_t)$/;"	p	language:C++	signature:(void *, u_int64_t)
put_winsize	cli-chansession.c	/^static void put_winsize() {$/;"	f	language:C	file:
pw	sftp-server/sftp-server.c	/^struct passwd *pw = NULL;$/;"	v	language:C	typeref:struct:passwd
pw_dir	auth.h	/^	char *pw_dir;$/;"	m	language:C++	struct:AuthState	access:public
pw_gid	auth.h	/^	gid_t pw_gid;$/;"	m	language:C++	struct:AuthState	access:public
pw_name	auth.h	/^	char *pw_name;$/;"	m	language:C++	struct:AuthState	access:public
pw_passwd	auth.h	/^	char *pw_passwd;$/;"	m	language:C++	struct:AuthState	access:public
pw_shell	auth.h	/^	char *pw_shell;$/;"	m	language:C++	struct:AuthState	access:public
pw_uid	auth.h	/^	uid_t pw_uid;$/;"	m	language:C++	struct:AuthState	access:public
pwcopy	scpmisc.h	/^struct passwd *pwcopy(struct passwd *);$/;"	p	language:C++	signature:(struct passwd *)
pwcopy	sftp-server/misc.c	/^pwcopy(struct passwd *pw)$/;"	f	language:C	signature:(struct passwd *pw)
pwcopy	sftp-server/misc.h	/^struct passwd *pwcopy(struct passwd *);$/;"	p	language:C++	signature:(struct passwd *)
pwd	scp.c	/^struct passwd *pwd;$/;"	v	language:C	typeref:struct:passwd
q	dss.h	/^	mp_int* q;$/;"	m	language:C++	struct:__anon56	access:public
q	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *q; $/;"	m	language:C++	struct:KAT_key	access:public
q	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *q; $/;"	m	language:C++	struct:Rsa_key	access:public
q	libtomcrypt/src/headers/tomcrypt_pk.h	/^   void *q;$/;"	m	language:C++	struct:__anon37	access:public
q	rsa.h	/^	mp_int* q;$/;"	m	language:C++	struct:__anon1	access:public
qP	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *qP; $/;"	m	language:C++	struct:KAT_key	access:public
qP	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *qP; $/;"	m	language:C++	struct:Rsa_key	access:public
qbox	libtomcrypt/src/ciphers/twofish/twofish.c	/^static const unsigned char qbox[2][4][16] = {$/;"	v	language:C	file:
qord	libtomcrypt/src/ciphers/twofish/twofish.c	/^static const unsigned char qord[4][5] = {$/;"	v	language:C	file:
qord	libtomcrypt/src/headers/tomcrypt_pk.h	/^   int qord;$/;"	m	language:C++	struct:__anon37	access:public
qsort_helper	libtomcrypt/src/pk/asn1/der/set/der_encode_set.c	/^static int qsort_helper(const void *a, const void *b)$/;"	f	language:C	file:	signature:(const void *a, const void *b)
qsort_helper	libtomcrypt/src/pk/asn1/der/set/der_encode_setof.c	/^static int qsort_helper(const void *a, const void *b)$/;"	f	language:C	file:	signature:(const void *a, const void *b)
r_type	sftp-server/openbsd-compat/port-aix.h	61;"	d	language:C++
rand_num	libtommath/mtest/mtest.c	/^void rand_num(mp_int *a)$/;"	f	language:C	signature:(mp_int *a)
rand_num2	libtommath/mtest/mtest.c	/^void rand_num2(mp_int *a)$/;"	f	language:C	signature:(mp_int *a)
rand_prime	libtomcrypt/src/headers/tomcrypt_pk.h	/^int rand_prime(void *N, long len, prng_state *prng, int wprng);$/;"	p	language:C++	signature:(void *N, long len, prng_state *prng, int wprng)
rand_prime	libtomcrypt/src/math/rand_prime.c	/^int rand_prime(void *N, long len, prng_state *prng, int wprng)$/;"	f	language:C	signature:(void *N, long len, prng_state *prng, int wprng)
rc	libtomcrypt/src/ciphers/anubis.c	/^static const ulong32 rc[] = {$/;"	v	language:C	file:
rc2	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct rc2_key rc2;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::rc2_key	access:public
rc2_desc	libtomcrypt/src/ciphers/rc2.c	/^const struct ltc_cipher_descriptor rc2_desc = {$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
rc2_done	libtomcrypt/src/ciphers/rc2.c	/^void rc2_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
rc2_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void rc2_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
rc2_ecb_decrypt	libtomcrypt/src/ciphers/rc2.c	/^int rc2_ecb_decrypt( const unsigned char *ct,$/;"	f	language:C	signature:( const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
rc2_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc2_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
rc2_ecb_encrypt	libtomcrypt/src/ciphers/rc2.c	/^int rc2_ecb_encrypt( const unsigned char *pt,$/;"	f	language:C	signature:( const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
rc2_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc2_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
rc2_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct rc2_key { unsigned xkey[64]; };$/;"	s	language:C++
rc2_key::xkey	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct rc2_key { unsigned xkey[64]; };$/;"	m	language:C++	struct:rc2_key	access:public
rc2_keysize	libtomcrypt/src/ciphers/rc2.c	/^int rc2_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
rc2_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc2_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
rc2_setup	libtomcrypt/src/ciphers/rc2.c	/^int rc2_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
rc2_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc2_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
rc2_test	libtomcrypt/src/ciphers/rc2.c	/^int rc2_test(void)$/;"	f	language:C	signature:(void)
rc2_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc2_test(void);$/;"	p	language:C++	signature:(void)
rc4	libtomcrypt/src/headers/tomcrypt_prng.h	/^    struct rc4_prng       rc4;$/;"	m	language:C++	union:Prng_state	typeref:struct:Prng_state::rc4_prng	access:public
rc4_add_entropy	libtomcrypt/src/headers/tomcrypt_prng.h	/^int rc4_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
rc4_add_entropy	libtomcrypt/src/prngs/rc4.c	/^int rc4_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
rc4_desc	libtomcrypt/src/prngs/rc4.c	/^const struct ltc_prng_descriptor rc4_desc = $/;"	v	language:C	typeref:struct:ltc_prng_descriptor
rc4_done	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  rc4_done(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
rc4_done	libtomcrypt/src/prngs/rc4.c	/^int rc4_done(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
rc4_export	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  rc4_export(unsigned char *out, unsigned long *outlen, prng_state *prng);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long *outlen, prng_state *prng)
rc4_export	libtomcrypt/src/prngs/rc4.c	/^int rc4_export(unsigned char *out, unsigned long *outlen, prng_state *prng)$/;"	f	language:C	signature:(unsigned char *out, unsigned long *outlen, prng_state *prng)
rc4_import	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  rc4_import(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
rc4_import	libtomcrypt/src/prngs/rc4.c	/^int rc4_import(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
rc4_prng	libtomcrypt/src/headers/tomcrypt_prng.h	/^struct rc4_prng {$/;"	s	language:C++
rc4_prng::buf	libtomcrypt/src/headers/tomcrypt_prng.h	/^    unsigned char buf[256];$/;"	m	language:C++	struct:rc4_prng	access:public
rc4_prng::x	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int x, y;$/;"	m	language:C++	struct:rc4_prng	access:public
rc4_prng::y	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int x, y;$/;"	m	language:C++	struct:rc4_prng	access:public
rc4_read	libtomcrypt/src/headers/tomcrypt_prng.h	/^unsigned long rc4_read(unsigned char *out, unsigned long outlen, prng_state *prng);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long outlen, prng_state *prng)
rc4_read	libtomcrypt/src/prngs/rc4.c	/^unsigned long rc4_read(unsigned char *out, unsigned long outlen, prng_state *prng)$/;"	f	language:C	signature:(unsigned char *out, unsigned long outlen, prng_state *prng)
rc4_ready	libtomcrypt/src/headers/tomcrypt_prng.h	/^int rc4_ready(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
rc4_ready	libtomcrypt/src/prngs/rc4.c	/^int rc4_ready(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
rc4_start	libtomcrypt/src/headers/tomcrypt_prng.h	/^int rc4_start(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
rc4_start	libtomcrypt/src/prngs/rc4.c	/^int rc4_start(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
rc4_test	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  rc4_test(void);$/;"	p	language:C++	signature:(void)
rc4_test	libtomcrypt/src/prngs/rc4.c	/^int rc4_test(void)$/;"	f	language:C	signature:(void)
rc5	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct rc5_key      rc5;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::rc5_key	access:public
rc5_desc	libtomcrypt/src/ciphers/rc5.c	/^const struct ltc_cipher_descriptor rc5_desc =$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
rc5_done	libtomcrypt/src/ciphers/rc5.c	/^void rc5_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
rc5_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void rc5_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
rc5_ecb_decrypt	libtomcrypt/src/ciphers/rc5.c	/^int rc5_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
rc5_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc5_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
rc5_ecb_encrypt	libtomcrypt/src/ciphers/rc5.c	/^int rc5_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
rc5_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc5_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
rc5_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct rc5_key {$/;"	s	language:C++
rc5_key::K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 K[50];$/;"	m	language:C++	struct:rc5_key	access:public
rc5_key::rounds	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int rounds;$/;"	m	language:C++	struct:rc5_key	access:public
rc5_keysize	libtomcrypt/src/ciphers/rc5.c	/^int rc5_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
rc5_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc5_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
rc5_setup	libtomcrypt/src/ciphers/rc5.c	/^int rc5_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
rc5_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc5_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
rc5_test	libtomcrypt/src/ciphers/rc5.c	/^int rc5_test(void)$/;"	f	language:C	signature:(void)
rc5_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc5_test(void);$/;"	p	language:C++	signature:(void)
rc6	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct rc6_key      rc6;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::rc6_key	access:public
rc6_desc	libtomcrypt/src/ciphers/rc6.c	/^const struct ltc_cipher_descriptor rc6_desc =$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
rc6_done	libtomcrypt/src/ciphers/rc6.c	/^void rc6_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
rc6_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void rc6_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
rc6_ecb_decrypt	libtomcrypt/src/ciphers/rc6.c	/^int rc6_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
rc6_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc6_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
rc6_ecb_encrypt	libtomcrypt/src/ciphers/rc6.c	/^int rc6_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
rc6_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc6_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
rc6_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct rc6_key {$/;"	s	language:C++
rc6_key::K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 K[44];$/;"	m	language:C++	struct:rc6_key	access:public
rc6_keysize	libtomcrypt/src/ciphers/rc6.c	/^int rc6_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
rc6_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc6_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
rc6_setup	libtomcrypt/src/ciphers/rc6.c	/^int rc6_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
rc6_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc6_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
rc6_test	libtomcrypt/src/ciphers/rc6.c	/^int rc6_test(void)$/;"	f	language:C	signature:(void)
rc6_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rc6_test(void);$/;"	p	language:C++	signature:(void)
rcon	libtomcrypt/src/ciphers/aes/aes_tab.c	/^static const ulong32 rcon[] = {$/;"	v	language:C	file:
rcsid	sftp-server/openbsd-compat/getopt.c	/^static char *rcsid = "$OpenBSD: getopt.c,v 1.5 2003\/06\/02 20:18:37 millert Exp $";$/;"	v	language:C	file:
rdatainfo	sftp-server/openbsd-compat/getrrsetbyname.h	/^struct rdatainfo {$/;"	s	language:C++
rdatainfo::rdi_data	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned char		*rdi_data;	\/* record data *\/$/;"	m	language:C++	struct:rdatainfo	access:public
rdatainfo::rdi_length	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned int		rdi_length;	\/* length of data *\/$/;"	m	language:C++	struct:rdatainfo	access:public
rdi_data	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned char		*rdi_data;	\/* record data *\/$/;"	m	language:C++	struct:rdatainfo	access:public
rdi_length	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned int		rdi_length;	\/* length of data *\/$/;"	m	language:C++	struct:rdatainfo	access:public
rdtsc	libtomcrypt/testprof/tomcrypt_test.h	/^ulong64 rdtsc (void);$/;"	p	language:C++	signature:(void)
rdtsc	libtomcrypt/testprof/x86_prof.c	/^ulong64 rdtsc (void)$/;"	f	language:C	signature:(void)
read	libtomcrypt/src/headers/tomcrypt_prng.h	/^    unsigned long (*read)(unsigned char *out, unsigned long outlen, prng_state *prng);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
read_kex_algos	common-kex.c	/^static void read_kex_algos() {$/;"	f	language:C	file:
read_kex_algos	common-kex.c	/^static void read_kex_algos();$/;"	p	language:C	file:
read_keyfile_line	sftp-server/misc.c	/^read_keyfile_line(FILE *f, const char *filename, char *buf, size_t bufsz,$/;"	f	language:C	signature:(FILE *f, const char *filename, char *buf, size_t bufsz, u_long *lineno)
read_keyfile_line	sftp-server/misc.h	/^int	 read_keyfile_line(FILE *, const char *, char *, size_t, u_long *);$/;"	p	language:C++	signature:(FILE *, const char *, char *, size_t, u_long *)
read_packet	packet.c	/^void read_packet() {$/;"	f	language:C
read_packet	packet.h	/^void read_packet();$/;"	p	language:C++	signature:()
read_packet_init	packet.c	/^static int read_packet_init() {$/;"	f	language:C	file:
read_packet_init	packet.c	/^static int read_packet_init();$/;"	p	language:C	file:
read_passphrase	sftp-server/misc.h	/^char	*read_passphrase(const char *, int);$/;"	p	language:C++	signature:(const char *, int)
read_radix	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*read_radix)(void *a, const char *str, int radix);$/;"	m	language:C++	struct:__anon54	access:public
read_radix	libtomcrypt/src/math/gmp_desc.c	/^static int read_radix(void *a, const char *b, int radix)$/;"	f	language:C	file:	signature:(void *a, const char *b, int radix)
read_radix	libtomcrypt/src/math/ltm_desc.c	/^static int read_radix(void *a, const char *b, int radix)$/;"	f	language:C	file:	signature:(void *a, const char *b, int radix)
read_radix	libtomcrypt/src/math/tfm_desc.c	/^static int read_radix(void *a, const char *b, int radix)$/;"	f	language:C	file:	signature:(void *a, const char *b, int radix)
readbuf	session.h	/^	buffer *readbuf; \/* From the wire, decrypted in-place *\/$/;"	m	language:C++	struct:sshsession	access:public
readfd	channel.h	/^	int readfd; \/* read from insecure side, written to wire *\/$/;"	m	language:C++	struct:Channel	access:public
readhostkey	common-runopts.c	/^int readhostkey(const char * filename, sign_key * hostkey, int *type) {$/;"	f	language:C	signature:(const char * filename, sign_key * hostkey, int *type)
readhostkey	runopts.h	/^int readhostkey(const char * filename, sign_key * hostkey, int *type);$/;"	p	language:C++	signature:(const char * filename, sign_key * hostkey, int *type)
readonly	sftp-server/sftp-server.c	/^int readonly;$/;"	v	language:C
readpassphrase	sftp-server/openbsd-compat/readpassphrase.h	/^char * readpassphrase(const char *, char *, size_t, int);$/;"	p	language:C++	signature:(const char *, char *, size_t, int)
readpos	circbuffer.h	/^	unsigned int readpos;$/;"	m	language:C++	struct:circbuf	access:public
readrand	random.c	/^static void readrand(unsigned char* buf, unsigned int buflen) {$/;"	f	language:C	file:	signature:(unsigned char* buf, unsigned int buflen)
readrand	random.c	/^static void readrand(unsigned char* buf, unsigned int buflen);$/;"	p	language:C	file:	signature:(unsigned char* buf, unsigned int buflen)
ready	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int (*ready)(prng_state *prng);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
realpath	sftp-server/openbsd-compat/openbsd-compat.h	/^char *realpath(const char *path, char *resolved);$/;"	p	language:C++	signature:(const char *path, char *resolved)
recv	session.h	/^	struct key_context_directional recv;$/;"	m	language:C++	struct:key_context	typeref:struct:key_context::key_context_directional	access:public
recv_close	channel.h	/^	int sent_close, recv_close;$/;"	m	language:C++	struct:Channel	access:public
recv_eof	channel.h	/^	int recv_eof, sent_eof;$/;"	m	language:C++	struct:Channel	access:public
recv_msg_channel_close	channel.h	/^void recv_msg_channel_close();$/;"	p	language:C++	signature:()
recv_msg_channel_close	common-channel.c	/^void recv_msg_channel_close() {$/;"	f	language:C
recv_msg_channel_data	channel.h	/^void recv_msg_channel_data();$/;"	p	language:C++	signature:()
recv_msg_channel_data	common-channel.c	/^void recv_msg_channel_data() {$/;"	f	language:C
recv_msg_channel_eof	channel.h	/^void recv_msg_channel_eof();$/;"	p	language:C++	signature:()
recv_msg_channel_eof	common-channel.c	/^void recv_msg_channel_eof() {$/;"	f	language:C
recv_msg_channel_extended_data	channel.h	/^void recv_msg_channel_extended_data();$/;"	p	language:C++	signature:()
recv_msg_channel_extended_data	cli-channel.c	/^void recv_msg_channel_extended_data() {$/;"	f	language:C
recv_msg_channel_open	channel.h	/^void recv_msg_channel_open();$/;"	p	language:C++	signature:()
recv_msg_channel_open	common-channel.c	/^void recv_msg_channel_open() {$/;"	f	language:C
recv_msg_channel_open_confirmation	channel.h	/^void recv_msg_channel_open_confirmation();$/;"	p	language:C++	signature:()
recv_msg_channel_open_confirmation	common-channel.c	/^void recv_msg_channel_open_confirmation() {$/;"	f	language:C
recv_msg_channel_open_failure	channel.h	/^void recv_msg_channel_open_failure();$/;"	p	language:C++	signature:()
recv_msg_channel_open_failure	common-channel.c	/^void recv_msg_channel_open_failure() {$/;"	f	language:C
recv_msg_channel_request	channel.h	/^void recv_msg_channel_request();$/;"	p	language:C++	signature:()
recv_msg_channel_request	common-channel.c	/^void recv_msg_channel_request() {$/;"	f	language:C
recv_msg_channel_window_adjust	channel.h	/^void recv_msg_channel_window_adjust();$/;"	p	language:C++	signature:()
recv_msg_channel_window_adjust	common-channel.c	/^void recv_msg_channel_window_adjust() {$/;"	f	language:C
recv_msg_global_request_remotetcp	svr-tcpfwd.c	/^void recv_msg_global_request_remotetcp() {$/;"	f	language:C
recv_msg_global_request_remotetcp	tcpfwd.h	/^void recv_msg_global_request_remotetcp();$/;"	p	language:C++	signature:()
recv_msg_kexdh_init	kex.h	/^void recv_msg_kexdh_init(); \/* server *\/$/;"	p	language:C++	signature:()
recv_msg_kexdh_init	svr-kex.c	/^void recv_msg_kexdh_init() {$/;"	f	language:C
recv_msg_kexdh_reply	cli-kex.c	/^void recv_msg_kexdh_reply() {$/;"	f	language:C
recv_msg_kexdh_reply	kex.h	/^void recv_msg_kexdh_reply(); \/* client *\/$/;"	p	language:C++	signature:()
recv_msg_kexinit	common-kex.c	/^void recv_msg_kexinit() {$/;"	f	language:C
recv_msg_kexinit	kex.h	/^void recv_msg_kexinit();$/;"	p	language:C++	signature:()
recv_msg_newkeys	common-kex.c	/^void recv_msg_newkeys() {$/;"	f	language:C
recv_msg_newkeys	kex.h	/^void recv_msg_newkeys();$/;"	p	language:C++	signature:()
recv_msg_service_accept	cli-service.c	/^void recv_msg_service_accept() {$/;"	f	language:C
recv_msg_service_accept	service.h	/^void recv_msg_service_accept(); \/* Client *\/$/;"	p	language:C++	signature:()
recv_msg_service_request	service.h	/^void recv_msg_service_request(); \/* Server *\/$/;"	p	language:C++	signature:()
recv_msg_service_request	svr-service.c	/^void recv_msg_service_request() {$/;"	f	language:C
recv_msg_userauth_banner	auth.h	/^void recv_msg_userauth_banner();$/;"	p	language:C++	signature:()
recv_msg_userauth_banner	cli-auth.c	/^void recv_msg_userauth_banner() {$/;"	f	language:C
recv_msg_userauth_failure	auth.h	/^void recv_msg_userauth_failure();$/;"	p	language:C++	signature:()
recv_msg_userauth_failure	cli-auth.c	/^void recv_msg_userauth_failure() {$/;"	f	language:C
recv_msg_userauth_info_request	auth.h	/^void recv_msg_userauth_info_request();$/;"	p	language:C++	signature:()
recv_msg_userauth_info_request	cli-authinteract.c	/^void recv_msg_userauth_info_request() {$/;"	f	language:C
recv_msg_userauth_pk_ok	auth.h	/^void recv_msg_userauth_pk_ok();$/;"	p	language:C++	signature:()
recv_msg_userauth_pk_ok	cli-authpubkey.c	/^void recv_msg_userauth_pk_ok() {$/;"	f	language:C
recv_msg_userauth_request	auth.h	/^void recv_msg_userauth_request();$/;"	p	language:C++	signature:()
recv_msg_userauth_request	svr-auth.c	/^void recv_msg_userauth_request() {$/;"	f	language:C
recv_msg_userauth_specific_60	auth.h	/^void recv_msg_userauth_specific_60();$/;"	p	language:C++	signature:()
recv_msg_userauth_specific_60	cli-auth.c	/^void recv_msg_userauth_specific_60() {$/;"	f	language:C
recv_msg_userauth_success	auth.h	/^void recv_msg_userauth_success();$/;"	p	language:C++	signature:()
recv_msg_userauth_success	cli-auth.c	/^void recv_msg_userauth_success() {$/;"	f	language:C
recv_unimplemented	process-packet.c	/^static void recv_unimplemented() {$/;"	f	language:C	file:
recv_unimplemented	process-packet.c	/^static void recv_unimplemented();$/;"	p	language:C	file:
recv_window	runopts.h	/^	unsigned int recv_window;$/;"	m	language:C++	struct:runopts	access:public
recvdonelen	channel.h	/^	unsigned int recvdonelen;$/;"	m	language:C++	struct:Channel	access:public
recvkexinit	kex.h	/^	unsigned recvkexinit : 1;$/;"	m	language:C++	struct:KEXState	access:public
recvmaxpacket	channel.h	/^	unsigned int recvmaxpacket, transmaxpacket;$/;"	m	language:C++	struct:Channel	access:public
recvnewkeys	kex.h	/^	unsigned recvnewkeys : 1;$/;"	m	language:C++	struct:KEXState	access:public
recvseq	session.h	/^	unsigned int transseq, recvseq; \/* Sequence IDs *\/$/;"	m	language:C++	struct:sshsession	access:public
recvwindow	channel.h	/^	unsigned int recvwindow, transwindow;$/;"	m	language:C++	struct:Channel	access:public
refresh_progress_meter	progressmeter.c	/^refresh_progress_meter(void)$/;"	f	language:C	signature:(void)
refresh_progress_meter	progressmeter.c	/^void refresh_progress_meter(void);$/;"	p	language:C	file:	signature:(void)
reg_algs	libtomcrypt/demos/tv_gen.c	/^void reg_algs(void)$/;"	f	language:C	signature:(void)
reg_algs	libtomcrypt/testprof/tomcrypt_test.h	/^void reg_algs(void);$/;"	p	language:C++	signature:(void)
reg_algs	libtomcrypt/testprof/x86_prof.c	/^void reg_algs(void)$/;"	f	language:C	signature:(void)
register_algs	libtomcrypt/demos/encrypt.c	/^void register_algs(void)$/;"	f	language:C	signature:(void)
register_algs	libtomcrypt/demos/hashsum.c	/^void register_algs();$/;"	p	language:C	file:
register_algs	libtomcrypt/demos/hashsum.c	/^void register_algs(void)$/;"	f	language:C	signature:(void)
register_cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int register_cipher(const struct ltc_cipher_descriptor *cipher);$/;"	p	language:C++	signature:(const struct ltc_cipher_descriptor *cipher)
register_cipher	libtomcrypt/src/misc/crypt/crypt_register_cipher.c	/^int register_cipher(const struct ltc_cipher_descriptor *cipher)$/;"	f	language:C	signature:(const struct ltc_cipher_descriptor *cipher)
register_hash	libtomcrypt/src/headers/tomcrypt_hash.h	/^int register_hash(const struct ltc_hash_descriptor *hash);$/;"	p	language:C++	signature:(const struct ltc_hash_descriptor *hash)
register_hash	libtomcrypt/src/misc/crypt/crypt_register_hash.c	/^int register_hash(const struct ltc_hash_descriptor *hash)$/;"	f	language:C	signature:(const struct ltc_hash_descriptor *hash)
register_prng	libtomcrypt/src/headers/tomcrypt_prng.h	/^int register_prng(const struct ltc_prng_descriptor *prng);$/;"	p	language:C++	signature:(const struct ltc_prng_descriptor *prng)
register_prng	libtomcrypt/src/misc/crypt/crypt_register_prng.c	/^int register_prng(const struct ltc_prng_descriptor *prng)$/;"	f	language:C	signature:(const struct ltc_prng_descriptor *prng)
rem_105	libtommath/bn_mp_is_square.c	/^static const char rem_105[105] = {$/;"	v	language:C	file:
rem_105	libtommath/pre_gen/mpi.c	/^static const char rem_105[105] = {$/;"	v	language:C	file:
rem_128	libtommath/bn_mp_is_square.c	/^static const char rem_128[128] = {$/;"	v	language:C	file:
rem_128	libtommath/pre_gen/mpi.c	/^static const char rem_128[128] = {$/;"	v	language:C	file:
remin	scp.c	/^int errs, remin, remout;$/;"	v	language:C
remote_id	sftp-server/channels.h	/^	int     remote_id;	\/* channel identifier for remote peer *\/$/;"	m	language:C++	struct:Channel	access:public
remote_maxpacket	sftp-server/channels.h	/^	u_int	remote_maxpacket;$/;"	m	language:C++	struct:Channel	access:public
remote_name	sftp-server/channels.h	/^	char   *remote_name;	\/* remote hostname *\/$/;"	m	language:C++	struct:Channel	access:public
remote_window	sftp-server/channels.h	/^	u_int	remote_window;$/;"	m	language:C++	struct:Channel	access:public
remotechan	channel.h	/^	unsigned int remotechan;$/;"	m	language:C++	struct:Channel	access:public
remoteclosed	session.h	/^	void(*remoteclosed)(); \/* A callback to handle closure of the$/;"	m	language:C++	struct:sshsession	access:public
remotefwds	runopts.h	/^	m_list * remotefwds;$/;"	m	language:C++	struct:cli_runopts	access:public
remotehost	runopts.h	/^	char *remotehost;$/;"	m	language:C++	struct:cli_runopts	access:public
remotehost	session.h	/^	char *remotehost;$/;"	m	language:C++	struct:serversession	access:public
remoteident	session.h	/^	unsigned char *remoteident;$/;"	m	language:C++	struct:sshsession	access:public
remoteport	runopts.h	/^	char *remoteport;$/;"	m	language:C++	struct:cli_runopts	access:public
remout	scp.c	/^int errs, remin, remout;$/;"	v	language:C
remove_channel	common-channel.c	/^static void remove_channel(struct Channel * channel) {$/;"	f	language:C	file:	signature:(struct Channel * channel)
remove_channel	common-channel.c	/^static void remove_channel(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
remove_listener	listener.c	/^void remove_listener(struct Listener* listener) {$/;"	f	language:C	signature:(struct Listener* listener)
remove_listener	listener.h	/^void remove_listener(struct Listener* listener);$/;"	p	language:C++	signature:(struct Listener* listener)
replacearg	scpmisc.c	/^replacearg(arglist *args, u_int which, char *fmt, ...)$/;"	f	language:C	signature:(arglist *args, u_int which, char *fmt, ...)
replacearg	scpmisc.h	/^void	 replacearg(arglist *, u_int, char *, ...);$/;"	p	language:C++	signature:(arglist *, u_int, char *, ...)
replacearg	sftp-server/misc.c	/^replacearg(arglist *args, u_int which, char *fmt, ...)$/;"	f	language:C	signature:(arglist *args, u_int which, char *fmt, ...)
replacearg	sftp-server/misc.h	/^void	 replacearg(arglist *, u_int, char *, ...)$/;"	p	language:C++	signature:(arglist *, u_int, char *, ...)
reply_queue_head	session.h	/^	struct packetlist *reply_queue_head, *reply_queue_tail;$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::packetlist	access:public
reply_queue_tail	session.h	/^	struct packetlist *reply_queue_head, *reply_queue_tail;$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::	access:public
req	libtomcrypt/testprof/tomcrypt_test.h	/^    char *name, *prov, *req;$/;"	m	language:C++	struct:__anon55	access:public
reqhandler	channel.h	/^	void (*reqhandler)(struct Channel*);$/;"	m	language:C++	struct:ChanType	access:public
requirenext	session.h	/^	unsigned char requirenext; \/* byte indicating what packet we require next, $/;"	m	language:C++	struct:sshsession	access:public
reseedrandom	random.c	/^void reseedrandom() {$/;"	f	language:C
reseedrandom	random.h	/^void reseedrandom();$/;"	p	language:C++	signature:()
reset_cnt	libtomcrypt/src/headers/tomcrypt_prng.h	/^    ulong64       reset_cnt;  \/* number of times we have reset *\/$/;"	m	language:C++	struct:fortuna_prng	access:public
response	scp.c	/^int response(void);$/;"	p	language:C	file:	signature:(void)
response	scp.c	/^response(void)$/;"	f	language:C	signature:(void)
restore_uid	sftp-server/uidswap.h	/^void	 restore_uid(void);$/;"	p	language:C++	signature:(void)
results	libtomcrypt/testprof/x86_prof.c	/^struct list results[100];$/;"	v	language:C	typeref:struct:list
retval	session.h	/^	int retval; \/* What the command exit status was - we emulate it *\/$/;"	m	language:C++	struct:clientsession	access:public
revents	sftp-server/openbsd-compat/bsd-poll.h	/^	short	revents;$/;"	m	language:C++	struct:pollfd	access:public
rexec_recv_rng_seed	sftp-server/entropy.h	/^void rexec_recv_rng_seed(Buffer *);$/;"	p	language:C++	signature:(Buffer *)
rexec_send_rng_seed	sftp-server/entropy.h	/^void rexec_send_rng_seed(Buffer *);$/;"	p	language:C++	signature:(Buffer *)
rfd	sftp-server/channels.h	/^	int     rfd;		\/* read fd *\/$/;"	m	language:C++	struct:Channel	access:public
rijndael	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct rijndael_key rijndael;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::rijndael_key	access:public
rijndael_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void rijndael_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
rijndael_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rijndael_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
rijndael_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rijndael_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
rijndael_enc_desc	libtomcrypt/src/ciphers/aes/aes.c	/^const struct ltc_cipher_descriptor rijndael_enc_desc =$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
rijndael_enc_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void rijndael_enc_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
rijndael_enc_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rijndael_enc_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
rijndael_enc_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rijndael_enc_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
rijndael_enc_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rijndael_enc_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
rijndael_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct rijndael_key {$/;"	s	language:C++
rijndael_key::Nr	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int Nr;$/;"	m	language:C++	struct:rijndael_key	access:public
rijndael_key::dK	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 eK[60], dK[60];$/;"	m	language:C++	struct:rijndael_key	access:public
rijndael_key::eK	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 eK[60], dK[60];$/;"	m	language:C++	struct:rijndael_key	access:public
rijndael_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rijndael_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
rijndael_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rijndael_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
rijndael_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int rijndael_test(void);$/;"	p	language:C++	signature:(void)
rmd128	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct rmd128_state rmd128;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::rmd128_state	access:public
rmd128_compress	libtomcrypt/src/hashes/rmd128.c	/^static int rmd128_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
rmd128_desc	libtomcrypt/src/hashes/rmd128.c	/^const struct ltc_hash_descriptor rmd128_desc =$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
rmd128_done	libtomcrypt/src/hashes/rmd128.c	/^int rmd128_done(hash_state * md, unsigned char *out)$/;"	f	language:C	signature:(hash_state * md, unsigned char *out)
rmd128_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd128_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
rmd128_init	libtomcrypt/src/hashes/rmd128.c	/^int rmd128_init(hash_state * md)$/;"	f	language:C	signature:(hash_state * md)
rmd128_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd128_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
rmd128_process	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd128_process(hash_state * md, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(hash_state * md, const unsigned char *in, unsigned long inlen)
rmd128_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^struct rmd128_state {$/;"	s	language:C++
rmd128_state::buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:rmd128_state	access:public
rmd128_state::curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[4];$/;"	m	language:C++	struct:rmd128_state	access:public
rmd128_state::length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:rmd128_state	access:public
rmd128_state::state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[4];$/;"	m	language:C++	struct:rmd128_state	access:public
rmd128_test	libtomcrypt/src/hashes/rmd128.c	/^int rmd128_test(void)$/;"	f	language:C	signature:(void)
rmd128_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd128_test(void);$/;"	p	language:C++	signature:(void)
rmd160	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct rmd160_state rmd160;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::rmd160_state	access:public
rmd160_compress	libtomcrypt/src/hashes/rmd160.c	/^static int rmd160_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
rmd160_desc	libtomcrypt/src/hashes/rmd160.c	/^const struct ltc_hash_descriptor rmd160_desc =$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
rmd160_done	libtomcrypt/src/hashes/rmd160.c	/^int rmd160_done(hash_state * md, unsigned char *out)$/;"	f	language:C	signature:(hash_state * md, unsigned char *out)
rmd160_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd160_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
rmd160_init	libtomcrypt/src/hashes/rmd160.c	/^int rmd160_init(hash_state * md)$/;"	f	language:C	signature:(hash_state * md)
rmd160_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd160_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
rmd160_process	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd160_process(hash_state * md, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(hash_state * md, const unsigned char *in, unsigned long inlen)
rmd160_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^struct rmd160_state {$/;"	s	language:C++
rmd160_state::buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:rmd160_state	access:public
rmd160_state::curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[5];$/;"	m	language:C++	struct:rmd160_state	access:public
rmd160_state::length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:rmd160_state	access:public
rmd160_state::state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[5];$/;"	m	language:C++	struct:rmd160_state	access:public
rmd160_test	libtomcrypt/src/hashes/rmd160.c	/^int rmd160_test(void)$/;"	f	language:C	signature:(void)
rmd160_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd160_test(void);$/;"	p	language:C++	signature:(void)
rmd256	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct rmd256_state rmd256;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::rmd256_state	access:public
rmd256_compress	libtomcrypt/src/hashes/rmd256.c	/^static int rmd256_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
rmd256_desc	libtomcrypt/src/hashes/rmd256.c	/^const struct ltc_hash_descriptor rmd256_desc =$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
rmd256_done	libtomcrypt/src/hashes/rmd256.c	/^int rmd256_done(hash_state * md, unsigned char *out)$/;"	f	language:C	signature:(hash_state * md, unsigned char *out)
rmd256_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd256_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
rmd256_init	libtomcrypt/src/hashes/rmd256.c	/^int rmd256_init(hash_state * md)$/;"	f	language:C	signature:(hash_state * md)
rmd256_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd256_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
rmd256_process	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd256_process(hash_state * md, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(hash_state * md, const unsigned char *in, unsigned long inlen)
rmd256_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^struct rmd256_state {$/;"	s	language:C++
rmd256_state::buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:rmd256_state	access:public
rmd256_state::curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[8];$/;"	m	language:C++	struct:rmd256_state	access:public
rmd256_state::length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:rmd256_state	access:public
rmd256_state::state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[8];$/;"	m	language:C++	struct:rmd256_state	access:public
rmd256_test	libtomcrypt/src/hashes/rmd256.c	/^int rmd256_test(void)$/;"	f	language:C	signature:(void)
rmd256_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd256_test(void);$/;"	p	language:C++	signature:(void)
rmd320	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct rmd320_state rmd320;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::rmd320_state	access:public
rmd320_compress	libtomcrypt/src/hashes/rmd320.c	/^static int rmd320_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
rmd320_desc	libtomcrypt/src/hashes/rmd320.c	/^const struct ltc_hash_descriptor rmd320_desc =$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
rmd320_done	libtomcrypt/src/hashes/rmd320.c	/^int rmd320_done(hash_state * md, unsigned char *out)$/;"	f	language:C	signature:(hash_state * md, unsigned char *out)
rmd320_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd320_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
rmd320_init	libtomcrypt/src/hashes/rmd320.c	/^int rmd320_init(hash_state * md)$/;"	f	language:C	signature:(hash_state * md)
rmd320_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd320_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
rmd320_process	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd320_process(hash_state * md, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(hash_state * md, const unsigned char *in, unsigned long inlen)
rmd320_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^struct rmd320_state {$/;"	s	language:C++
rmd320_state::buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:rmd320_state	access:public
rmd320_state::curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[10];$/;"	m	language:C++	struct:rmd320_state	access:public
rmd320_state::length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:rmd320_state	access:public
rmd320_state::state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[10];$/;"	m	language:C++	struct:rmd320_state	access:public
rmd320_test	libtomcrypt/src/hashes/rmd320.c	/^int rmd320_test(void)$/;"	f	language:C	signature:(void)
rmd320_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int rmd320_test(void);$/;"	p	language:C++	signature:(void)
rng	libtommath/mtest/mtest.c	/^FILE *rng;$/;"	v	language:C
rng_ansic	libtomcrypt/src/prngs/rng_get_bytes.c	/^static unsigned long rng_ansic(unsigned char *buf, unsigned long len, $/;"	f	language:C	file:	signature:(unsigned char *buf, unsigned long len, void (*callback)(void))
rng_get_bytes	libtomcrypt/src/headers/tomcrypt_prng.h	/^unsigned long rng_get_bytes(unsigned char *out, $/;"	p	language:C++	signature:(unsigned char *out, unsigned long outlen, void (*callback)(void))
rng_get_bytes	libtomcrypt/src/prngs/rng_get_bytes.c	/^unsigned long rng_get_bytes(unsigned char *out, unsigned long outlen, $/;"	f	language:C	signature:(unsigned char *out, unsigned long outlen, void (*callback)(void))
rng_make_prng	libtomcrypt/src/headers/tomcrypt_prng.h	/^int rng_make_prng(int bits, int wprng, prng_state *prng, void (*callback)(void));$/;"	p	language:C++	signature:(int bits, int wprng, prng_state *prng, void (*callback)(void))
rng_make_prng	libtomcrypt/src/prngs/rng_make_prng.c	/^int rng_make_prng(int bits, int wprng, prng_state *prng, $/;"	f	language:C	signature:(int bits, int wprng, prng_state *prng, void (*callback)(void))
rng_nix	libtomcrypt/src/prngs/rng_get_bytes.c	/^static unsigned long rng_nix(unsigned char *buf, unsigned long len, $/;"	f	language:C	file:	signature:(unsigned char *buf, unsigned long len, void (*callback)(void))
rng_win32	libtomcrypt/src/prngs/rng_get_bytes.c	/^static unsigned long rng_win32(unsigned char *buf, unsigned long len, $/;"	f	language:C	file:	signature:(unsigned char *buf, unsigned long len, void (*callback)(void))
roundKeyDec	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 roundKeyDec[18 + 1][4]; $/;"	m	language:C++	struct:anubis_key	access:public
roundKeyDec	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong64 roundKeyDec[8 + 1]; $/;"	m	language:C++	struct:khazad_key	access:public
roundKeyEnc	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong32 roundKeyEnc[18 + 1][4]; $/;"	m	language:C++	struct:anubis_key	access:public
roundKeyEnc	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   ulong64 roundKeyEnc[8 + 1]; $/;"	m	language:C++	struct:khazad_key	access:public
rounds	libtomcrypt/src/ciphers/kseed.c	/^static void rounds(ulong32 *P, ulong32 *K)$/;"	f	language:C	file:	signature:(ulong32 *P, ulong32 *K)
rounds	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int rounds;$/;"	m	language:C++	struct:rc5_key	access:public
rounds	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   long rounds;$/;"	m	language:C++	struct:saferp_key	access:public
roundup	sftp-server/defines.h	394;"	d	language:C++
rresvport_af	sftp-server/defines.h	/^  int rresvport_af (int *, sa_family_t);$/;"	p	language:C++	signature:(int *, sa_family_t)
rresvport_af	sftp-server/openbsd-compat/openbsd-compat.h	/^int rresvport_af(int *alport, sa_family_t af);$/;"	p	language:C++	signature:(int *alport, sa_family_t af)
rri_flags	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned int		rri_flags;	\/* RRSET_VALIDATED ... *\/$/;"	m	language:C++	struct:rrsetinfo	access:public
rri_name	sftp-server/openbsd-compat/getrrsetbyname.h	/^	char			*rri_name;	\/* canonical name *\/$/;"	m	language:C++	struct:rrsetinfo	access:public
rri_nrdatas	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned int		rri_nrdatas;	\/* size of rdatas array *\/$/;"	m	language:C++	struct:rrsetinfo	access:public
rri_nsigs	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned int		rri_nsigs;	\/* size of sigs array *\/$/;"	m	language:C++	struct:rrsetinfo	access:public
rri_rdatas	sftp-server/openbsd-compat/getrrsetbyname.h	/^	struct rdatainfo	*rri_rdatas;	\/* individual records *\/$/;"	m	language:C++	struct:rrsetinfo	typeref:struct:rrsetinfo::rdatainfo	access:public
rri_rdclass	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned int		rri_rdclass;	\/* class number *\/$/;"	m	language:C++	struct:rrsetinfo	access:public
rri_rdtype	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned int		rri_rdtype;	\/* RR type number *\/$/;"	m	language:C++	struct:rrsetinfo	access:public
rri_sigs	sftp-server/openbsd-compat/getrrsetbyname.h	/^	struct rdatainfo	*rri_sigs;	\/* individual signatures *\/$/;"	m	language:C++	struct:rrsetinfo	typeref:struct:rrsetinfo::rdatainfo	access:public
rri_ttl	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned int		rri_ttl;	\/* time to live *\/$/;"	m	language:C++	struct:rrsetinfo	access:public
rrsetinfo	sftp-server/openbsd-compat/getrrsetbyname.h	/^struct rrsetinfo {$/;"	s	language:C++
rrsetinfo::rri_flags	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned int		rri_flags;	\/* RRSET_VALIDATED ... *\/$/;"	m	language:C++	struct:rrsetinfo	access:public
rrsetinfo::rri_name	sftp-server/openbsd-compat/getrrsetbyname.h	/^	char			*rri_name;	\/* canonical name *\/$/;"	m	language:C++	struct:rrsetinfo	access:public
rrsetinfo::rri_nrdatas	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned int		rri_nrdatas;	\/* size of rdatas array *\/$/;"	m	language:C++	struct:rrsetinfo	access:public
rrsetinfo::rri_nsigs	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned int		rri_nsigs;	\/* size of sigs array *\/$/;"	m	language:C++	struct:rrsetinfo	access:public
rrsetinfo::rri_rdatas	sftp-server/openbsd-compat/getrrsetbyname.h	/^	struct rdatainfo	*rri_rdatas;	\/* individual records *\/$/;"	m	language:C++	struct:rrsetinfo	typeref:struct:rrsetinfo::rdatainfo	access:public
rrsetinfo::rri_rdclass	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned int		rri_rdclass;	\/* class number *\/$/;"	m	language:C++	struct:rrsetinfo	access:public
rrsetinfo::rri_rdtype	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned int		rri_rdtype;	\/* RR type number *\/$/;"	m	language:C++	struct:rrsetinfo	access:public
rrsetinfo::rri_sigs	sftp-server/openbsd-compat/getrrsetbyname.h	/^	struct rdatainfo	*rri_sigs;	\/* individual signatures *\/$/;"	m	language:C++	struct:rrsetinfo	typeref:struct:rrsetinfo::rdatainfo	access:public
rrsetinfo::rri_ttl	sftp-server/openbsd-compat/getrrsetbyname.h	/^	unsigned int		rri_ttl;	\/* time to live *\/$/;"	m	language:C++	struct:rrsetinfo	access:public
rs_mult	libtomcrypt/src/ciphers/twofish/twofish.c	/^static void rs_mult(const unsigned char *in, unsigned char *out)$/;"	f	language:C	file:	signature:(const unsigned char *in, unsigned char *out)
rs_tab0	libtomcrypt/src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab0[256] = {$/;"	v	language:C	file:
rs_tab1	libtomcrypt/src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab1[256] = {$/;"	v	language:C	file:
rs_tab2	libtomcrypt/src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab2[256] = {$/;"	v	language:C	file:
rs_tab3	libtomcrypt/src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab3[256] = {$/;"	v	language:C	file:
rs_tab4	libtomcrypt/src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab4[256] = {$/;"	v	language:C	file:
rs_tab5	libtomcrypt/src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab5[256] = {$/;"	v	language:C	file:
rs_tab6	libtomcrypt/src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab6[256] = {$/;"	v	language:C	file:
rs_tab7	libtomcrypt/src/ciphers/twofish/twofish_tab.c	/^static const ulong32 rs_tab7[256] = {$/;"	v	language:C	file:
rsa_compat_test	libtomcrypt/testprof/rsa_test.c	/^static int rsa_compat_test(void)$/;"	f	language:C	file:	signature:(void)
rsa_decrypt_key	libtomcrypt/src/headers/tomcrypt_pk.h	51;"	d	language:C++
rsa_decrypt_key_ex	libtomcrypt/src/headers/tomcrypt_pk.h	/^int rsa_decrypt_key_ex(const unsigned char *in,       unsigned long  inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, const unsigned char *lparam, unsigned long lparamlen, int hash_idx, int padding, int *stat, rsa_key *key)
rsa_decrypt_key_ex	libtomcrypt/src/pk/rsa/rsa_decrypt_key.c	/^int rsa_decrypt_key_ex(const unsigned char *in,       unsigned long  inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, const unsigned char *lparam, unsigned long lparamlen, int hash_idx, int padding, int *stat, rsa_key *key)
rsa_encrypt_key	libtomcrypt/src/headers/tomcrypt_pk.h	48;"	d	language:C++
rsa_encrypt_key_ex	libtomcrypt/src/headers/tomcrypt_pk.h	/^int rsa_encrypt_key_ex(const unsigned char *in,     unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, const unsigned char *lparam, unsigned long lparamlen, prng_state *prng, int prng_idx, int hash_idx, int padding, rsa_key *key)
rsa_encrypt_key_ex	libtomcrypt/src/pk/rsa/rsa_encrypt_key.c	/^int rsa_encrypt_key_ex(const unsigned char *in,     unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, const unsigned char *lparam, unsigned long lparamlen, prng_state *prng, int prng_idx, int hash_idx, int padding, rsa_key *key)
rsa_export	libtomcrypt/src/headers/tomcrypt_pk.h	/^int rsa_export(unsigned char *out, unsigned long *outlen, int type, rsa_key *key);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long *outlen, int type, rsa_key *key)
rsa_export	libtomcrypt/src/pk/rsa/rsa_export.c	/^int rsa_export(unsigned char *out, unsigned long *outlen, int type, rsa_key *key)$/;"	f	language:C	signature:(unsigned char *out, unsigned long *outlen, int type, rsa_key *key)
rsa_exptmod	libtomcrypt/src/headers/tomcrypt_pk.h	/^int rsa_exptmod(const unsigned char *in,   unsigned long inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, int which, rsa_key *key)
rsa_exptmod	libtomcrypt/src/pk/rsa/rsa_exptmod.c	/^int rsa_exptmod(const unsigned char *in,   unsigned long inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, int which, rsa_key *key)
rsa_free	libtomcrypt/src/headers/tomcrypt_pk.h	/^void rsa_free(rsa_key *key);$/;"	p	language:C++	signature:(rsa_key *key)
rsa_free	libtomcrypt/src/pk/rsa/rsa_free.c	/^void rsa_free(rsa_key *key)$/;"	f	language:C	signature:(rsa_key *key)
rsa_import	libtomcrypt/src/headers/tomcrypt_pk.h	/^int rsa_import(const unsigned char *in, unsigned long inlen, rsa_key *key);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, rsa_key *key)
rsa_import	libtomcrypt/src/pk/rsa/rsa_import.c	/^int rsa_import(const unsigned char *in, unsigned long inlen, rsa_key *key)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, rsa_key *key)
rsa_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^} rsa_key;$/;"	t	language:C++	typeref:struct:Rsa_key
rsa_key_free	rsa.c	/^void rsa_key_free(dropbear_rsa_key *key) {$/;"	f	language:C	signature:(dropbear_rsa_key *key)
rsa_key_free	rsa.h	/^void rsa_key_free(dropbear_rsa_key *key);$/;"	p	language:C++	signature:(dropbear_rsa_key *key)
rsa_make_key	libtomcrypt/src/headers/tomcrypt_pk.h	/^int rsa_make_key(prng_state *prng, int wprng, int size, long e, rsa_key *key);$/;"	p	language:C++	signature:(prng_state *prng, int wprng, int size, long e, rsa_key *key)
rsa_make_key	libtomcrypt/src/pk/rsa/rsa_make_key.c	/^int rsa_make_key(prng_state *prng, int wprng, int size, long e, rsa_key *key)$/;"	f	language:C	signature:(prng_state *prng, int wprng, int size, long e, rsa_key *key)
rsa_pad_em	rsa.c	/^static void rsa_pad_em(dropbear_rsa_key * key,$/;"	f	language:C	file:	signature:(dropbear_rsa_key * key, const unsigned char * data, unsigned int len, mp_int * rsa_em)
rsa_pad_em	rsa.c	/^static void rsa_pad_em(dropbear_rsa_key * key,$/;"	p	language:C	file:	signature:(dropbear_rsa_key * key, const unsigned char * data, unsigned int len, mp_int * rsa_em)
rsa_sign_hash	libtomcrypt/src/headers/tomcrypt_pk.h	54;"	d	language:C++
rsa_sign_hash_ex	libtomcrypt/src/headers/tomcrypt_pk.h	/^int rsa_sign_hash_ex(const unsigned char *in,       unsigned long  inlen,$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, int padding, prng_state *prng, int prng_idx, int hash_idx, unsigned long saltlen, rsa_key *key)
rsa_sign_hash_ex	libtomcrypt/src/pk/rsa/rsa_sign_hash.c	/^int rsa_sign_hash_ex(const unsigned char *in,       unsigned long  inlen,$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen, int padding, prng_state *prng, int prng_idx, int hash_idx, unsigned long saltlen, rsa_key *key)
rsa_test	libtomcrypt/testprof/rsa_test.c	/^int rsa_test(void)$/;"	f	language:C	signature:(void)
rsa_test	libtomcrypt/testprof/tomcrypt_test.h	/^int rsa_test(void);$/;"	p	language:C++	signature:(void)
rsa_verify_hash	libtomcrypt/src/headers/tomcrypt_pk.h	57;"	d	language:C++
rsa_verify_hash_ex	libtomcrypt/src/headers/tomcrypt_pk.h	/^int rsa_verify_hash_ex(const unsigned char *sig,      unsigned long siglen,$/;"	p	language:C++	signature:(const unsigned char *sig, unsigned long siglen, const unsigned char *hash, unsigned long hashlen, int padding, int hash_idx, unsigned long saltlen, int *stat, rsa_key *key)
rsa_verify_hash_ex	libtomcrypt/src/pk/rsa/rsa_verify_hash.c	/^int rsa_verify_hash_ex(const unsigned char *sig,      unsigned long siglen,$/;"	f	language:C	signature:(const unsigned char *sig, unsigned long siglen, const unsigned char *hash, unsigned long hashlen, int padding, int hash_idx, unsigned long saltlen, int *stat, rsa_key *key)
rsakey	signkey.h	/^	dropbear_rsa_key * rsakey;$/;"	m	language:C++	struct:SIGN_key	access:public
rsakeyfile	runopts.h	/^	char * rsakeyfile;$/;"	m	language:C++	struct:svr_runopts	access:public
rsource	scp.c	/^rsource(char *name, struct stat *statp)$/;"	f	language:C	signature:(char *name, struct stat *statp)
rsource	scp.c	/^void rsource(char *, struct stat *);$/;"	p	language:C	file:	signature:(char *, struct stat *)
run_cmd	libtomcrypt/testprof/test_driver.c	/^void run_cmd(int res, int line, char *file, char *cmd)$/;"	f	language:C	signature:(int res, int line, char *file, char *cmd)
run_cmd	libtomcrypt/testprof/tomcrypt_test.h	/^void run_cmd(int res, int line, char *file, char *cmd);$/;"	p	language:C++	signature:(int res, int line, char *file, char *cmd)
run_err	scp.c	/^run_err(const char *fmt,...)$/;"	f	language:C	signature:(const char *fmt,...)
run_err	scp.c	/^void run_err(const char *,...);$/;"	p	language:C	file:	signature:(const char *,...)
run_shell_command	dbutil.c	/^void run_shell_command(const char* cmd, unsigned int maxfd, char* usershell) {$/;"	f	language:C	signature:(const char* cmd, unsigned int maxfd, char* usershell)
run_shell_command	dbutil.h	/^void run_shell_command(const char* cmd, unsigned int maxfd, char* usershell);$/;"	p	language:C++	signature:(const char* cmd, unsigned int maxfd, char* usershell)
runopts	runopts.h	/^typedef struct runopts {$/;"	s	language:C++
runopts	runopts.h	/^} runopts;$/;"	t	language:C++	typeref:struct:runopts
runopts::enable_compress	runopts.h	/^	int enable_compress;$/;"	m	language:C++	struct:runopts	access:public
runopts::idle_timeout_secs	runopts.h	/^	time_t idle_timeout_secs;$/;"	m	language:C++	struct:runopts	access:public
runopts::keepalive_secs	runopts.h	/^	time_t keepalive_secs;$/;"	m	language:C++	struct:runopts	access:public
runopts::listen_fwd_all	runopts.h	/^	int listen_fwd_all;$/;"	m	language:C++	struct:runopts	access:public
runopts::recv_window	runopts.h	/^	unsigned int recv_window;$/;"	m	language:C++	struct:runopts	access:public
s128_diffuse	libtomcrypt/src/prngs/sober128.c	/^static void s128_diffuse(struct sober128_prng *c)$/;"	f	language:C	file:	signature:(struct sober128_prng *c)
s128_genkonst	libtomcrypt/src/prngs/sober128.c	/^static void s128_genkonst(struct sober128_prng *c)$/;"	f	language:C	file:	signature:(struct sober128_prng *c)
s128_reloadstate	libtomcrypt/src/prngs/sober128.c	/^static void s128_reloadstate(struct sober128_prng *c)$/;"	f	language:C	file:	signature:(struct sober128_prng *c)
s128_savestate	libtomcrypt/src/prngs/sober128.c	/^static void s128_savestate(struct sober128_prng *c)$/;"	f	language:C	file:	signature:(struct sober128_prng *c)
s6_addr	fake-rfc2553.h	/^	u_int8_t	s6_addr[16];$/;"	m	language:C++	struct:in6_addr	access:public
s6_addr	sftp-server/openbsd-compat/fake-rfc2553.h	/^	u_int8_t	s6_addr[16];$/;"	m	language:C++	struct:in6_addr	access:public
s_dmap_1	libtommath/mtest/mpi.c	/^static const char *s_dmap_1 = $/;"	v	language:C	file:
s_is_power_of_two	libtommath/bn_mp_div_d.c	/^static int s_is_power_of_two(mp_digit b, int *p)$/;"	f	language:C	file:	signature:(mp_digit b, int *p)
s_is_power_of_two	libtommath/pre_gen/mpi.c	/^static int s_is_power_of_two(mp_digit b, int *p)$/;"	f	language:C	file:	signature:(mp_digit b, int *p)
s_logv_2	libtommath/mtest/logtab.h	/^const float s_logv_2[] = {$/;"	v	language:C++
s_mp_2expt	libtommath/mtest/mpi.c	/^mp_err   s_mp_2expt(mp_int *a, mp_digit k)$/;"	f	language:C	signature:(mp_int *a, mp_digit k)
s_mp_2expt	libtommath/mtest/mpi.c	/^mp_err   s_mp_2expt(mp_int *a, mp_digit k);    \/* a = 2^k                 *\/$/;"	p	language:C	file:	signature:(mp_int *a, mp_digit k)
s_mp_add	libtommath/bn_s_mp_add.c	/^s_mp_add (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
s_mp_add	libtommath/mtest/mpi.c	/^mp_err   s_mp_add(mp_int *a, mp_int *b)        \/* magnitude addition      *\/$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
s_mp_add	libtommath/mtest/mpi.c	/^mp_err   s_mp_add(mp_int *a, mp_int *b);       \/* magnitude addition      *\/$/;"	p	language:C	file:	signature:(mp_int *a, mp_int *b)
s_mp_add	libtommath/pre_gen/mpi.c	/^s_mp_add (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
s_mp_add	libtommath/tommath.h	/^int s_mp_add(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
s_mp_add_d	libtommath/mtest/mpi.c	/^mp_err   s_mp_add_d(mp_int *mp, mp_digit d)    \/* unsigned digit addition *\/$/;"	f	language:C	signature:(mp_int *mp, mp_digit d)
s_mp_add_d	libtommath/mtest/mpi.c	/^mp_err   s_mp_add_d(mp_int *mp, mp_digit d);   \/* unsigned digit addition *\/$/;"	p	language:C	file:	signature:(mp_int *mp, mp_digit d)
s_mp_alloc	libtommath/mtest/mpi.c	/^ void    *s_mp_alloc(size_t nb, size_t ni);       \/* general allocator     *\/$/;"	p	language:C	file:	signature:(size_t nb, size_t ni)
s_mp_alloc	libtommath/mtest/mpi.c	/^void    *s_mp_alloc(size_t nb, size_t ni)$/;"	f	language:C	signature:(size_t nb, size_t ni)
s_mp_alloc	libtommath/mtest/mpi.c	156;"	d	language:C	file:
s_mp_clamp	libtommath/mtest/mpi.c	/^void     s_mp_clamp(mp_int *mp)$/;"	f	language:C	signature:(mp_int *mp)
s_mp_clamp	libtommath/mtest/mpi.c	/^void     s_mp_clamp(mp_int *mp);               \/* clip leading zeroes     *\/$/;"	p	language:C	file:	signature:(mp_int *mp)
s_mp_cmp	libtommath/mtest/mpi.c	/^int      s_mp_cmp(mp_int *a, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
s_mp_cmp	libtommath/mtest/mpi.c	/^int      s_mp_cmp(mp_int *a, mp_int *b);       \/* magnitude comparison    *\/$/;"	p	language:C	file:	signature:(mp_int *a, mp_int *b)
s_mp_cmp_d	libtommath/mtest/mpi.c	/^int      s_mp_cmp_d(mp_int *a, mp_digit d)$/;"	f	language:C	signature:(mp_int *a, mp_digit d)
s_mp_cmp_d	libtommath/mtest/mpi.c	/^int      s_mp_cmp_d(mp_int *a, mp_digit d);    \/* magnitude digit compare *\/$/;"	p	language:C	file:	signature:(mp_int *a, mp_digit d)
s_mp_copy	libtommath/mtest/mpi.c	/^ void     s_mp_copy(mp_digit *sp, mp_digit *dp, mp_size count); \/* copy    *\/$/;"	p	language:C	file:	signature:(mp_digit *sp, mp_digit *dp, mp_size count)
s_mp_copy	libtommath/mtest/mpi.c	/^void s_mp_copy(mp_digit *sp, mp_digit *dp, mp_size count)$/;"	f	language:C	signature:(mp_digit *sp, mp_digit *dp, mp_size count)
s_mp_copy	libtommath/mtest/mpi.c	150;"	d	language:C	file:
s_mp_copy	libtommath/mtest/mpi.c	153;"	d	language:C	file:
s_mp_defprec	libtommath/mtest/mpi.c	/^static unsigned int s_mp_defprec = MP_DEFPREC;$/;"	v	language:C	file:
s_mp_div	libtommath/mtest/mpi.c	/^mp_err   s_mp_div(mp_int *a, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
s_mp_div	libtommath/mtest/mpi.c	/^mp_err   s_mp_div(mp_int *a, mp_int *b);       \/* magnitude divide        *\/$/;"	p	language:C	file:	signature:(mp_int *a, mp_int *b)
s_mp_div_2	libtommath/mtest/mpi.c	/^void     s_mp_div_2(mp_int *mp)$/;"	f	language:C	signature:(mp_int *mp)
s_mp_div_2	libtommath/mtest/mpi.c	/^void     s_mp_div_2(mp_int *mp);               \/* divide by 2 in place    *\/$/;"	p	language:C	file:	signature:(mp_int *mp)
s_mp_div_2d	libtommath/mtest/mpi.c	/^void     s_mp_div_2d(mp_int *mp, mp_digit d)$/;"	f	language:C	signature:(mp_int *mp, mp_digit d)
s_mp_div_2d	libtommath/mtest/mpi.c	/^void     s_mp_div_2d(mp_int *mp, mp_digit d);  \/* divide by 2^d in place  *\/$/;"	p	language:C	file:	signature:(mp_int *mp, mp_digit d)
s_mp_div_d	libtommath/mtest/mpi.c	/^mp_err   s_mp_div_d(mp_int *mp, mp_digit d, mp_digit *r)$/;"	f	language:C	signature:(mp_int *mp, mp_digit d, mp_digit *r)
s_mp_div_d	libtommath/mtest/mpi.c	/^mp_err   s_mp_div_d(mp_int *mp, mp_digit d, mp_digit *r);$/;"	p	language:C	file:	signature:(mp_int *mp, mp_digit d, mp_digit *r)
s_mp_exch	libtommath/mtest/mpi.c	/^void     s_mp_exch(mp_int *a, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
s_mp_exch	libtommath/mtest/mpi.c	/^void     s_mp_exch(mp_int *a, mp_int *b);      \/* swap a and b in place   *\/$/;"	p	language:C	file:	signature:(mp_int *a, mp_int *b)
s_mp_exptmod	libtommath/bn_s_mp_exptmod.c	/^int s_mp_exptmod (mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)$/;"	f	language:C	signature:(mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)
s_mp_exptmod	libtommath/pre_gen/mpi.c	/^int s_mp_exptmod (mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)$/;"	f	language:C	signature:(mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int redmode)
s_mp_exptmod	libtommath/tommath.h	/^int s_mp_exptmod (mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int mode);$/;"	p	language:C++	signature:(mp_int * G, mp_int * X, mp_int * P, mp_int * Y, int mode)
s_mp_free	libtommath/mtest/mpi.c	/^ void     s_mp_free(void *ptr);                   \/* general free function *\/$/;"	p	language:C	file:	signature:(void *ptr)
s_mp_free	libtommath/mtest/mpi.c	/^void     s_mp_free(void *ptr)$/;"	f	language:C	signature:(void *ptr)
s_mp_free	libtommath/mtest/mpi.c	157;"	d	language:C	file:
s_mp_grow	libtommath/mtest/mpi.c	/^mp_err   s_mp_grow(mp_int *mp, mp_size min)$/;"	f	language:C	signature:(mp_int *mp, mp_size min)
s_mp_grow	libtommath/mtest/mpi.c	/^mp_err   s_mp_grow(mp_int *mp, mp_size min);   \/* increase allocated size *\/$/;"	p	language:C	file:	signature:(mp_int *mp, mp_size min)
s_mp_ispow2	libtommath/mtest/mpi.c	/^int      s_mp_ispow2(mp_int *v)$/;"	f	language:C	signature:(mp_int *v)
s_mp_ispow2	libtommath/mtest/mpi.c	/^int      s_mp_ispow2(mp_int *v);               \/* is v a power of 2?      *\/$/;"	p	language:C	file:	signature:(mp_int *v)
s_mp_ispow2d	libtommath/mtest/mpi.c	/^int      s_mp_ispow2d(mp_digit d)$/;"	f	language:C	signature:(mp_digit d)
s_mp_ispow2d	libtommath/mtest/mpi.c	/^int      s_mp_ispow2d(mp_digit d);             \/* is d a power of 2?      *\/$/;"	p	language:C	file:	signature:(mp_digit d)
s_mp_lshd	libtommath/mtest/mpi.c	/^mp_err   s_mp_lshd(mp_int *mp, mp_size p)$/;"	f	language:C	signature:(mp_int *mp, mp_size p)
s_mp_lshd	libtommath/mtest/mpi.c	/^mp_err   s_mp_lshd(mp_int *mp, mp_size p);     \/* left-shift by p digits  *\/$/;"	p	language:C	file:	signature:(mp_int *mp, mp_size p)
s_mp_mod_2d	libtommath/mtest/mpi.c	/^void     s_mp_mod_2d(mp_int *mp, mp_digit d)$/;"	f	language:C	signature:(mp_int *mp, mp_digit d)
s_mp_mod_2d	libtommath/mtest/mpi.c	/^void     s_mp_mod_2d(mp_int *mp, mp_digit d);  \/* modulo 2^d in place     *\/$/;"	p	language:C	file:	signature:(mp_int *mp, mp_digit d)
s_mp_mul	libtommath/mtest/mpi.c	/^mp_err   s_mp_mul(mp_int *a, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
s_mp_mul	libtommath/mtest/mpi.c	/^mp_err   s_mp_mul(mp_int *a, mp_int *b);       \/* magnitude multiply      *\/$/;"	p	language:C	file:	signature:(mp_int *a, mp_int *b)
s_mp_mul	libtommath/tommath.h	555;"	d	language:C++
s_mp_mul_2	libtommath/mtest/mpi.c	/^mp_err   s_mp_mul_2(mp_int *mp);               \/* multiply by 2 in place  *\/$/;"	p	language:C	file:	signature:(mp_int *mp)
s_mp_mul_2	libtommath/mtest/mpi.c	/^mp_err s_mp_mul_2(mp_int *mp)$/;"	f	language:C	signature:(mp_int *mp)
s_mp_mul_2d	libtommath/mtest/mpi.c	/^mp_err    s_mp_mul_2d(mp_int *mp, mp_digit d)$/;"	f	language:C	signature:(mp_int *mp, mp_digit d)
s_mp_mul_2d	libtommath/mtest/mpi.c	/^mp_err   s_mp_mul_2d(mp_int *mp, mp_digit d);  \/* multiply by 2^d in place*\/$/;"	p	language:C	file:	signature:(mp_int *mp, mp_digit d)
s_mp_mul_d	libtommath/mtest/mpi.c	/^mp_err   s_mp_mul_d(mp_int *a, mp_digit d)$/;"	f	language:C	signature:(mp_int *a, mp_digit d)
s_mp_mul_d	libtommath/mtest/mpi.c	/^mp_err   s_mp_mul_d(mp_int *mp, mp_digit d);   \/* unsigned digit multiply *\/$/;"	p	language:C	file:	signature:(mp_int *mp, mp_digit d)
s_mp_mul_digs	libtommath/bn_s_mp_mul_digs.c	/^int s_mp_mul_digs (mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
s_mp_mul_digs	libtommath/pre_gen/mpi.c	/^int s_mp_mul_digs (mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
s_mp_mul_digs	libtommath/tommath.h	/^int s_mp_mul_digs(mp_int *a, mp_int *b, mp_int *c, int digs);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c, int digs)
s_mp_mul_high_digs	libtommath/bn_s_mp_mul_high_digs.c	/^s_mp_mul_high_digs (mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
s_mp_mul_high_digs	libtommath/pre_gen/mpi.c	/^s_mp_mul_high_digs (mp_int * a, mp_int * b, mp_int * c, int digs)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c, int digs)
s_mp_mul_high_digs	libtommath/tommath.h	/^int s_mp_mul_high_digs(mp_int *a, mp_int *b, mp_int *c, int digs);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c, int digs)
s_mp_norm	libtommath/mtest/mpi.c	/^mp_digit s_mp_norm(mp_int *a, mp_int *b)$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
s_mp_norm	libtommath/mtest/mpi.c	/^mp_digit s_mp_norm(mp_int *a, mp_int *b);      \/* normalize for division  *\/$/;"	p	language:C	file:	signature:(mp_int *a, mp_int *b)
s_mp_outlen	libtommath/mtest/mpi.c	/^int      s_mp_outlen(int bits, int r)$/;"	f	language:C	signature:(int bits, int r)
s_mp_outlen	libtommath/mtest/mpi.c	/^int      s_mp_outlen(int bits, int r);          \/* output length in bytes *\/$/;"	p	language:C	file:	signature:(int bits, int r)
s_mp_pad	libtommath/mtest/mpi.c	/^mp_err   s_mp_pad(mp_int *mp, mp_size min)$/;"	f	language:C	signature:(mp_int *mp, mp_size min)
s_mp_pad	libtommath/mtest/mpi.c	/^mp_err   s_mp_pad(mp_int *mp, mp_size min);    \/* left pad with zeroes    *\/$/;"	p	language:C	file:	signature:(mp_int *mp, mp_size min)
s_mp_reduce	libtommath/mtest/mpi.c	/^mp_err   s_mp_reduce(mp_int *x, mp_int *m, mp_int *mu)$/;"	f	language:C	signature:(mp_int *x, mp_int *m, mp_int *mu)
s_mp_reduce	libtommath/mtest/mpi.c	/^mp_err   s_mp_reduce(mp_int *x, mp_int *m, mp_int *mu);$/;"	p	language:C	file:	signature:(mp_int *x, mp_int *m, mp_int *mu)
s_mp_rshd	libtommath/mtest/mpi.c	/^void     s_mp_rshd(mp_int *mp, mp_size p)$/;"	f	language:C	signature:(mp_int *mp, mp_size p)
s_mp_rshd	libtommath/mtest/mpi.c	/^void     s_mp_rshd(mp_int *mp, mp_size p);     \/* right-shift by p digits *\/$/;"	p	language:C	file:	signature:(mp_int *mp, mp_size p)
s_mp_setz	libtommath/mtest/mpi.c	/^ void     s_mp_setz(mp_digit *dp, mp_size count); \/* zero digits           *\/$/;"	p	language:C	file:	signature:(mp_digit *dp, mp_size count)
s_mp_setz	libtommath/mtest/mpi.c	/^void s_mp_setz(mp_digit *dp, mp_size count)$/;"	f	language:C	signature:(mp_digit *dp, mp_size count)
s_mp_setz	libtommath/mtest/mpi.c	143;"	d	language:C	file:
s_mp_setz	libtommath/mtest/mpi.c	146;"	d	language:C	file:
s_mp_sqr	libtommath/bn_s_mp_sqr.c	/^int s_mp_sqr (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
s_mp_sqr	libtommath/mtest/mpi.c	/^mp_err   s_mp_sqr(mp_int *a)$/;"	f	language:C	signature:(mp_int *a)
s_mp_sqr	libtommath/mtest/mpi.c	/^mp_err   s_mp_sqr(mp_int *a);                  \/* magnitude square        *\/$/;"	p	language:C	file:	signature:(mp_int *a)
s_mp_sqr	libtommath/mtest/mpi.c	192;"	d	language:C	file:
s_mp_sqr	libtommath/pre_gen/mpi.c	/^int s_mp_sqr (mp_int * a, mp_int * b)$/;"	f	language:C	signature:(mp_int * a, mp_int * b)
s_mp_sqr	libtommath/tommath.h	/^int s_mp_sqr(mp_int *a, mp_int *b);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b)
s_mp_sub	libtommath/bn_s_mp_sub.c	/^s_mp_sub (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
s_mp_sub	libtommath/mtest/mpi.c	/^mp_err   s_mp_sub(mp_int *a, mp_int *b)        \/* magnitude subtract      *\/$/;"	f	language:C	signature:(mp_int *a, mp_int *b)
s_mp_sub	libtommath/mtest/mpi.c	/^mp_err   s_mp_sub(mp_int *a, mp_int *b);       \/* magnitude subtract      *\/$/;"	p	language:C	file:	signature:(mp_int *a, mp_int *b)
s_mp_sub	libtommath/pre_gen/mpi.c	/^s_mp_sub (mp_int * a, mp_int * b, mp_int * c)$/;"	f	language:C	signature:(mp_int * a, mp_int * b, mp_int * c)
s_mp_sub	libtommath/tommath.h	/^int s_mp_sub(mp_int *a, mp_int *b, mp_int *c);$/;"	p	language:C++	signature:(mp_int *a, mp_int *b, mp_int *c)
s_mp_sub_d	libtommath/mtest/mpi.c	/^mp_err   s_mp_sub_d(mp_int *mp, mp_digit d)    \/* unsigned digit subtract *\/$/;"	f	language:C	signature:(mp_int *mp, mp_digit d)
s_mp_sub_d	libtommath/mtest/mpi.c	/^mp_err   s_mp_sub_d(mp_int *mp, mp_digit d);   \/* unsigned digit subtract *\/$/;"	p	language:C	file:	signature:(mp_int *mp, mp_digit d)
s_mp_todigit	libtommath/mtest/mpi.c	/^char     s_mp_todigit(int val, int r, int low)$/;"	f	language:C	signature:(int val, int r, int low)
s_mp_todigit	libtommath/mtest/mpi.c	/^char     s_mp_todigit(int val, int r, int low); \/* convert val to digit   *\/$/;"	p	language:C	file:	signature:(int val, int r, int low)
s_mp_tovalue	libtommath/mtest/mpi.c	/^int      s_mp_tovalue(char ch, int r)$/;"	f	language:C	signature:(char ch, int r)
s_mp_tovalue	libtommath/mtest/mpi.c	/^int      s_mp_tovalue(char ch, int r);          \/* convert ch to value    *\/$/;"	p	language:C	file:	signature:(char ch, int r)
s_ocb_done	libtomcrypt/src/encauth/ocb/s_ocb_done.c	/^int s_ocb_done(ocb_state *ocb, const unsigned char *pt, unsigned long ptlen,$/;"	f	language:C	signature:(ocb_state *ocb, const unsigned char *pt, unsigned long ptlen, unsigned char *ct, unsigned char *tag, unsigned long *taglen, int mode)
s_ocb_done	libtomcrypt/src/headers/tomcrypt_mac.h	/^int s_ocb_done(ocb_state *ocb, const unsigned char *pt, unsigned long ptlen,$/;"	p	language:C++	signature:(ocb_state *ocb, const unsigned char *pt, unsigned long ptlen, unsigned char *ct, unsigned char *tag, unsigned long *taglen, int mode)
sa	loginrec.h	/^	struct sockaddr sa;$/;"	m	language:C++	union:login_netinfo	typeref:struct:login_netinfo::sockaddr	access:public
sa_family_t	sftp-server/defines.h	/^typedef int sa_family_t;$/;"	t	language:C++
sa_flags	sftp-server/openbsd-compat/sigact.h	78;"	d	language:C++
sa_flags	sftp-server/openbsd-compat/sigact.h	79;"	d	language:C++
sa_handler	sftp-server/openbsd-compat/sigact.h	76;"	d	language:C++
sa_handler	sftp-server/openbsd-compat/sigact.h	77;"	d	language:C++
sa_in	loginrec.h	/^	struct sockaddr_in sa_in;$/;"	m	language:C++	union:login_netinfo	typeref:struct:login_netinfo::sockaddr_in	access:public
sa_mask	sftp-server/openbsd-compat/sigact.h	74;"	d	language:C++
sa_mask	sftp-server/openbsd-compat/sigact.h	75;"	d	language:C++
sa_storage	loginrec.h	/^	struct sockaddr_storage sa_storage;$/;"	m	language:C++	union:login_netinfo	typeref:struct:login_netinfo::sockaddr_storage	access:public
safer	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct safer_key safer;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::safer_key	access:public
safer_128_keysize	libtomcrypt/src/ciphers/safer/safer.c	/^int safer_128_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
safer_128_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int safer_128_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
safer_64_keysize	libtomcrypt/src/ciphers/safer/safer.c	/^int safer_64_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
safer_64_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int safer_64_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
safer_bias	libtomcrypt/src/ciphers/safer/saferp.c	/^static const unsigned char safer_bias[33][16] = {$/;"	v	language:C	file:
safer_block_t	libtomcrypt/src/headers/tomcrypt_cipher.h	/^typedef unsigned char safer_block_t[SAFER_BLOCK_LEN];$/;"	t	language:C++
safer_done	libtomcrypt/src/ciphers/safer/safer.c	/^void safer_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
safer_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void safer_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
safer_ebox	libtomcrypt/src/ciphers/safer/safer_tab.c	/^const unsigned char safer_ebox[256] = {$/;"	v	language:C
safer_ecb_decrypt	libtomcrypt/src/ciphers/safer/safer.c	/^int safer_ecb_decrypt(const unsigned char *block_in,$/;"	f	language:C	signature:(const unsigned char *block_in, unsigned char *block_out, symmetric_key *skey)
safer_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int safer_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *key);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *key)
safer_ecb_encrypt	libtomcrypt/src/ciphers/safer/safer.c	/^int safer_ecb_encrypt(const unsigned char *block_in,$/;"	f	language:C	signature:(const unsigned char *block_in, unsigned char *block_out, symmetric_key *skey)
safer_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int safer_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *key);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *key)
safer_k128_desc	libtomcrypt/src/ciphers/safer/safer.c	/^   safer_k128_desc = {$/;"	v	language:C	typeref:struct:
safer_k128_setup	libtomcrypt/src/ciphers/safer/safer.c	/^int safer_k128_setup(const unsigned char *key, int keylen, int numrounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int numrounds, symmetric_key *skey)
safer_k128_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int safer_k128_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
safer_k64_desc	libtomcrypt/src/ciphers/safer/safer.c	/^   safer_k64_desc = {$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
safer_k64_setup	libtomcrypt/src/ciphers/safer/safer.c	/^int safer_k64_setup(const unsigned char *key, int keylen, int numrounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int numrounds, symmetric_key *skey)
safer_k64_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int safer_k64_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
safer_k64_test	libtomcrypt/src/ciphers/safer/safer.c	/^int safer_k64_test(void)$/;"	f	language:C	signature:(void)
safer_k64_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int safer_k64_test(void);$/;"	p	language:C++	signature:(void)
safer_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct safer_key { safer_key_t key; };$/;"	s	language:C++
safer_key::key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct safer_key { safer_key_t key; };$/;"	m	language:C++	struct:safer_key	access:public
safer_key_t	libtomcrypt/src/headers/tomcrypt_cipher.h	/^typedef unsigned char safer_key_t[SAFER_KEY_LEN];$/;"	t	language:C++
safer_lbox	libtomcrypt/src/ciphers/safer/safer_tab.c	/^const unsigned char safer_lbox[256] = {$/;"	v	language:C
safer_sk128_desc	libtomcrypt/src/ciphers/safer/safer.c	/^   safer_sk128_desc = {$/;"	v	language:C	typeref:struct:
safer_sk128_setup	libtomcrypt/src/ciphers/safer/safer.c	/^int safer_sk128_setup(const unsigned char *key, int keylen, int numrounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int numrounds, symmetric_key *skey)
safer_sk128_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int safer_sk128_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
safer_sk128_test	libtomcrypt/src/ciphers/safer/safer.c	/^int safer_sk128_test(void)$/;"	f	language:C	signature:(void)
safer_sk128_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int safer_sk128_test(void);$/;"	p	language:C++	signature:(void)
safer_sk64_desc	libtomcrypt/src/ciphers/safer/safer.c	/^   safer_sk64_desc = {$/;"	v	language:C	typeref:struct:
safer_sk64_setup	libtomcrypt/src/ciphers/safer/safer.c	/^int safer_sk64_setup(const unsigned char *key, int keylen, int numrounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int numrounds, symmetric_key *skey)
safer_sk64_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int safer_sk64_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
safer_sk64_test	libtomcrypt/src/ciphers/safer/safer.c	/^int safer_sk64_test(void)$/;"	f	language:C	signature:(void)
safer_sk64_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int safer_sk64_test(void);$/;"	p	language:C++	signature:(void)
saferp	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct saferp_key   saferp;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::saferp_key	access:public
saferp_desc	libtomcrypt/src/ciphers/safer/saferp.c	/^const struct ltc_cipher_descriptor saferp_desc =$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
saferp_done	libtomcrypt/src/ciphers/safer/saferp.c	/^void saferp_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
saferp_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void saferp_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
saferp_ecb_decrypt	libtomcrypt/src/ciphers/safer/saferp.c	/^int saferp_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
saferp_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int saferp_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
saferp_ecb_encrypt	libtomcrypt/src/ciphers/safer/saferp.c	/^int saferp_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
saferp_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int saferp_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
saferp_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct saferp_key {$/;"	s	language:C++
saferp_key::K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned char K[33][16];$/;"	m	language:C++	struct:saferp_key	access:public
saferp_key::rounds	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   long rounds;$/;"	m	language:C++	struct:saferp_key	access:public
saferp_keysize	libtomcrypt/src/ciphers/safer/saferp.c	/^int saferp_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
saferp_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int saferp_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
saferp_setup	libtomcrypt/src/ciphers/safer/saferp.c	/^int saferp_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
saferp_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int saferp_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
saferp_test	libtomcrypt/src/ciphers/safer/saferp.c	/^int saferp_test(void)$/;"	f	language:C	signature:(void)
saferp_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int saferp_test(void);$/;"	p	language:C++	signature:(void)
sanitise_stdfd	scpmisc.c	/^sanitise_stdfd(void)$/;"	f	language:C	signature:(void)
sanitise_stdfd	scpmisc.h	/^void sanitise_stdfd(void);$/;"	p	language:C++	signature:(void)
sanitise_stdfd	sftp-server/misc.c	/^sanitise_stdfd(void)$/;"	f	language:C	signature:(void)
sanitise_stdfd	sftp-server/misc.h	/^void	 sanitise_stdfd(void);$/;"	p	language:C++	signature:(void)
saved_tio	session.h	/^	struct termios saved_tio;$/;"	m	language:C++	struct:clientsession	typeref:struct:clientsession::termios	access:public
sbox	libtomcrypt/notes/etc/whirlgen.c	/^unsigned sbox(unsigned x)$/;"	f	language:C	signature:(unsigned x)
sbox	libtomcrypt/src/ciphers/skipjack.c	/^static const unsigned char sbox[256] = {$/;"	v	language:C	file:
sbox	libtomcrypt/src/ciphers/twofish/twofish.c	/^static ulong32 sbox(int i, ulong32 x)$/;"	f	language:C	file:	signature:(int i, ulong32 x)
sbox	libtomcrypt/src/ciphers/twofish/twofish.c	75;"	d	language:C	file:
sbox0	libtomcrypt/src/hashes/whirl/whirltab.c	/^static const ulong64 sbox0[] = {$/;"	v	language:C	file:
sbox1	libtomcrypt/src/hashes/whirl/whirltab.c	/^static const ulong64 sbox1[] = {$/;"	v	language:C	file:
sbox2	libtomcrypt/src/hashes/whirl/whirltab.c	/^static const ulong64 sbox2[] = {$/;"	v	language:C	file:
sbox3	libtomcrypt/src/hashes/whirl/whirltab.c	/^static const ulong64 sbox3[] = {$/;"	v	language:C	file:
sbox4	libtomcrypt/src/hashes/whirl/whirltab.c	/^static const ulong64 sbox4[] = {$/;"	v	language:C	file:
sbox5	libtomcrypt/src/hashes/whirl/whirltab.c	/^static const ulong64 sbox5[] = {$/;"	v	language:C	file:
sbox6	libtomcrypt/src/hashes/whirl/whirltab.c	/^static const ulong64 sbox6[] = {$/;"	v	language:C	file:
sbox7	libtomcrypt/src/hashes/whirl/whirltab.c	/^static const ulong64 sbox7[] = {$/;"	v	language:C	file:
sbuf	libtomcrypt/src/headers/tomcrypt_prng.h	/^                 sbuf;           \/* partial word encryption buffer *\/$/;"	m	language:C++	struct:sober128_prng	access:public
scale_chars	sftp-server/openbsd-compat/fmt_scaled.c	/^static char scale_chars[] = "BKMGTPE";$/;"	v	language:C	file:
scale_factors	sftp-server/openbsd-compat/fmt_scaled.c	/^static long long scale_factors[] = {$/;"	v	language:C	file:
scan_scaled	sftp-server/openbsd-compat/fmt_scaled.c	/^scan_scaled(char *scaled, long long *result)$/;"	f	language:C	signature:(char *scaled, long long *result)
scope_id	sftp-server/addrmatch.c	/^	u_int32_t	scope_id;	\/* iface scope id for v6 *\/$/;"	m	language:C	struct:xaddr	file:	access:public
scp_main	dbmulti.c	/^int scp_main(int argc, char ** argv);$/;"	p	language:C	file:	signature:(int argc, char ** argv)
scp_main	scp.c	/^int scp_main(int argc, char **argv)$/;"	f	language:C	signature:(int argc, char **argv)
seed_rng	sftp-server/entropy.h	/^void seed_rng(void);$/;"	p	language:C++	signature:(void)
seedrandom	random.c	/^void seedrandom() {$/;"	f	language:C
seedrandom	random.h	/^void seedrandom();$/;"	p	language:C++	signature:()
select_timeout	common-session.c	/^static long select_timeout() {$/;"	f	language:C	file:
select_timeout	common-session.c	/^static long select_timeout();$/;"	p	language:C	file:
self	sftp-server/channels.h	/^	int     self;		\/* my own channel identifier *\/$/;"	m	language:C++	struct:Channel	access:public
send_attrib	sftp-server/sftp-server.c	/^send_attrib(u_int32_t id, const Attrib *a)$/;"	f	language:C	file:	signature:(u_int32_t id, const Attrib *a)
send_chansess_pty_req	cli-chansession.c	/^static void send_chansess_pty_req(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
send_chansess_pty_req	cli-chansession.c	/^static void send_chansess_pty_req(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
send_chansess_shell_req	cli-chansession.c	/^static void send_chansess_shell_req(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
send_chansess_shell_req	cli-chansession.c	/^static void send_chansess_shell_req(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
send_data	sftp-server/sftp-server.c	/^send_data(u_int32_t id, const char *data, int dlen)$/;"	f	language:C	file:	signature:(u_int32_t id, const char *data, int dlen)
send_data_or_handle	sftp-server/sftp-server.c	/^send_data_or_handle(char type, u_int32_t id, const char *data, int dlen)$/;"	f	language:C	file:	signature:(char type, u_int32_t id, const char *data, int dlen)
send_exitsignalstatus	svr-chansession.c	/^static void send_exitsignalstatus(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
send_exitsignalstatus	svr-chansession.c	/^static void send_exitsignalstatus(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
send_handle	sftp-server/sftp-server.c	/^send_handle(u_int32_t id, int handle)$/;"	f	language:C	file:	signature:(u_int32_t id, int handle)
send_msg	sftp-server/sftp-server.c	/^send_msg(Buffer *m)$/;"	f	language:C	file:	signature:(Buffer *m)
send_msg_channel_close	common-channel.c	/^static void send_msg_channel_close(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
send_msg_channel_close	common-channel.c	/^static void send_msg_channel_close(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
send_msg_channel_data	common-channel.c	/^static void send_msg_channel_data(struct Channel *channel, int isextended) {$/;"	f	language:C	file:	signature:(struct Channel *channel, int isextended)
send_msg_channel_data	common-channel.c	/^static void send_msg_channel_data(struct Channel *channel, int isextended);$/;"	p	language:C	file:	signature:(struct Channel *channel, int isextended)
send_msg_channel_eof	common-channel.c	/^static void send_msg_channel_eof(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
send_msg_channel_eof	common-channel.c	/^static void send_msg_channel_eof(struct Channel *channel);$/;"	p	language:C	file:	signature:(struct Channel *channel)
send_msg_channel_failure	channel.h	/^void send_msg_channel_failure(struct Channel *channel);$/;"	p	language:C++	signature:(struct Channel *channel)
send_msg_channel_failure	common-channel.c	/^void send_msg_channel_failure(struct Channel *channel) {$/;"	f	language:C	signature:(struct Channel *channel)
send_msg_channel_open_agent	svr-agentfwd.c	/^static int send_msg_channel_open_agent(int fd) {$/;"	f	language:C	file:	signature:(int fd)
send_msg_channel_open_agent	svr-agentfwd.c	/^static int send_msg_channel_open_agent(int fd);$/;"	p	language:C	file:	signature:(int fd)
send_msg_channel_open_confirmation	common-channel.c	/^static void send_msg_channel_open_confirmation(struct Channel* channel,$/;"	f	language:C	file:	signature:(struct Channel* channel, unsigned int recvwindow, unsigned int recvmaxpacket)
send_msg_channel_open_confirmation	common-channel.c	/^static void send_msg_channel_open_confirmation(struct Channel* channel,$/;"	p	language:C	file:	signature:(struct Channel* channel, unsigned int recvwindow, unsigned int recvmaxpacket)
send_msg_channel_open_failure	common-channel.c	/^static void send_msg_channel_open_failure(unsigned int remotechan, $/;"	f	language:C	file:	signature:(unsigned int remotechan, int reason, const unsigned char *text, const unsigned char *lang)
send_msg_channel_open_failure	common-channel.c	/^static void send_msg_channel_open_failure(unsigned int remotechan, int reason,$/;"	p	language:C	file:	signature:(unsigned int remotechan, int reason, const unsigned char *text, const unsigned char *lang)
send_msg_channel_open_init	channel.h	/^int send_msg_channel_open_init(int fd, const struct ChanType *type);$/;"	p	language:C++	signature:(int fd, const struct ChanType *type)
send_msg_channel_open_init	common-channel.c	/^int send_msg_channel_open_init(int fd, const struct ChanType *type) {$/;"	f	language:C	signature:(int fd, const struct ChanType *type)
send_msg_channel_open_x11	svr-x11fwd.c	/^static int send_msg_channel_open_x11(int fd, struct sockaddr_in* addr) {$/;"	f	language:C	file:	signature:(int fd, struct sockaddr_in* addr)
send_msg_channel_open_x11	svr-x11fwd.c	/^static int send_msg_channel_open_x11(int fd, struct sockaddr_in* addr);$/;"	p	language:C	file:	signature:(int fd, struct sockaddr_in* addr)
send_msg_channel_success	channel.h	/^void send_msg_channel_success(struct Channel *channel);$/;"	p	language:C++	signature:(struct Channel *channel)
send_msg_channel_success	common-channel.c	/^void send_msg_channel_success(struct Channel *channel) {$/;"	f	language:C	signature:(struct Channel *channel)
send_msg_channel_window_adjust	common-channel.c	/^static void send_msg_channel_window_adjust(struct Channel *channel, $/;"	p	language:C	file:	signature:(struct Channel *channel, unsigned int incr)
send_msg_channel_window_adjust	common-channel.c	/^static void send_msg_channel_window_adjust(struct Channel* channel, $/;"	f	language:C	file:	signature:(struct Channel* channel, unsigned int incr)
send_msg_chansess_exitsignal	svr-chansession.c	/^static void send_msg_chansess_exitsignal(struct Channel * channel,$/;"	f	language:C	file:	signature:(struct Channel * channel, struct ChanSess * chansess)
send_msg_chansess_exitsignal	svr-chansession.c	/^static void send_msg_chansess_exitsignal(struct Channel * channel,$/;"	p	language:C	file:	signature:(struct Channel * channel, struct ChanSess * chansess)
send_msg_chansess_exitstatus	svr-chansession.c	/^static void send_msg_chansess_exitstatus(struct Channel * channel,$/;"	f	language:C	file:	signature:(struct Channel * channel, struct ChanSess * chansess)
send_msg_chansess_exitstatus	svr-chansession.c	/^static void send_msg_chansess_exitstatus(struct Channel * channel,$/;"	p	language:C	file:	signature:(struct Channel * channel, struct ChanSess * chansess)
send_msg_global_request_remotetcp	cli-tcpfwd.c	/^static void send_msg_global_request_remotetcp(const char *addr, int port) {$/;"	f	language:C	file:	signature:(const char *addr, int port)
send_msg_ignore	common-session.c	/^void send_msg_ignore() {$/;"	f	language:C
send_msg_ignore	session.h	/^void send_msg_ignore();$/;"	p	language:C++	signature:()
send_msg_kexdh_init	cli-kex.c	/^void send_msg_kexdh_init() {$/;"	f	language:C
send_msg_kexdh_init	kex.h	/^void send_msg_kexdh_init(); \/* client *\/$/;"	p	language:C++	signature:()
send_msg_kexdh_reply	svr-kex.c	/^static void send_msg_kexdh_reply(mp_int *dh_e) {$/;"	f	language:C	file:	signature:(mp_int *dh_e)
send_msg_kexdh_reply	svr-kex.c	/^static void send_msg_kexdh_reply(mp_int *dh_e);$/;"	p	language:C	file:	signature:(mp_int *dh_e)
send_msg_kexinit	common-kex.c	/^void send_msg_kexinit() {$/;"	f	language:C
send_msg_kexinit	kex.h	/^void send_msg_kexinit();$/;"	p	language:C++	signature:()
send_msg_newkeys	common-kex.c	/^void send_msg_newkeys() {$/;"	f	language:C
send_msg_newkeys	kex.h	/^void send_msg_newkeys();$/;"	p	language:C++	signature:()
send_msg_request_failure	svr-tcpfwd.c	/^static void send_msg_request_failure() {$/;"	f	language:C	file:
send_msg_request_failure	svr-tcpfwd.c	/^static void send_msg_request_failure();$/;"	p	language:C	file:
send_msg_request_success	svr-tcpfwd.c	/^static void send_msg_request_success() {$/;"	f	language:C	file:
send_msg_request_success	svr-tcpfwd.c	/^static void send_msg_request_success();$/;"	p	language:C	file:
send_msg_service_accept	svr-service.c	/^static void send_msg_service_accept(unsigned char *name, int len) {$/;"	f	language:C	file:	signature:(unsigned char *name, int len)
send_msg_service_accept	svr-service.c	/^static void send_msg_service_accept(unsigned char *name, int len);$/;"	p	language:C	file:	signature:(unsigned char *name, int len)
send_msg_service_request	cli-service.c	/^void send_msg_service_request(char* servicename) {$/;"	f	language:C	signature:(char* servicename)
send_msg_service_request	service.h	/^void send_msg_service_request(); \/* Client *\/$/;"	p	language:C++	signature:()
send_msg_userauth_banner	svr-auth.c	/^static void send_msg_userauth_banner() {$/;"	f	language:C	file:
send_msg_userauth_banner	svr-auth.c	/^static void send_msg_userauth_banner();$/;"	p	language:C	file:
send_msg_userauth_failure	auth.h	/^void send_msg_userauth_failure(int partial, int incrfail);$/;"	p	language:C++	signature:(int partial, int incrfail)
send_msg_userauth_failure	svr-auth.c	/^void send_msg_userauth_failure(int partial, int incrfail) {$/;"	f	language:C	signature:(int partial, int incrfail)
send_msg_userauth_pk_ok	svr-authpubkey.c	/^static void send_msg_userauth_pk_ok(unsigned char* algo, unsigned int algolen,$/;"	f	language:C	file:	signature:(unsigned char* algo, unsigned int algolen, unsigned char* keyblob, unsigned int keybloblen)
send_msg_userauth_pk_ok	svr-authpubkey.c	/^static void send_msg_userauth_pk_ok(unsigned char* algo, unsigned int algolen,$/;"	p	language:C	file:	signature:(unsigned char* algo, unsigned int algolen, unsigned char* keyblob, unsigned int keybloblen)
send_msg_userauth_pubkey	cli-authpubkey.c	/^static void send_msg_userauth_pubkey(sign_key *key, int type, int realsign) {$/;"	f	language:C	file:	signature:(sign_key *key, int type, int realsign)
send_msg_userauth_pubkey	cli-authpubkey.c	/^static void send_msg_userauth_pubkey(sign_key *key, int type, int realsign);$/;"	p	language:C	file:	signature:(sign_key *key, int type, int realsign)
send_msg_userauth_success	auth.h	/^void send_msg_userauth_success();$/;"	p	language:C++	signature:()
send_msg_userauth_success	svr-auth.c	/^void send_msg_userauth_success() {$/;"	f	language:C
send_names	sftp-server/sftp-server.c	/^send_names(u_int32_t id, int count, const Stat *stats)$/;"	f	language:C	file:	signature:(u_int32_t id, int count, const Stat *stats)
send_status	sftp-server/sftp-server.c	/^send_status(u_int32_t id, u_int32_t status)$/;"	f	language:C	file:	signature:(u_int32_t id, u_int32_t status)
send_statvfs	sftp-server/sftp-server.c	/^send_statvfs(u_int32_t id, struct statvfs *st)$/;"	f	language:C	file:	signature:(u_int32_t id, struct statvfs *st)
sendaddr	tcpfwd.h	/^	unsigned char *sendaddr;$/;"	m	language:C++	struct:TCPListener	access:public
sendport	tcpfwd.h	/^	unsigned int sendport;$/;"	m	language:C++	struct:TCPListener	access:public
sent_close	channel.h	/^	int sent_close, recv_close;$/;"	m	language:C++	struct:Channel	access:public
sent_eof	channel.h	/^	int recv_eof, sent_eof;$/;"	m	language:C++	struct:Channel	access:public
sentkexinit	kex.h	/^	unsigned sentkexinit : 1; \/*set when we've sent\/recv kexinit packet *\/$/;"	m	language:C++	struct:KEXState	access:public
sentnewkeys	kex.h	/^	unsigned sentnewkeys : 1; \/* set once we've send\/recv'ed MSG_NEWKEYS*\/$/;"	m	language:C++	struct:KEXState	access:public
sepfds	channel.h	/^	int sepfds; \/* Whether this channel has seperate pipes for in\/out or not *\/$/;"	m	language:C++	struct:ChanType	access:public
server_pid	session.h	/^	pid_t server_pid;$/;"	m	language:C++	struct:serversession	access:public
serversession	session.h	/^struct serversession {$/;"	s	language:C++
serversession::addrstring	session.h	/^	char * addrstring;$/;"	m	language:C++	struct:serversession	access:public
serversession::childpids	session.h	/^	struct ChildPid * childpids; \/* array of mappings childpid<->channel *\/$/;"	m	language:C++	struct:serversession	typeref:struct:serversession::ChildPid	access:public
serversession::childpidsize	session.h	/^	unsigned int childpidsize;$/;"	m	language:C++	struct:serversession	access:public
serversession::childpipe	session.h	/^	int childpipe; \/* kept open until we successfully authenticate *\/$/;"	m	language:C++	struct:serversession	access:public
serversession::lastexit	session.h	/^	struct exitinfo lastexit;$/;"	m	language:C++	struct:serversession	typeref:struct:serversession::exitinfo	access:public
serversession::remotehost	session.h	/^	char *remotehost;$/;"	m	language:C++	struct:serversession	access:public
serversession::server_pid	session.h	/^	pid_t server_pid;$/;"	m	language:C++	struct:serversession	access:public
ses	common-session.c	/^struct sshsession ses; \/* GLOBAL *\/$/;"	v	language:C	typeref:struct:sshsession
sesscheckclose	svr-chansession.c	/^static int sesscheckclose(struct Channel *channel) {$/;"	f	language:C	file:	signature:(struct Channel *channel)
sessinitdone	common-session.c	/^int sessinitdone = 0; \/* GLOBAL *\/$/;"	v	language:C
session_id	session.h	/^	unsigned char *session_id; \/* this is the hash from the first kex *\/$/;"	m	language:C++	struct:sshsession	access:public
session_identification	common-session.c	/^void session_identification() {$/;"	f	language:C
session_identification	session.h	/^void session_identification();$/;"	p	language:C++	signature:()
session_loop	common-session.c	/^void session_loop(void(*loophandler)()) {$/;"	f	language:C	signature:(void(*loophandler)())
session_loop	session.h	/^void session_loop(void(*loophandler)());$/;"	p	language:C++	signature:(void(*loophandler)())
sessioncommand	svr-chansession.c	/^static int sessioncommand(struct Channel *channel, struct ChanSess *chansess,$/;"	f	language:C	file:	signature:(struct Channel *channel, struct ChanSess *chansess, int iscmd, int issubsys)
sessioncommand	svr-chansession.c	/^static int sessioncommand(struct Channel *channel, struct ChanSess *chansess,$/;"	p	language:C	file:	signature:(struct Channel *channel, struct ChanSess *chansess, int iscmd, int issubsys)
sessionpty	svr-chansession.c	/^static int sessionpty(struct ChanSess * chansess) {$/;"	f	language:C	file:	signature:(struct ChanSess * chansess)
sessionpty	svr-chansession.c	/^static int sessionpty(struct ChanSess * chansess);$/;"	p	language:C	file:	signature:(struct ChanSess * chansess)
sessionsignal	svr-chansession.c	/^static int sessionsignal(struct ChanSess *chansess) {$/;"	f	language:C	file:	signature:(struct ChanSess *chansess)
sessionsignal	svr-chansession.c	/^static int sessionsignal(struct ChanSess *chansess);$/;"	p	language:C	file:	signature:(struct ChanSess *chansess)
sessionwinchange	svr-chansession.c	/^static int sessionwinchange(struct ChanSess *chansess) {$/;"	f	language:C	file:	signature:(struct ChanSess *chansess)
sessionwinchange	svr-chansession.c	/^static int sessionwinchange(struct ChanSess *chansess);$/;"	p	language:C	file:	signature:(struct ChanSess *chansess)
sesssigchild_handler	svr-chansession.c	/^static void sesssigchild_handler(int UNUSED(dummy)) {$/;"	f	language:C	file:	signature:(int UNUSED(dummy))
sesssigchild_handler	svr-chansession.c	/^static void sesssigchild_handler(int val);$/;"	p	language:C	file:	signature:(int val)
set	libtomcrypt/src/headers/tomcrypt_prng.h	/^                 set;            \/* did we call add_entropy to set key? *\/$/;"	m	language:C++	struct:sober128_prng	access:public
set_int	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*set_int)(void *a, unsigned long n);$/;"	m	language:C++	struct:__anon54	access:public
set_int	libtomcrypt/src/math/gmp_desc.c	/^static int set_int(void *a, unsigned long b)$/;"	f	language:C	file:	signature:(void *a, unsigned long b)
set_int	libtomcrypt/src/math/ltm_desc.c	/^static int set_int(void *a, unsigned long b)$/;"	f	language:C	file:	signature:(void *a, unsigned long b)
set_int	libtomcrypt/src/math/tfm_desc.c	/^static int set_int(void *a, unsigned long b)$/;"	f	language:C	file:	signature:(void *a, unsigned long b)
set_listener_fds	listener.c	/^void set_listener_fds(fd_set * readfds) {$/;"	f	language:C	signature:(fd_set * readfds)
set_listener_fds	listener.h	/^void set_listener_fds(fd_set * readfds);$/;"	p	language:C++	signature:(fd_set * readfds)
set_newkeys	sftp-server/packet.h	/^void	 set_newkeys(int mode);$/;"	p	language:C++	signature:(int mode)
set_nodelay	scpmisc.h	/^void	 set_nodelay(int);$/;"	p	language:C++	signature:(int)
set_nodelay	sftp-server/misc.c	/^set_nodelay(int fd)$/;"	f	language:C	signature:(int fd)
set_nodelay	sftp-server/misc.h	/^void	 set_nodelay(int);$/;"	p	language:C++	signature:(int)
set_nonblock	scpmisc.h	/^void	 set_nonblock(int);$/;"	p	language:C++	signature:(int)
set_nonblock	sftp-server/misc.c	/^set_nonblock(int fd)$/;"	f	language:C	signature:(int fd)
set_nonblock	sftp-server/misc.h	/^int	 set_nonblock(int);$/;"	p	language:C++	signature:(int)
set_sock_priority	dbutil.c	/^static void set_sock_priority(int sock) {$/;"	f	language:C	file:	signature:(int sock)
set_utmp_time	loginrec.c	/^set_utmp_time(struct logininfo *li, struct utmp *ut)$/;"	f	language:C	signature:(struct logininfo *li, struct utmp *ut)
set_utmp_time	loginrec.c	/^void set_utmp_time(struct logininfo *li, struct utmp *ut);$/;"	p	language:C	file:	signature:(struct logininfo *li, struct utmp *ut)
set_utmpx_time	loginrec.c	/^set_utmpx_time(struct logininfo *li, struct utmpx *utx)$/;"	f	language:C	signature:(struct logininfo *li, struct utmpx *utx)
set_utmpx_time	loginrec.c	/^void set_utmpx_time(struct logininfo *li, struct utmpx *ut);$/;"	p	language:C	file:	signature:(struct logininfo *li, struct utmpx *ut)
setauthdb	sftp-server/openbsd-compat/port-aix.h	/^int setauthdb(const char *, char *);$/;"	p	language:C++	signature:(const char *, char *)
setchannelfds	channel.h	/^void setchannelfds(fd_set *readfd, fd_set *writefd);$/;"	p	language:C++	signature:(fd_set *readfd, fd_set *writefd)
setchannelfds	common-channel.c	/^void setchannelfds(fd_set *readfds, fd_set *writefds) {$/;"	f	language:C	signature:(fd_set *readfds, fd_set *writefds)
setegid	agentfwd.h	51;"	d	language:C++
setegid	sftp-server/defines.h	/^  int setegid (gid_t);$/;"	p	language:C++	signature:(gid_t)
setegid	sftp-server/openbsd-compat/bsd-misc.c	/^int setegid(uid_t egid)$/;"	f	language:C	signature:(uid_t egid)
setegid	sftp-server/openbsd-compat/bsd-misc.h	/^int setegid(uid_t);$/;"	p	language:C++	signature:(uid_t)
setenv	sftp-server/openbsd-compat/bsd-misc.h	/^int setenv(const char *, const char *, int);$/;"	p	language:C++	signature:(const char *, const char *, int)
setenv	sftp-server/openbsd-compat/openbsd-compat.h	/^int setenv(register const char *name, register const char *value, int rewrite);$/;"	p	language:C++	signature:(register const char *name, register const char *value, int rewrite)
seteuid	agentfwd.h	50;"	d	language:C++
seteuid	sftp-server/defines.h	/^  int seteuid (uid_t);$/;"	p	language:C++	signature:(uid_t)
seteuid	sftp-server/openbsd-compat/bsd-misc.c	/^int seteuid(uid_t euid)$/;"	f	language:C	signature:(uid_t euid)
seteuid	sftp-server/openbsd-compat/bsd-misc.h	/^int seteuid(uid_t);$/;"	p	language:C++	signature:(uid_t)
setlogin	sftp-server/openbsd-compat/bsd-misc.c	/^int setlogin(const char *name)$/;"	f	language:C	signature:(const char *name)
setlogin	sftp-server/openbsd-compat/bsd-misc.h	/^int setlogin(const char *);$/;"	p	language:C++	signature:(const char *)
setnonblocking	dbutil.c	/^void setnonblocking(int fd) {$/;"	f	language:C	signature:(int fd)
setnonblocking	dbutil.h	/^void setnonblocking(int fd);$/;"	p	language:C++	signature:(int fd)
setproctitle	sftp-server/openbsd-compat/openbsd-compat.h	/^void setproctitle(const char *fmt, ...);$/;"	p	language:C++	signature:(const char *fmt, ...)
setscreensize	progressmeter.c	/^setscreensize(void)$/;"	f	language:C	file:	signature:(void)
setscreensize	progressmeter.c	/^static void setscreensize(void);$/;"	p	language:C	file:	signature:(void)
setsid	sftp-server/openbsd-compat/bsd-misc.h	27;"	d	language:C++
setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int  (*setup)(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
setup_localtcp	cli-tcpfwd.c	/^void setup_localtcp() {$/;"	f	language:C
setup_localtcp	tcpfwd.h	/^void setup_localtcp();$/;"	p	language:C++	signature:()
setup_mix	libtomcrypt/src/ciphers/aes/aes.c	/^static ulong32 setup_mix(ulong32 temp)$/;"	f	language:C	file:	signature:(ulong32 temp)
setup_mix2	libtomcrypt/src/ciphers/aes/aes.c	/^static ulong32 setup_mix2(ulong32 temp)$/;"	f	language:C	file:	signature:(ulong32 temp)
setup_remotetcp	cli-tcpfwd.c	/^void setup_remotetcp() {$/;"	f	language:C
setup_remotetcp	tcpfwd.h	/^void setup_remotetcp();$/;"	p	language:C++	signature:()
setusershell	compat.c	/^void setusershell() {$/;"	f	language:C
setusershell	compat.h	/^void setusershell();$/;"	p	language:C++	signature:()
sftp_proto_version	sftp-server/sftp-client.h	/^u_int sftp_proto_version(struct sftp_conn *);$/;"	p	language:C++	signature:(struct sftp_conn *)
sftp_server_cleanup_exit	sftp-server/sftp-server.c	/^sftp_server_cleanup_exit(int i)$/;"	f	language:C	signature:(int i)
sftp_server_cleanup_exit	sftp-server/sftp.h	/^void	sftp_server_cleanup_exit(int) __attribute__((noreturn));$/;"	p	language:C++	signature:(int)
sftp_server_main	sftp-server/sftp-server.c	/^sftp_server_main(int argc, char **argv, struct passwd *user_pw)$/;"	f	language:C	signature:(int argc, char **argv, struct passwd *user_pw)
sftp_server_main	sftp-server/sftp.h	/^int	sftp_server_main(int, char **, struct passwd *);$/;"	p	language:C++	signature:(int, char **, struct passwd *)
sftp_server_usage	sftp-server/sftp-server.c	/^sftp_server_usage(void)$/;"	f	language:C	file:	signature:(void)
sftp_statvfs	sftp-server/sftp-client.h	/^struct sftp_statvfs {$/;"	s	language:C++
sftp_statvfs::f_bavail	sftp-server/sftp-client.h	/^	u_int64_t f_bavail;$/;"	m	language:C++	struct:sftp_statvfs	access:public
sftp_statvfs::f_bfree	sftp-server/sftp-client.h	/^	u_int64_t f_bfree;$/;"	m	language:C++	struct:sftp_statvfs	access:public
sftp_statvfs::f_blocks	sftp-server/sftp-client.h	/^	u_int64_t f_blocks;$/;"	m	language:C++	struct:sftp_statvfs	access:public
sftp_statvfs::f_bsize	sftp-server/sftp-client.h	/^	u_int64_t f_bsize;$/;"	m	language:C++	struct:sftp_statvfs	access:public
sftp_statvfs::f_favail	sftp-server/sftp-client.h	/^	u_int64_t f_favail;$/;"	m	language:C++	struct:sftp_statvfs	access:public
sftp_statvfs::f_ffree	sftp-server/sftp-client.h	/^	u_int64_t f_ffree;$/;"	m	language:C++	struct:sftp_statvfs	access:public
sftp_statvfs::f_files	sftp-server/sftp-client.h	/^	u_int64_t f_files;$/;"	m	language:C++	struct:sftp_statvfs	access:public
sftp_statvfs::f_flag	sftp-server/sftp-client.h	/^	u_int64_t f_flag;$/;"	m	language:C++	struct:sftp_statvfs	access:public
sftp_statvfs::f_frsize	sftp-server/sftp-client.h	/^	u_int64_t f_frsize;$/;"	m	language:C++	struct:sftp_statvfs	access:public
sftp_statvfs::f_fsid	sftp-server/sftp-client.h	/^	u_int64_t f_fsid;$/;"	m	language:C++	struct:sftp_statvfs	access:public
sftp_statvfs::f_namemax	sftp-server/sftp-client.h	/^	u_int64_t f_namemax;$/;"	m	language:C++	struct:sftp_statvfs	access:public
sha1	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct sha1_state   sha1;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::sha1_state	access:public
sha1_compress	libtomcrypt/src/hashes/sha1.c	/^static int sha1_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
sha1_desc	libtomcrypt/src/hashes/sha1.c	/^const struct ltc_hash_descriptor sha1_desc =$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
sha1_done	libtomcrypt/src/hashes/sha1.c	/^int sha1_done(hash_state * md, unsigned char *out)$/;"	f	language:C	signature:(hash_state * md, unsigned char *out)
sha1_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha1_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
sha1_init	libtomcrypt/src/hashes/sha1.c	/^int sha1_init(hash_state * md)$/;"	f	language:C	signature:(hash_state * md)
sha1_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha1_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
sha1_process	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha1_process(hash_state * md, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(hash_state * md, const unsigned char *in, unsigned long inlen)
sha1_process_mp	bignum.c	/^void sha1_process_mp(hash_state *hs, mp_int *mp) {$/;"	f	language:C	signature:(hash_state *hs, mp_int *mp)
sha1_process_mp	bignum.h	/^void sha1_process_mp(hash_state *hs, mp_int *mp);$/;"	p	language:C++	signature:(hash_state *hs, mp_int *mp)
sha1_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^struct sha1_state {$/;"	s	language:C++
sha1_state::buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:sha1_state	access:public
sha1_state::curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[5], curlen;$/;"	m	language:C++	struct:sha1_state	access:public
sha1_state::length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:sha1_state	access:public
sha1_state::state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[5], curlen;$/;"	m	language:C++	struct:sha1_state	access:public
sha1_test	libtomcrypt/src/hashes/sha1.c	/^int  sha1_test(void)$/;"	f	language:C	signature:(void)
sha1_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha1_test(void);$/;"	p	language:C++	signature:(void)
sha224_desc	libtomcrypt/src/hashes/sha2/sha224.c	/^const struct ltc_hash_descriptor sha224_desc =$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
sha224_done	libtomcrypt/src/hashes/sha2/sha224.c	/^int sha224_done(hash_state * md, unsigned char *out)$/;"	f	language:C	signature:(hash_state * md, unsigned char *out)
sha224_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha224_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
sha224_init	libtomcrypt/src/hashes/sha2/sha224.c	/^int sha224_init(hash_state * md)$/;"	f	language:C	signature:(hash_state * md)
sha224_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha224_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
sha224_process	libtomcrypt/src/headers/tomcrypt_hash.h	242;"	d	language:C++
sha224_test	libtomcrypt/src/hashes/sha2/sha224.c	/^int  sha224_test(void)$/;"	f	language:C	signature:(void)
sha224_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha224_test(void);$/;"	p	language:C++	signature:(void)
sha256	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct sha256_state sha256;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::sha256_state	access:public
sha256_compress	libtomcrypt/src/hashes/sha2/sha256.c	/^static int sha256_compress(hash_state * md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state * md, unsigned char *buf)
sha256_desc	libtomcrypt/src/hashes/sha2/sha256.c	/^const struct ltc_hash_descriptor sha256_desc =$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
sha256_done	libtomcrypt/src/hashes/sha2/sha256.c	/^int sha256_done(hash_state * md, unsigned char *out)$/;"	f	language:C	signature:(hash_state * md, unsigned char *out)
sha256_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha256_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
sha256_init	libtomcrypt/src/hashes/sha2/sha256.c	/^int sha256_init(hash_state * md)$/;"	f	language:C	signature:(hash_state * md)
sha256_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha256_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
sha256_process	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha256_process(hash_state * md, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(hash_state * md, const unsigned char *in, unsigned long inlen)
sha256_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^struct sha256_state {$/;"	s	language:C++
sha256_state::buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:sha256_state	access:public
sha256_state::curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[8], curlen;$/;"	m	language:C++	struct:sha256_state	access:public
sha256_state::length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length;$/;"	m	language:C++	struct:sha256_state	access:public
sha256_state::state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[8], curlen;$/;"	m	language:C++	struct:sha256_state	access:public
sha256_test	libtomcrypt/src/hashes/sha2/sha256.c	/^int  sha256_test(void)$/;"	f	language:C	signature:(void)
sha256_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha256_test(void);$/;"	p	language:C++	signature:(void)
sha384_desc	libtomcrypt/src/hashes/sha2/sha384.c	/^const struct ltc_hash_descriptor sha384_desc =$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
sha384_done	libtomcrypt/src/hashes/sha2/sha384.c	/^int sha384_done(hash_state * md, unsigned char *out)$/;"	f	language:C	signature:(hash_state * md, unsigned char *out)
sha384_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha384_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
sha384_init	libtomcrypt/src/hashes/sha2/sha384.c	/^int sha384_init(hash_state * md)$/;"	f	language:C	signature:(hash_state * md)
sha384_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha384_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
sha384_process	libtomcrypt/src/headers/tomcrypt_hash.h	224;"	d	language:C++
sha384_test	libtomcrypt/src/hashes/sha2/sha384.c	/^int  sha384_test(void)$/;"	f	language:C	signature:(void)
sha384_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha384_test(void);$/;"	p	language:C++	signature:(void)
sha512	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct sha512_state sha512;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::sha512_state	access:public
sha512_compress	libtomcrypt/src/hashes/sha2/sha512.c	/^static int sha512_compress(hash_state * md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state * md, unsigned char *buf)
sha512_desc	libtomcrypt/src/hashes/sha2/sha512.c	/^const struct ltc_hash_descriptor sha512_desc =$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
sha512_done	libtomcrypt/src/hashes/sha2/sha512.c	/^int sha512_done(hash_state * md, unsigned char *out)$/;"	f	language:C	signature:(hash_state * md, unsigned char *out)
sha512_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha512_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
sha512_init	libtomcrypt/src/hashes/sha2/sha512.c	/^int sha512_init(hash_state * md)$/;"	f	language:C	signature:(hash_state * md)
sha512_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha512_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
sha512_process	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha512_process(hash_state * md, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(hash_state * md, const unsigned char *in, unsigned long inlen)
sha512_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^struct sha512_state {$/;"	s	language:C++
sha512_state::buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[128];$/;"	m	language:C++	struct:sha512_state	access:public
sha512_state::curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned long curlen;$/;"	m	language:C++	struct:sha512_state	access:public
sha512_state::length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64  length, state[8];$/;"	m	language:C++	struct:sha512_state	access:public
sha512_state::state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64  length, state[8];$/;"	m	language:C++	struct:sha512_state	access:public
sha512_test	libtomcrypt/src/hashes/sha2/sha512.c	/^int  sha512_test(void)$/;"	f	language:C	signature:(void)
sha512_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int sha512_test(void);$/;"	p	language:C++	signature:(void)
shadow_pw	sftp-server/openbsd-compat/openbsd-compat.h	/^char *shadow_pw(struct passwd *pw);$/;"	p	language:C++	signature:(struct passwd *pw)
shells	compat.c	/^static char **curshell, **shells, *strings;$/;"	v	language:C	file:
showprogress	scp.c	/^int showprogress = 1;$/;"	v	language:C
sig_atomic_t	sftp-server/defines.h	/^typedef int sig_atomic_t;$/;"	t	language:C++
sig_winch	progressmeter.c	/^sig_winch(int sig)$/;"	f	language:C	file:	signature:(int sig)
sig_winch	progressmeter.c	/^static void sig_winch(int);$/;"	p	language:C	file:	signature:(int)
sigaction	sftp-server/openbsd-compat/sigact.h	/^int sigaction(int sig, struct sigaction *sigact, struct sigaction *osigact);$/;"	p	language:C++	signature:(int sig, struct sigaction *sigact, struct sigaction *osigact)
sigaction	sftp-server/openbsd-compat/sigact.h	/^struct sigaction$/;"	s	language:C++
sigaction::sv	sftp-server/openbsd-compat/sigact.h	/^	struct sigvec sv;$/;"	m	language:C++	struct:sigaction	typeref:struct:sigaction::sigvec	access:public
sigaddset	sftp-server/openbsd-compat/sigact.h	/^int sigaddset (sigset_t *mask, int sig);$/;"	p	language:C++	signature:(sigset_t *mask, int sig)
sigchld_handler	svr-main.c	/^static void sigchld_handler(int UNUSED(unused)) {$/;"	f	language:C	file:	signature:(int UNUSED(unused))
sigchld_handler	svr-main.c	/^static void sigchld_handler(int dummy);$/;"	p	language:C	file:	signature:(int dummy)
sigdelset	sftp-server/openbsd-compat/sigact.h	/^int sigdelset (sigset_t *mask, int sig);$/;"	p	language:C++	signature:(sigset_t *mask, int sig)
sigdie	sftp-server/log.c	/^sigdie(const char *fmt,...)$/;"	f	language:C	signature:(const char *fmt,...)
sigdie	sftp-server/log.h	/^void     sigdie(const char *, ...)  __attribute__((noreturn))$/;"	p	language:C++	signature:(const char *, ...)
sigemptyset	sftp-server/openbsd-compat/sigact.h	/^int sigemptyset (sigset_t *mask);$/;"	p	language:C++	signature:(sigset_t *mask)
sigintterm_handler	svr-main.c	/^static void sigintterm_handler(int UNUSED(unused)) {$/;"	f	language:C	file:	signature:(int UNUSED(unused))
sigintterm_handler	svr-main.c	/^static void sigintterm_handler(int fish);$/;"	p	language:C	file:	signature:(int fish)
sign	libtommath/mtest/mpi.h	/^  mp_sign       sign;    \/* sign of this quantity      *\/$/;"	m	language:C++	struct:__anon23	access:public
sign	libtommath/tommath.h	/^    int used, alloc, sign;$/;"	m	language:C++	struct:__anon18	access:public
sign_key	signkey.h	/^typedef struct SIGN_key sign_key;$/;"	t	language:C++	typeref:struct:SIGN_key
sign_key_fingerprint	signkey.c	/^char * sign_key_fingerprint(unsigned char* keyblob, unsigned int keybloblen) {$/;"	f	language:C	signature:(unsigned char* keyblob, unsigned int keybloblen)
sign_key_fingerprint	signkey.h	/^char * sign_key_fingerprint(unsigned char* keyblob, unsigned int keybloblen);$/;"	p	language:C++	signature:(unsigned char* keyblob, unsigned int keybloblen)
sign_key_free	signkey.c	/^void sign_key_free(sign_key *key) {$/;"	f	language:C	signature:(sign_key *key)
sign_key_free	signkey.h	/^void sign_key_free(sign_key *key);$/;"	p	language:C++	signature:(sign_key *key)
sign_key_md5_fingerprint	signkey.c	/^static char * sign_key_md5_fingerprint(unsigned char* keyblob,$/;"	f	language:C	file:	signature:(unsigned char* keyblob, unsigned int keybloblen)
sign_key_sha1_fingerprint	signkey.c	/^static char * sign_key_sha1_fingerprint(unsigned char* keyblob, $/;"	f	language:C	file:	signature:(unsigned char* keyblob, unsigned int keybloblen)
signal	chansession.h	/^	int signal;$/;"	m	language:C++	struct:SigMap	access:public
signal_pipe	session.h	/^	int signal_pipe[2]; \/* stores endpoints of a self-pipe used for$/;"	m	language:C++	struct:sshsession	access:public
signames	common-chansession.c	/^const struct SigMap signames[] = {$/;"	v	language:C	typeref:struct:SigMap
signkey_name_from_type	signkey.c	/^const char* signkey_name_from_type(int type, int *namelen) {$/;"	f	language:C	signature:(int type, int *namelen)
signkey_name_from_type	signkey.h	/^const char* signkey_name_from_type(int type, int *namelen);$/;"	p	language:C++	signature:(int type, int *namelen)
signkey_source	signkey.h	/^} signkey_source;$/;"	t	language:C++	typeref:enum:__anon15
signkey_type_from_name	signkey.c	/^int signkey_type_from_name(const char* name, int namelen) {$/;"	f	language:C	signature:(const char* name, int namelen)
signkey_type_from_name	signkey.h	/^int signkey_type_from_name(const char* name, int namelen);$/;"	p	language:C++	signature:(const char* name, int namelen)
sigprocmask	sftp-server/openbsd-compat/sigact.h	/^int sigprocmask (int how, sigset_t *mask, sigset_t *omask);$/;"	p	language:C++	signature:(int how, sigset_t *mask, sigset_t *omask)
sigsegv_handler	svr-main.c	/^static void sigsegv_handler(int UNUSED(unused)) {$/;"	f	language:C	file:	signature:(int UNUSED(unused))
sigsegv_handler	svr-main.c	/^static void sigsegv_handler(int);$/;"	p	language:C	file:	signature:(int)
sigset_t	sftp-server/openbsd-compat/sigact.h	/^typedef unsigned long sigset_t;$/;"	t	language:C++
sigsuspend	sftp-server/openbsd-compat/sigact.h	/^int sigsuspend (sigset_t *mask);$/;"	p	language:C++	signature:(sigset_t *mask)
sigwinch_handler	cli-chansession.c	/^static void sigwinch_handler(int UNUSED(unused)) {$/;"	f	language:C	file:	signature:(int UNUSED(unused))
sin6_addr	fake-rfc2553.h	/^	struct in6_addr	sin6_addr;$/;"	m	language:C++	struct:sockaddr_in6	typeref:struct:sockaddr_in6::in6_addr	access:public
sin6_addr	sftp-server/openbsd-compat/fake-rfc2553.h	/^	struct in6_addr	sin6_addr;$/;"	m	language:C++	struct:sockaddr_in6	typeref:struct:sockaddr_in6::in6_addr	access:public
sin6_family	fake-rfc2553.h	/^	unsigned short	sin6_family;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sin6_family	sftp-server/openbsd-compat/fake-rfc2553.h	/^	unsigned short	sin6_family;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sin6_flowinfo	fake-rfc2553.h	/^	u_int32_t	sin6_flowinfo;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sin6_flowinfo	sftp-server/openbsd-compat/fake-rfc2553.h	/^	u_int32_t	sin6_flowinfo;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sin6_port	fake-rfc2553.h	/^	u_int16_t	sin6_port;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sin6_port	sftp-server/openbsd-compat/fake-rfc2553.h	/^	u_int16_t	sin6_port;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sin6_scope_id	fake-rfc2553.h	/^	u_int32_t	sin6_scope_id;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sin6_scope_id	sftp-server/openbsd-compat/fake-rfc2553.h	/^	u_int32_t	sin6_scope_id;$/;"	m	language:C++	struct:sockaddr_in6	access:public
single_connection	sftp-server/channels.h	/^	int	single_connection;$/;"	m	language:C++	struct:Channel	access:public
sink	scp.c	/^sink(int argc, char **argv)$/;"	f	language:C	signature:(int argc, char **argv)
sink	scp.c	/^void sink(int, char *[]);$/;"	p	language:C	file:	signature:(int, char *[])
size	buffer.h	/^	unsigned int size; \/* the memory size *\/$/;"	m	language:C++	struct:buf	access:public
size	circbuffer.h	/^	unsigned int size;$/;"	m	language:C++	struct:circbuf	access:public
size	libtomcrypt/src/headers/tomcrypt_pk.h	/^   int size;$/;"	m	language:C++	struct:__anon34	access:public
size	libtomcrypt/src/headers/tomcrypt_pk.h	/^   unsigned long size;$/;"	m	language:C++	struct:ltc_asn1_list_	access:public
size	libtomcrypt/src/pk/asn1/der/set/der_encode_setof.c	/^   unsigned long  size;$/;"	m	language:C	struct:edge	file:	access:public
size	sftp-server/sftp-common.h	/^	u_int64_t	size;$/;"	m	language:C++	struct:Attrib	access:public
size_t	sftp-server/defines.h	/^typedef unsigned int size_t;$/;"	t	language:C++
sizes	libtomcrypt/testprof/ecc_test.c	/^static int sizes[] = {$/;"	v	language:C	file:
sizes	libtommath/bn_mp_prime_rabin_miller_trials.c	/^} sizes[] = {$/;"	v	language:C	typeref:struct:__anon20	file:
sizes	libtommath/etc/2kprime.c	/^int sizes[] = {256, 512, 768, 1024, 1536, 2048, 3072, 4096};$/;"	v	language:C
sizes	libtommath/etc/drprime.c	/^int sizes[] = { 1+256\/DIGIT_BIT, 1+512\/DIGIT_BIT, 1+768\/DIGIT_BIT, 1+1024\/DIGIT_BIT, 1+2048\/DIGIT_BIT, 1+4096\/DIGIT_BIT };$/;"	v	language:C
sizes	libtommath/pre_gen/mpi.c	/^} sizes[] = {$/;"	v	language:C	typeref:struct:__anon22	file:
skew	libtomcrypt/testprof/x86_prof.c	/^static ulong64 timer, skew = 0;$/;"	v	language:C	file:
skey	libtomcrypt/src/headers/tomcrypt_prng.h	/^    symmetric_key skey;$/;"	m	language:C++	struct:fortuna_prng	access:public
skipjack	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct skipjack_key skipjack;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::skipjack_key	access:public
skipjack_desc	libtomcrypt/src/ciphers/skipjack.c	/^const struct ltc_cipher_descriptor skipjack_desc =$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
skipjack_done	libtomcrypt/src/ciphers/skipjack.c	/^void skipjack_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
skipjack_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void skipjack_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
skipjack_ecb_decrypt	libtomcrypt/src/ciphers/skipjack.c	/^int skipjack_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
skipjack_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int skipjack_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
skipjack_ecb_encrypt	libtomcrypt/src/ciphers/skipjack.c	/^int skipjack_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
skipjack_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int skipjack_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
skipjack_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct skipjack_key {$/;"	s	language:C++
skipjack_key::key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^    unsigned char key[10];$/;"	m	language:C++	struct:skipjack_key	access:public
skipjack_keysize	libtomcrypt/src/ciphers/skipjack.c	/^int skipjack_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
skipjack_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int skipjack_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
skipjack_setup	libtomcrypt/src/ciphers/skipjack.c	/^int skipjack_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
skipjack_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int skipjack_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
skipjack_test	libtomcrypt/src/ciphers/skipjack.c	/^int skipjack_test(void)$/;"	f	language:C	signature:(void)
skipjack_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int skipjack_test(void);$/;"	p	language:C++	signature:(void)
slave	chansession.h	/^	int slave;$/;"	m	language:C++	struct:ChanSess	access:public
snprintf	sftp-server/defines.h	/^  int snprintf (char *, size_t, const char *, ...);$/;"	p	language:C++	signature:(char *, size_t, const char *, ...)
snprintf	sftp-server/openbsd-compat/openbsd-compat.h	/^int snprintf(char *, size_t, SNPRINTF_CONST char *, ...);$/;"	p	language:C++	signature:(char *, size_t, SNPRINTF_CONST char *, ...)
sober128	libtomcrypt/src/headers/tomcrypt_prng.h	/^    struct sober128_prng  sober128;$/;"	m	language:C++	union:Prng_state	typeref:struct:Prng_state::sober128_prng	access:public
sober128_add_entropy	libtomcrypt/src/headers/tomcrypt_prng.h	/^int sober128_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
sober128_add_entropy	libtomcrypt/src/prngs/sober128.c	/^int sober128_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
sober128_desc	libtomcrypt/src/prngs/sober128.c	/^const struct ltc_prng_descriptor sober128_desc = $/;"	v	language:C	typeref:struct:ltc_prng_descriptor
sober128_done	libtomcrypt/src/headers/tomcrypt_prng.h	/^int sober128_done(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
sober128_done	libtomcrypt/src/prngs/sober128.c	/^int sober128_done(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
sober128_export	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  sober128_export(unsigned char *out, unsigned long *outlen, prng_state *prng);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long *outlen, prng_state *prng)
sober128_export	libtomcrypt/src/prngs/sober128.c	/^int sober128_export(unsigned char *out, unsigned long *outlen, prng_state *prng)$/;"	f	language:C	signature:(unsigned char *out, unsigned long *outlen, prng_state *prng)
sober128_import	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  sober128_import(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
sober128_import	libtomcrypt/src/prngs/sober128.c	/^int sober128_import(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
sober128_prng	libtomcrypt/src/headers/tomcrypt_prng.h	/^struct sober128_prng {$/;"	s	language:C++
sober128_prng::R	libtomcrypt/src/headers/tomcrypt_prng.h	/^    ulong32      R[17],          \/* Working storage for the shift register *\/$/;"	m	language:C++	struct:sober128_prng	access:public
sober128_prng::flag	libtomcrypt/src/headers/tomcrypt_prng.h	/^                 flag,           \/* first add_entropy call or not? *\/$/;"	m	language:C++	struct:sober128_prng	access:public
sober128_prng::initR	libtomcrypt/src/headers/tomcrypt_prng.h	/^                 initR[17],      \/* saved register contents *\/ $/;"	m	language:C++	struct:sober128_prng	access:public
sober128_prng::konst	libtomcrypt/src/headers/tomcrypt_prng.h	/^                 konst,          \/* key dependent constant *\/$/;"	m	language:C++	struct:sober128_prng	access:public
sober128_prng::nbuf	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int          nbuf,           \/* number of part-word stream bits buffered *\/$/;"	m	language:C++	struct:sober128_prng	access:public
sober128_prng::sbuf	libtomcrypt/src/headers/tomcrypt_prng.h	/^                 sbuf;           \/* partial word encryption buffer *\/$/;"	m	language:C++	struct:sober128_prng	access:public
sober128_prng::set	libtomcrypt/src/headers/tomcrypt_prng.h	/^                 set;            \/* did we call add_entropy to set key? *\/$/;"	m	language:C++	struct:sober128_prng	access:public
sober128_read	libtomcrypt/src/headers/tomcrypt_prng.h	/^unsigned long sober128_read(unsigned char *out, unsigned long outlen, prng_state *prng);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long outlen, prng_state *prng)
sober128_read	libtomcrypt/src/prngs/sober128.c	/^unsigned long sober128_read(unsigned char *out, unsigned long outlen, prng_state *prng)$/;"	f	language:C	signature:(unsigned char *out, unsigned long outlen, prng_state *prng)
sober128_ready	libtomcrypt/src/headers/tomcrypt_prng.h	/^int sober128_ready(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
sober128_ready	libtomcrypt/src/prngs/sober128.c	/^int sober128_ready(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
sober128_start	libtomcrypt/src/headers/tomcrypt_prng.h	/^int sober128_start(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
sober128_start	libtomcrypt/src/prngs/sober128.c	/^int sober128_start(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
sober128_test	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  sober128_test(void);$/;"	p	language:C++	signature:(void)
sober128_test	libtomcrypt/src/prngs/sober128.c	/^int sober128_test(void)$/;"	f	language:C	signature:(void)
sock	sftp-server/channels.h	/^	int     sock;		\/* sock fd *\/$/;"	m	language:C++	struct:Channel	access:public
sock_in	session.h	/^	int sock_in;$/;"	m	language:C++	struct:sshsession	access:public
sock_out	session.h	/^	int sock_out;$/;"	m	language:C++	struct:sshsession	access:public
sock_set_v6only	sftp-server/misc.c	/^sock_set_v6only(int s)$/;"	f	language:C	signature:(int s)
sock_set_v6only	sftp-server/misc.h	/^void	 sock_set_v6only(int);$/;"	p	language:C++	signature:(int)
sockaddr_in6	fake-rfc2553.h	/^struct sockaddr_in6 {$/;"	s	language:C++
sockaddr_in6	sftp-server/openbsd-compat/fake-rfc2553.h	/^struct sockaddr_in6 {$/;"	s	language:C++
sockaddr_in6::sin6_addr	fake-rfc2553.h	/^	struct in6_addr	sin6_addr;$/;"	m	language:C++	struct:sockaddr_in6	typeref:struct:sockaddr_in6::in6_addr	access:public
sockaddr_in6::sin6_addr	sftp-server/openbsd-compat/fake-rfc2553.h	/^	struct in6_addr	sin6_addr;$/;"	m	language:C++	struct:sockaddr_in6	typeref:struct:sockaddr_in6::in6_addr	access:public
sockaddr_in6::sin6_family	fake-rfc2553.h	/^	unsigned short	sin6_family;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sockaddr_in6::sin6_family	sftp-server/openbsd-compat/fake-rfc2553.h	/^	unsigned short	sin6_family;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sockaddr_in6::sin6_flowinfo	fake-rfc2553.h	/^	u_int32_t	sin6_flowinfo;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sockaddr_in6::sin6_flowinfo	sftp-server/openbsd-compat/fake-rfc2553.h	/^	u_int32_t	sin6_flowinfo;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sockaddr_in6::sin6_port	fake-rfc2553.h	/^	u_int16_t	sin6_port;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sockaddr_in6::sin6_port	sftp-server/openbsd-compat/fake-rfc2553.h	/^	u_int16_t	sin6_port;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sockaddr_in6::sin6_scope_id	fake-rfc2553.h	/^	u_int32_t	sin6_scope_id;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sockaddr_in6::sin6_scope_id	sftp-server/openbsd-compat/fake-rfc2553.h	/^	u_int32_t	sin6_scope_id;$/;"	m	language:C++	struct:sockaddr_in6	access:public
sockaddr_storage	fake-rfc2553.h	/^struct sockaddr_storage {$/;"	s	language:C++
sockaddr_storage	sftp-server/openbsd-compat/fake-rfc2553.h	/^struct sockaddr_storage {$/;"	s	language:C++
sockaddr_storage::__ss_pad2	fake-rfc2553.h	/^	char		__ss_pad2[_SS_PADSIZE];$/;"	m	language:C++	struct:sockaddr_storage	access:public
sockaddr_storage::__ss_pad2	sftp-server/openbsd-compat/fake-rfc2553.h	/^	char		__ss_pad2[_SS_PADSIZE];$/;"	m	language:C++	struct:sockaddr_storage	access:public
sockaddr_storage::ss_sa	fake-rfc2553.h	/^	struct sockaddr	ss_sa;$/;"	m	language:C++	struct:sockaddr_storage	typeref:struct:sockaddr_storage::sockaddr	access:public
sockaddr_storage::ss_sa	sftp-server/openbsd-compat/fake-rfc2553.h	/^	struct sockaddr	ss_sa;$/;"	m	language:C++	struct:sockaddr_storage	typeref:struct:sockaddr_storage::sockaddr	access:public
sockaddr_un	sftp-server/defines.h	/^struct	sockaddr_un {$/;"	s	language:C++
sockaddr_un::sun_family	sftp-server/defines.h	/^	short	sun_family;		\/* AF_UNIX *\/$/;"	m	language:C++	struct:sockaddr_un	access:public
sockaddr_un::sun_path	sftp-server/defines.h	/^	char	sun_path[108];		\/* path name (gag) *\/$/;"	m	language:C++	struct:sockaddr_un	access:public
socks	listener.h	/^	int socks[DROPBEAR_MAX_SOCKS];$/;"	m	language:C++	struct:Listener	access:public
solaris_contract_post_fork_child	sftp-server/openbsd-compat/port-solaris.h	/^void solaris_contract_post_fork_child(void);$/;"	p	language:C++	signature:(void)
solaris_contract_post_fork_parent	sftp-server/openbsd-compat/port-solaris.h	/^void solaris_contract_post_fork_parent(pid_t pid);$/;"	p	language:C++	signature:(pid_t pid)
solaris_contract_pre_fork	sftp-server/openbsd-compat/port-solaris.h	/^void solaris_contract_pre_fork(void);$/;"	p	language:C++	signature:(void)
sorter	libtomcrypt/testprof/tomcrypt_test.h	/^int sorter(const void *a, const void *b);$/;"	p	language:C++	signature:(const void *a, const void *b)
sorter	libtomcrypt/testprof/x86_prof.c	/^int sorter(const void *a, const void *b)$/;"	f	language:C	signature:(const void *a, const void *b)
source	scp.c	/^source(int argc, char **argv)$/;"	f	language:C	signature:(int argc, char **argv)
source	scp.c	/^void source(int, char *[]);$/;"	p	language:C	file:	signature:(int, char *[])
source	signkey.h	/^	signkey_source source;$/;"	m	language:C++	struct:SIGN_key	access:public
spawn_command	dbutil.c	/^int spawn_command(void(*exec_fn)(void *user_data), void *exec_data,$/;"	f	language:C	signature:(void(*exec_fn)(void *user_data), void *exec_data, int *ret_writefd, int *ret_readfd, int *ret_errfd, pid_t *ret_pid)
spawn_command	dbutil.h	/^int spawn_command(void(*exec_fn)(void *user_data), void *exec_data,$/;"	p	language:C++	signature:(void(*exec_fn)(void *user_data), void *exec_data, int *writefd, int *readfd, int *errfd, pid_t *pid)
spd1	libtomcrypt/testprof/tomcrypt_test.h	/^    unsigned long spd1, spd2, avg;$/;"	m	language:C++	struct:list	access:public
spd2	libtomcrypt/testprof/tomcrypt_test.h	/^    unsigned long spd1, spd2, avg;$/;"	m	language:C++	struct:list	access:public
sprng_add_entropy	libtomcrypt/src/headers/tomcrypt_prng.h	/^int sprng_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
sprng_add_entropy	libtomcrypt/src/prngs/sprng.c	/^int sprng_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
sprng_desc	libtomcrypt/src/prngs/sprng.c	/^const struct ltc_prng_descriptor sprng_desc =$/;"	v	language:C	typeref:struct:ltc_prng_descriptor
sprng_done	libtomcrypt/src/headers/tomcrypt_prng.h	/^int sprng_done(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
sprng_done	libtomcrypt/src/prngs/sprng.c	/^int sprng_done(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
sprng_export	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  sprng_export(unsigned char *out, unsigned long *outlen, prng_state *prng);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long *outlen, prng_state *prng)
sprng_export	libtomcrypt/src/prngs/sprng.c	/^int sprng_export(unsigned char *out, unsigned long *outlen, prng_state *prng)$/;"	f	language:C	signature:(unsigned char *out, unsigned long *outlen, prng_state *prng)
sprng_import	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  sprng_import(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
sprng_import	libtomcrypt/src/prngs/sprng.c	/^int sprng_import(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
sprng_read	libtomcrypt/src/headers/tomcrypt_prng.h	/^unsigned long sprng_read(unsigned char *out, unsigned long outlen, prng_state *prng);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long outlen, prng_state *prng)
sprng_read	libtomcrypt/src/prngs/sprng.c	/^unsigned long sprng_read(unsigned char *out, unsigned long outlen, prng_state *prng)$/;"	f	language:C	signature:(unsigned char *out, unsigned long outlen, prng_state *prng)
sprng_ready	libtomcrypt/src/headers/tomcrypt_prng.h	/^int sprng_ready(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
sprng_ready	libtomcrypt/src/prngs/sprng.c	/^int sprng_ready(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
sprng_start	libtomcrypt/src/headers/tomcrypt_prng.h	/^int sprng_start(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
sprng_start	libtomcrypt/src/prngs/sprng.c	/^int sprng_start(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
sprng_test	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  sprng_test(void);$/;"	p	language:C++	signature:(void)
sprng_test	libtomcrypt/src/prngs/sprng.c	/^int sprng_test(void)$/;"	f	language:C	signature:(void)
sqr	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*sqr)(void *a, void *b);$/;"	m	language:C++	struct:__anon54	access:public
sqr	libtomcrypt/src/math/gmp_desc.c	/^static int sqr(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
sqr	libtomcrypt/src/math/ltm_desc.c	/^static int sqr(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
sqr	libtomcrypt/src/math/tfm_desc.c	/^static int sqr(void *a, void *b)$/;"	f	language:C	file:	signature:(void *a, void *b)
sqrmod	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*sqrmod)(void *a, void *b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
sqrmod	libtomcrypt/src/math/gmp_desc.c	/^static int sqrmod(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
sqrmod	libtomcrypt/src/math/ltm_desc.c	/^static int sqrmod(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
sqrmod	libtomcrypt/src/math/tfm_desc.c	/^static int sqrmod(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
ss	libtomcrypt/src/headers/tomcrypt_pk.h	/^            ss, \/* second *\/$/;"	m	language:C++	struct:__anon39	access:public
ss_family	fake-rfc2553.h	61;"	d	language:C++
ss_family	sftp-server/defines.h	290;"	d	language:C++
ss_family	sftp-server/openbsd-compat/fake-rfc2553.h	59;"	d	language:C++
ss_sa	fake-rfc2553.h	/^	struct sockaddr	ss_sa;$/;"	m	language:C++	struct:sockaddr_storage	typeref:struct:sockaddr_storage::sockaddr	access:public
ss_sa	sftp-server/openbsd-compat/fake-rfc2553.h	/^	struct sockaddr	ss_sa;$/;"	m	language:C++	struct:sockaddr_storage	typeref:struct:sockaddr_storage::sockaddr	access:public
ssh_compress	common-algo.c	/^algo_type ssh_compress[] = {$/;"	v	language:C
ssh_gai_strerror	sftp-server/misc.c	/^ssh_gai_strerror(int gaierr)$/;"	f	language:C	signature:(int gaierr)
ssh_gai_strerror	sftp-server/misc.h	/^const char *ssh_gai_strerror(int);$/;"	p	language:C++	signature:(int)
ssh_get_progname	scpmisc.c	/^char *ssh_get_progname(char *argv0)$/;"	f	language:C	signature:(char *argv0)
ssh_get_progname	scpmisc.h	/^char *ssh_get_progname(char *);$/;"	p	language:C++	signature:(char *)
ssh_get_progname	sftp-server/openbsd-compat/bsd-misc.c	/^char *ssh_get_progname(char *argv0)$/;"	f	language:C	signature:(char *argv0)
ssh_get_progname	sftp-server/openbsd-compat/bsd-misc.h	/^char *ssh_get_progname(char *);$/;"	p	language:C++	signature:(char *)
ssh_nocompress	common-algo.c	/^algo_type ssh_nocompress[] = {$/;"	v	language:C
ssh_program	scp.c	/^char *ssh_program = _PATH_SSH_PROGRAM;$/;"	v	language:C
ssh_selinux_change_context	sftp-server/openbsd-compat/port-linux.h	/^void ssh_selinux_change_context(const char *);$/;"	p	language:C++	signature:(const char *)
ssh_selinux_enabled	sftp-server/openbsd-compat/port-linux.h	/^int ssh_selinux_enabled(void);$/;"	p	language:C++	signature:(void)
ssh_selinux_setup_exec_context	sftp-server/openbsd-compat/port-linux.h	/^void ssh_selinux_setup_exec_context(char *);$/;"	p	language:C++	signature:(char *)
ssh_selinux_setup_pty	sftp-server/openbsd-compat/port-linux.h	/^void ssh_selinux_setup_pty(char *, const char *);$/;"	p	language:C++	signature:(char *, const char *)
sshaix_getnameinfo	sftp-server/openbsd-compat/port-aix.h	/^int sshaix_getnameinfo(const struct sockaddr *, size_t, char *, size_t,$/;"	p	language:C++	signature:(const struct sockaddr *, size_t, char *, size_t, char *, size_t, int)
sshciphers	common-algo.c	/^algo_type sshciphers[] = {$/;"	v	language:C
sshhashes	common-algo.c	/^algo_type sshhashes[] = {$/;"	v	language:C
sshhostkey	common-algo.c	/^algo_type sshhostkey[] = {$/;"	v	language:C
sshkex	common-algo.c	/^algo_type sshkex[] = {$/;"	v	language:C
sshsession	session.h	/^struct sshsession {$/;"	s	language:C++
sshsession::allowprivport	session.h	/^	int allowprivport;$/;"	m	language:C++	struct:sshsession	access:public
sshsession::authstate	session.h	/^	struct AuthState authstate; \/* Common amongst client and server, since most$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::AuthState	access:public
sshsession::buf_match_algo	session.h	/^	algo_type*(*buf_match_algo)(buffer*buf, algo_type localalgos[],$/;"	m	language:C++	struct:sshsession	access:public
sshsession::chancount	session.h	/^	unsigned int chancount; \/* the number of Channel*s in use *\/$/;"	m	language:C++	struct:sshsession	access:public
sshsession::channels	session.h	/^	struct Channel ** channels; \/* these pointers may be null *\/$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::Channel	access:public
sshsession::chansize	session.h	/^	unsigned int chansize; \/* the number of Channel*s allocated for channels *\/$/;"	m	language:C++	struct:sshsession	access:public
sshsession::chantypes	session.h	/^	const struct ChanType **chantypes; \/* The valid channel types *\/$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::ChanType	access:public
sshsession::compress_algos	session.h	/^	algo_type *compress_algos;$/;"	m	language:C++	struct:sshsession	access:public
sshsession::connect_time	session.h	/^	time_t connect_time; \/* time the connection was established$/;"	m	language:C++	struct:sshsession	access:public
sshsession::dataallowed	session.h	/^	unsigned dataallowed : 1; \/* whether we can send data packets or we are in$/;"	m	language:C++	struct:sshsession	access:public
sshsession::dh_K	session.h	/^	mp_int * dh_K; \/* SSH_MSG_KEXDH_REPLY and sending SSH_MSH_NEWKEYS *\/$/;"	m	language:C++	struct:sshsession	access:public
sshsession::hash	session.h	/^	unsigned char hash[SHA1_HASH_SIZE]; \/* the hash*\/$/;"	m	language:C++	struct:sshsession	access:public
sshsession::ignorenext	session.h	/^	unsigned char ignorenext; \/* whether to ignore the next packet,$/;"	m	language:C++	struct:sshsession	access:public
sshsession::isserver	session.h	/^	unsigned char isserver;$/;"	m	language:C++	struct:sshsession	access:public
sshsession::kexhashbuf	session.h	/^	buffer* kexhashbuf; \/* session hash buffer calculated from various packets*\/$/;"	m	language:C++	struct:sshsession	access:public
sshsession::kexstate	session.h	/^	struct KEXState kexstate;$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::KEXState	access:public
sshsession::keys	session.h	/^	struct key_context *keys;$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::key_context	access:public
sshsession::last_packet_time	session.h	/^	time_t last_packet_time; \/* time of the last packet transmission or receive, for$/;"	m	language:C++	struct:sshsession	access:public
sshsession::last_trx_packet_time	session.h	/^	time_t last_trx_packet_time; \/* time of the last packet transmission, for$/;"	m	language:C++	struct:sshsession	access:public
sshsession::lastpacket	session.h	/^	unsigned char lastpacket; \/* What the last received packet type was *\/$/;"	m	language:C++	struct:sshsession	access:public
sshsession::listeners	session.h	/^	struct Listener ** listeners;$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::Listener	access:public
sshsession::listensize	session.h	/^	unsigned int listensize;$/;"	m	language:C++	struct:sshsession	access:public
sshsession::maxfd	session.h	/^	int maxfd; \/* the maximum file descriptor to check with select() *\/$/;"	m	language:C++	struct:sshsession	access:public
sshsession::newkeys	session.h	/^	struct key_context *newkeys;$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::key_context	access:public
sshsession::packettypes	session.h	/^	const packettype * packettypes; \/* Packet handler mappings for this$/;"	m	language:C++	struct:sshsession	access:public
sshsession::payload	session.h	/^	buffer *payload; \/* Post-decompression, the actual SSH packet *\/$/;"	m	language:C++	struct:sshsession	access:public
sshsession::readbuf	session.h	/^	buffer *readbuf; \/* From the wire, decrypted in-place *\/$/;"	m	language:C++	struct:sshsession	access:public
sshsession::recvseq	session.h	/^	unsigned int transseq, recvseq; \/* Sequence IDs *\/$/;"	m	language:C++	struct:sshsession	access:public
sshsession::remoteclosed	session.h	/^	void(*remoteclosed)(); \/* A callback to handle closure of the$/;"	m	language:C++	struct:sshsession	access:public
sshsession::remoteident	session.h	/^	unsigned char *remoteident;$/;"	m	language:C++	struct:sshsession	access:public
sshsession::reply_queue_head	session.h	/^	struct packetlist *reply_queue_head, *reply_queue_tail;$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::packetlist	access:public
sshsession::reply_queue_tail	session.h	/^	struct packetlist *reply_queue_head, *reply_queue_tail;$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::	access:public
sshsession::requirenext	session.h	/^	unsigned char requirenext; \/* byte indicating what packet we require next, $/;"	m	language:C++	struct:sshsession	access:public
sshsession::session_id	session.h	/^	unsigned char *session_id; \/* this is the hash from the first kex *\/$/;"	m	language:C++	struct:sshsession	access:public
sshsession::signal_pipe	session.h	/^	int signal_pipe[2]; \/* stores endpoints of a self-pipe used for$/;"	m	language:C++	struct:sshsession	access:public
sshsession::sock_in	session.h	/^	int sock_in;$/;"	m	language:C++	struct:sshsession	access:public
sshsession::sock_out	session.h	/^	int sock_out;$/;"	m	language:C++	struct:sshsession	access:public
sshsession::transkexinit	session.h	/^	buffer* transkexinit; \/* the kexinit packet we send should be kept so we$/;"	m	language:C++	struct:sshsession	access:public
sshsession::transseq	session.h	/^	unsigned int transseq, recvseq; \/* Sequence IDs *\/$/;"	m	language:C++	struct:sshsession	access:public
sshsession::writepayload	session.h	/^	buffer *writepayload; \/* Unencrypted payload to write - this is used$/;"	m	language:C++	struct:sshsession	access:public
sshsession::writequeue	session.h	/^	struct Queue writequeue; \/* A queue of encrypted packets to send *\/$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::Queue	access:public
ssize_t	sftp-server/defines.h	/^typedef int ssize_t;$/;"	t	language:C++
stab	libtomcrypt/src/ciphers/rc5.c	/^static const ulong32 stab[50] = {$/;"	v	language:C	file:
stab	libtomcrypt/src/ciphers/rc6.c	/^static const ulong32 stab[44] = {$/;"	v	language:C	file:
stalled	progressmeter.c	/^static long stalled;		\/* how long we have been stalled *\/$/;"	v	language:C	file:
start	algo.h	/^	int (*start)(int cipher, const unsigned char *IV, $/;"	m	language:C++	struct:dropbear_cipher_mode	access:public
start	keyimport.c	/^struct mpint_pos { void *start; int bytes; };$/;"	m	language:C	struct:mpint_pos	file:	access:public
start	libtomcrypt/src/headers/tomcrypt_cipher.h	/^      unsigned char S[32], start;$/;"	m	language:C++	struct:twofish_key	access:public
start	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int (*start)(prng_state *prng);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
start	libtomcrypt/src/pk/asn1/der/set/der_encode_setof.c	/^   unsigned char *start;$/;"	m	language:C	struct:edge	file:	access:public
start	progressmeter.c	/^static time_t start;		\/* start progress *\/$/;"	v	language:C	file:
start_progress_meter	progressmeter.c	/^start_progress_meter(char *f, off_t filesize, off_t *ctr)$/;"	f	language:C	signature:(char *f, off_t filesize, off_t *ctr)
start_progress_meter	progressmeter.h	/^void	start_progress_meter(char *, off_t, off_t *);$/;"	p	language:C++	signature:(char *, off_t, off_t *)
startsyslog	dbutil.c	/^void startsyslog() {$/;"	f	language:C
startsyslog	dbutil.h	/^void startsyslog();$/;"	p	language:C++	signature:()
stat_to_attrib	sftp-server/sftp-common.c	/^stat_to_attrib(const struct stat *st, Attrib *a)$/;"	f	language:C	signature:(const struct stat *st, Attrib *a)
stat_to_attrib	sftp-server/sftp-common.h	/^void	 stat_to_attrib(const struct stat *, Attrib *);$/;"	p	language:C++	signature:(const struct stat *, Attrib *)
state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[10];$/;"	m	language:C++	struct:rmd320_state	access:public
state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[4];$/;"	m	language:C++	struct:rmd128_state	access:public
state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[5];$/;"	m	language:C++	struct:rmd160_state	access:public
state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen, state[8];$/;"	m	language:C++	struct:rmd256_state	access:public
state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[4], curlen;$/;"	m	language:C++	struct:md4_state	access:public
state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[4], curlen;$/;"	m	language:C++	struct:md5_state	access:public
state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[5], curlen;$/;"	m	language:C++	struct:sha1_state	access:public
state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 state[8], curlen;$/;"	m	language:C++	struct:sha256_state	access:public
state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64  length, state[8];$/;"	m	language:C++	struct:sha512_state	access:public
state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length, state[8];$/;"	m	language:C++	struct:whirlpool_state	access:public
state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 state[3], length;$/;"	m	language:C++	struct:tiger_state	access:public
state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char state[MAXBLOCKSIZE], buf[MAXBLOCKSIZE];$/;"	m	language:C++	struct:chc_state	access:public
state	libtomcrypt/src/headers/tomcrypt_mac.h	/^    unsigned char state[16];$/;"	m	language:C++	struct:pelican_state	access:public
state	session.h	/^	cli_state state; \/* Used to progress auth\/channelsession etc *\/$/;"	m	language:C++	struct:clientsession	access:public
state	sftp-server/openbsd-compat/sha2.h	/^	u_int32_t	state[8];$/;"	m	language:C++	struct:_SHA256_CTX	access:public
state	sftp-server/openbsd-compat/sha2.h	/^	u_int64_t	state[8];$/;"	m	language:C++	struct:_SHA512_CTX	access:public
status_confirms	sftp-server/channels.h	/^	struct channel_confirms	status_confirms;$/;"	m	language:C++	struct:Channel	typeref:struct:Channel::channel_confirms	access:public
status_to_message	sftp-server/sftp-server.c	/^status_to_message(u_int32_t status)$/;"	f	language:C	file:	signature:(u_int32_t status)
statvfs	sftp-server/openbsd-compat/bsd-statvfs.c	/^int statvfs(const char *path, struct statvfs *buf)$/;"	f	language:C	signature:(const char *path, struct statvfs *buf)
statvfs	sftp-server/openbsd-compat/bsd-statvfs.h	/^int statvfs(const char *, struct statvfs *);$/;"	p	language:C++	signature:(const char *, struct statvfs *)
statvfs	sftp-server/openbsd-compat/bsd-statvfs.h	/^struct statvfs {$/;"	s	language:C++
statvfs::f_bavail	sftp-server/openbsd-compat/bsd-statvfs.h	/^	fsblkcnt_t    f_bavail;	\/* Number of free blocks available to  *\/$/;"	m	language:C++	struct:statvfs	access:public
statvfs::f_bfree	sftp-server/openbsd-compat/bsd-statvfs.h	/^	fsblkcnt_t    f_bfree;	\/* Total number of free blocks. *\/$/;"	m	language:C++	struct:statvfs	access:public
statvfs::f_blocks	sftp-server/openbsd-compat/bsd-statvfs.h	/^	fsblkcnt_t f_blocks;	\/* Total number of blocks on file system in *\/$/;"	m	language:C++	struct:statvfs	access:public
statvfs::f_bsize	sftp-server/openbsd-compat/bsd-statvfs.h	/^	unsigned long f_bsize;	\/* File system block size. *\/$/;"	m	language:C++	struct:statvfs	access:public
statvfs::f_favail	sftp-server/openbsd-compat/bsd-statvfs.h	/^	fsfilcnt_t    f_favail;	\/* Number of file serial numbers available to *\/$/;"	m	language:C++	struct:statvfs	access:public
statvfs::f_ffree	sftp-server/openbsd-compat/bsd-statvfs.h	/^	fsfilcnt_t    f_ffree;	\/* Total number of free file serial numbers. *\/$/;"	m	language:C++	struct:statvfs	access:public
statvfs::f_files	sftp-server/openbsd-compat/bsd-statvfs.h	/^	fsfilcnt_t    f_files;	\/* Total number of file serial numbers. *\/$/;"	m	language:C++	struct:statvfs	access:public
statvfs::f_flag	sftp-server/openbsd-compat/bsd-statvfs.h	/^	unsigned long f_flag;	\/* BBit mask of f_flag values. *\/$/;"	m	language:C++	struct:statvfs	access:public
statvfs::f_frsize	sftp-server/openbsd-compat/bsd-statvfs.h	/^	unsigned long f_frsize;	\/* Fundamental file system block size. *\/$/;"	m	language:C++	struct:statvfs	access:public
statvfs::f_fsid	sftp-server/openbsd-compat/bsd-statvfs.h	/^	unsigned long f_fsid;	\/* File system ID. *\/$/;"	m	language:C++	struct:statvfs	access:public
statvfs::f_namemax	sftp-server/openbsd-compat/bsd-statvfs.h	/^	unsigned long f_namemax;\/*  Maximum filename length. *\/$/;"	m	language:C++	struct:statvfs	access:public
stderrcopy	session.h	/^	int stderrcopy;$/;"	m	language:C++	struct:clientsession	access:public
stderrflags	session.h	/^	int stderrflags;$/;"	m	language:C++	struct:clientsession	access:public
stdincopy	session.h	/^	int stdincopy;$/;"	m	language:C++	struct:clientsession	access:public
stdinflags	session.h	/^	int stdinflags;$/;"	m	language:C++	struct:clientsession	access:public
stdoutcopy	session.h	/^	int stdoutcopy;$/;"	m	language:C++	struct:clientsession	access:public
stdoutflags	session.h	/^	int stdoutflags;$/;"	m	language:C++	struct:clientsession	access:public
stop_progress_meter	progressmeter.c	/^stop_progress_meter(void)$/;"	f	language:C	signature:(void)
stop_progress_meter	progressmeter.h	/^void	stop_progress_meter(void);$/;"	p	language:C++	signature:(void)
store_test	libtomcrypt/testprof/store_test.c	/^int store_test(void)$/;"	f	language:C	signature:(void)
store_test	libtomcrypt/testprof/tomcrypt_test.h	/^int store_test(void);$/;"	p	language:C++	signature:(void)
strdelim	scpmisc.h	/^char	*strdelim(char **);$/;"	p	language:C++	signature:(char **)
strdelim	sftp-server/misc.c	/^strdelim(char **s)$/;"	f	language:C	signature:(char **s)
strdelim	sftp-server/misc.h	/^char	*strdelim(char **);$/;"	p	language:C++	signature:(char **)
strdup	sftp-server/openbsd-compat/bsd-misc.c	/^strdup(const char *str)$/;"	f	language:C	signature:(const char *str)
strerror	sftp-server/openbsd-compat/bsd-misc.c	/^const char *strerror(int e)$/;"	f	language:C	signature:(int e)
strerror	sftp-server/openbsd-compat/bsd-misc.h	/^const char *strerror(int);$/;"	p	language:C++	signature:(int)
string_from_portable	sftp-server/sftp-server.c	/^string_from_portable(int pflags)$/;"	f	language:C	file:	signature:(int pflags)
strings	compat.c	/^static char **curshell, **shells, *strings;$/;"	v	language:C	file:
stripcontrol	dbutil.c	/^char * stripcontrol(const char * text) {$/;"	f	language:C	signature:(const char * text)
stripcontrol	dbutil.h	/^char * stripcontrol(const char * text);$/;"	p	language:C++	signature:(const char * text)
strlcat	compat.c	/^strlcat(dst, src, siz)$/;"	f	language:C
strlcat	compat.h	/^size_t strlcat(char *dst, const char *src, size_t siz);$/;"	p	language:C++	signature:(char *dst, const char *src, size_t siz)
strlcat	sftp-server/openbsd-compat/openbsd-compat.h	/^size_t strlcat(char *dst, const char *src, size_t siz);$/;"	p	language:C++	signature:(char *dst, const char *src, size_t siz)
strlcpy	compat.c	/^size_t strlcpy(char *dst, const char *src, size_t size) {$/;"	f	language:C	signature:(char *dst, const char *src, size_t size)
strlcpy	compat.h	/^size_t strlcpy(char *dst, const char *src, size_t size);$/;"	p	language:C++	signature:(char *dst, const char *src, size_t size)
strlcpy	sftp-server/openbsd-compat/openbsd-compat.h	/^size_t strlcpy(char *dst, const char *src, size_t siz);$/;"	p	language:C++	signature:(char *dst, const char *src, size_t siz)
strmode	sftp-server/openbsd-compat/openbsd-compat.h	/^void strmode(int mode, char *p);$/;"	p	language:C++	signature:(int mode, char *p)
strmode	sftp-server/openbsd-compat/strmode.c	/^strmode(int mode, char *p)$/;"	f	language:C	signature:(int mode, char *p)
strnunvis	sftp-server/openbsd-compat/vis.h	/^ssize_t strnunvis(char *, const char *, size_t)$/;"	p	language:C++	signature:(char *, const char *, size_t)
strnvis	sftp-server/openbsd-compat/vis.c	/^strnvis(char *dst, const char *src, size_t siz, int flag)$/;"	f	language:C	signature:(char *dst, const char *src, size_t siz, int flag)
strnvis	sftp-server/openbsd-compat/vis.h	/^int	strnvis(char *, const char *, size_t, int)$/;"	p	language:C++	signature:(char *, const char *, size_t, int)
strsep	sftp-server/openbsd-compat/openbsd-compat.h	/^char *strsep(char **stringp, const char *delim);$/;"	p	language:C++	signature:(char **stringp, const char *delim)
strtoll	sftp-server/openbsd-compat/openbsd-compat.h	/^long long strtoll(const char *, char **, int);$/;"	p	language:C++	signature:(const char *, char **, int)
strtonum	sftp-server/openbsd-compat/openbsd-compat.h	/^long long strtonum(const char *, long long, long long, const char **);$/;"	p	language:C++	signature:(const char *, long long, long long, const char **)
strtonum	sftp-server/openbsd-compat/strtonum.c	/^strtonum(const char *numstr, long long minval, long long maxval,$/;"	f	language:C	signature:(const char *numstr, long long minval, long long maxval, const char **errstrp)
strunvis	sftp-server/openbsd-compat/vis.h	/^int	strunvis(char *, const char *);$/;"	p	language:C++	signature:(char *, const char *)
strvis	sftp-server/openbsd-compat/vis.c	/^strvis(char *dst, const char *src, int flag)$/;"	f	language:C	signature:(char *dst, const char *src, int flag)
strvis	sftp-server/openbsd-compat/vis.h	/^int	strvis(char *, const char *, int);$/;"	p	language:C++	signature:(char *, const char *, int)
strvisx	sftp-server/openbsd-compat/vis.c	/^strvisx(char *dst, const char *src, size_t len, int flag)$/;"	f	language:C	signature:(char *dst, const char *src, size_t len, int flag)
strvisx	sftp-server/openbsd-compat/vis.h	/^int	strvisx(char *, const char *, size_t, int)$/;"	p	language:C++	signature:(char *, const char *, size_t, int)
sub	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*sub)(void *a, void *b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
sub	libtomcrypt/src/math/gmp_desc.c	/^static int sub(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
sub	libtomcrypt/src/math/ltm_desc.c	/^static int sub(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
sub	libtomcrypt/src/math/tfm_desc.c	/^static int sub(void *a, void *b, void *c)$/;"	f	language:C	file:	signature:(void *a, void *b, void *c)
subi	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*subi)(void *a, unsigned long b, void *c);$/;"	m	language:C++	struct:__anon54	access:public
subi	libtomcrypt/src/math/gmp_desc.c	/^static int subi(void *a, unsigned long b, void *c)$/;"	f	language:C	file:	signature:(void *a, unsigned long b, void *c)
subi	libtomcrypt/src/math/ltm_desc.c	/^static int subi(void *a, unsigned long b, void *c)$/;"	f	language:C	file:	signature:(void *a, unsigned long b, void *c)
subi	libtomcrypt/src/math/tfm_desc.c	/^static int subi(void *a, unsigned long b, void *c)$/;"	f	language:C	file:	signature:(void *a, unsigned long b, void *c)
subsection{Algorithm One}
subsection{PKCS #5}
sun_family	sftp-server/defines.h	/^	short	sun_family;		\/* AF_UNIX *\/$/;"	m	language:C++	struct:sockaddr_un	access:public
sun_path	sftp-server/defines.h	/^	char	sun_path[108];		\/* path name (gag) *\/$/;"	m	language:C++	struct:sockaddr_un	access:public
sv	sftp-server/openbsd-compat/sigact.h	/^	struct sigvec sv;$/;"	m	language:C++	struct:sigaction	typeref:struct:sigaction::sigvec	access:public
svr_add_pubkey_options	auth.h	/^int svr_add_pubkey_options(buffer *options_buf, int line_num, const char* filename);$/;"	p	language:C++	signature:(buffer *options_buf, int line_num, const char* filename)
svr_add_pubkey_options	auth.h	59;"	d	language:C++
svr_add_pubkey_options	svr-authpubkeyoptions.c	/^int svr_add_pubkey_options(buffer *options_buf, int line_num, const char* filename) {$/;"	f	language:C	signature:(buffer *options_buf, int line_num, const char* filename)
svr_agentcleanup	agentfwd.h	/^void svr_agentcleanup(struct ChanSess * chansess);$/;"	p	language:C++	signature:(struct ChanSess * chansess)
svr_agentcleanup	svr-agentfwd.c	/^void svr_agentcleanup(struct ChanSess * chansess) {$/;"	f	language:C	signature:(struct ChanSess * chansess)
svr_agentreq	agentfwd.h	/^int svr_agentreq(struct ChanSess * chansess);$/;"	p	language:C++	signature:(struct ChanSess * chansess)
svr_agentreq	svr-agentfwd.c	/^int svr_agentreq(struct ChanSess * chansess) {$/;"	f	language:C	signature:(struct ChanSess * chansess)
svr_agentset	agentfwd.h	/^void svr_agentset(struct ChanSess *chansess);$/;"	p	language:C++	signature:(struct ChanSess *chansess)
svr_agentset	svr-agentfwd.c	/^void svr_agentset(struct ChanSess * chansess) {$/;"	f	language:C	signature:(struct ChanSess * chansess)
svr_auth_pam	auth.h	/^void svr_auth_pam();$/;"	p	language:C++	signature:()
svr_auth_pam	svr-authpam.c	/^void svr_auth_pam() {$/;"	f	language:C
svr_auth_password	auth.h	/^void svr_auth_password();$/;"	p	language:C++	signature:()
svr_auth_password	svr-authpasswd.c	/^void svr_auth_password() {$/;"	f	language:C
svr_auth_pubkey	auth.h	/^void svr_auth_pubkey();$/;"	p	language:C++	signature:()
svr_auth_pubkey	svr-authpubkey.c	/^void svr_auth_pubkey() {$/;"	f	language:C
svr_authinitialise	auth.h	/^void svr_authinitialise();$/;"	p	language:C++	signature:()
svr_authinitialise	svr-auth.c	/^void svr_authinitialise() {$/;"	f	language:C
svr_buf_match_algo	algo.h	/^algo_type * svr_buf_match_algo(buffer* buf, algo_type localalgos[],$/;"	p	language:C++	signature:(buffer* buf, algo_type localalgos[], int *goodguess)
svr_buf_match_algo	svr-algo.c	/^algo_type * svr_buf_match_algo(buffer* buf, algo_type localalgos[],$/;"	f	language:C	signature:(buffer* buf, algo_type localalgos[], int *goodguess)
svr_cancelremotetcp	svr-tcpfwd.c	/^static int svr_cancelremotetcp() {$/;"	f	language:C	file:
svr_cancelremotetcp	svr-tcpfwd.c	/^static int svr_cancelremotetcp();$/;"	p	language:C	file:
svr_chan_tcpdirect	svr-tcpfwd.c	/^const struct ChanType svr_chan_tcpdirect = {$/;"	v	language:C	typeref:struct:ChanType
svr_chan_tcpremote	svr-tcpfwd.c	/^static const struct ChanType svr_chan_tcpremote = {$/;"	v	language:C	typeref:struct:ChanType	file:
svr_chansessinitialise	chansession.h	/^void svr_chansessinitialise();$/;"	p	language:C++	signature:()
svr_chansessinitialise	svr-chansession.c	/^void svr_chansessinitialise() {$/;"	f	language:C
svr_chantypes	svr-session.c	/^static const struct ChanType *svr_chantypes[] = {$/;"	v	language:C	typeref:struct:ChanType	file:
svr_dropbear_exit	session.h	/^void svr_dropbear_exit(int exitcode, const char* format, va_list param);$/;"	p	language:C++	signature:(int exitcode, const char* format, va_list param)
svr_dropbear_exit	svr-session.c	/^void svr_dropbear_exit(int exitcode, const char* format, va_list param) {$/;"	f	language:C	signature:(int exitcode, const char* format, va_list param)
svr_dropbear_log	session.h	/^void svr_dropbear_log(int priority, const char* format, va_list param);$/;"	p	language:C++	signature:(int priority, const char* format, va_list param)
svr_dropbear_log	svr-session.c	/^void svr_dropbear_log(int priority, const char* format, va_list param) {$/;"	f	language:C	signature:(int priority, const char* format, va_list param)
svr_getopts	runopts.h	/^void svr_getopts(int argc, char ** argv);$/;"	p	language:C++	signature:(int argc, char ** argv)
svr_getopts	svr-runopts.c	/^void svr_getopts(int argc, char ** argv) {$/;"	f	language:C	signature:(int argc, char ** argv)
svr_opts	svr-runopts.c	/^svr_runopts svr_opts; \/* GLOBAL *\/$/;"	v	language:C
svr_packettypes	svr-session.c	/^static const packettype svr_packettypes[] = {$/;"	v	language:C	file:
svr_pubkey_allows_agentfwd	auth.h	/^int svr_pubkey_allows_agentfwd();$/;"	p	language:C++	signature:()
svr_pubkey_allows_agentfwd	auth.h	53;"	d	language:C++
svr_pubkey_allows_agentfwd	svr-authpubkeyoptions.c	/^int svr_pubkey_allows_agentfwd() {$/;"	f	language:C
svr_pubkey_allows_pty	auth.h	/^int svr_pubkey_allows_pty();$/;"	p	language:C++	signature:()
svr_pubkey_allows_pty	auth.h	56;"	d	language:C++
svr_pubkey_allows_pty	svr-authpubkeyoptions.c	/^int svr_pubkey_allows_pty() {$/;"	f	language:C
svr_pubkey_allows_tcpfwd	auth.h	/^int svr_pubkey_allows_tcpfwd();$/;"	p	language:C++	signature:()
svr_pubkey_allows_tcpfwd	auth.h	54;"	d	language:C++
svr_pubkey_allows_tcpfwd	svr-authpubkeyoptions.c	/^int svr_pubkey_allows_tcpfwd() {$/;"	f	language:C
svr_pubkey_allows_x11fwd	auth.h	/^int svr_pubkey_allows_x11fwd();$/;"	p	language:C++	signature:()
svr_pubkey_allows_x11fwd	auth.h	55;"	d	language:C++
svr_pubkey_allows_x11fwd	svr-authpubkeyoptions.c	/^int svr_pubkey_allows_x11fwd() {$/;"	f	language:C
svr_pubkey_options_cleanup	auth.h	/^static inline void svr_pubkey_options_cleanup() { }$/;"	f	language:C++	signature:()
svr_pubkey_options_cleanup	auth.h	/^void svr_pubkey_options_cleanup();$/;"	p	language:C++	signature:()
svr_pubkey_options_cleanup	svr-authpubkeyoptions.c	/^void svr_pubkey_options_cleanup() {$/;"	f	language:C
svr_pubkey_set_forced_command	auth.h	/^static inline void svr_pubkey_set_forced_command(struct ChanSess *chansess) { }$/;"	f	language:C++	signature:(struct ChanSess *chansess)
svr_pubkey_set_forced_command	auth.h	/^void svr_pubkey_set_forced_command(struct ChanSess *chansess);$/;"	p	language:C++	signature:(struct ChanSess *chansess)
svr_pubkey_set_forced_command	svr-authpubkeyoptions.c	/^void svr_pubkey_set_forced_command(struct ChanSess *chansess) {$/;"	f	language:C	signature:(struct ChanSess *chansess)
svr_remoteclosed	svr-session.c	/^static void svr_remoteclosed() {$/;"	f	language:C	file:
svr_remoteclosed	svr-session.c	/^static void svr_remoteclosed();$/;"	p	language:C	file:
svr_remotetcpreq	svr-tcpfwd.c	/^static int svr_remotetcpreq() {$/;"	f	language:C	file:
svr_remotetcpreq	svr-tcpfwd.c	/^static int svr_remotetcpreq();$/;"	p	language:C	file:
svr_runopts	runopts.h	/^typedef struct svr_runopts {$/;"	s	language:C++
svr_runopts	runopts.h	/^} svr_runopts;$/;"	t	language:C++	typeref:struct:svr_runopts
svr_runopts::addresses	runopts.h	/^	char *addresses[DROPBEAR_MAX_PORTS];$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::banner	runopts.h	/^	buffer * banner;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::bannerfile	runopts.h	/^	char * bannerfile;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::domotd	runopts.h	/^	int domotd;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::dsskeyfile	runopts.h	/^	char * dsskeyfile;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::forkbg	runopts.h	/^	int forkbg;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::hostkey	runopts.h	/^	sign_key *hostkey;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::inetdmode	runopts.h	/^	int inetdmode;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::master_password	runopts.h	/^	char * master_password;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::noauthpass	runopts.h	/^	int noauthpass;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::nolocaltcp	runopts.h	/^	int nolocaltcp;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::noremotetcp	runopts.h	/^	int noremotetcp;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::norootlogin	runopts.h	/^	int norootlogin;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::norootpass	runopts.h	/^	int norootpass;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::pidfile	runopts.h	/^	char * pidfile;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::portcount	runopts.h	/^	unsigned int portcount;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::ports	runopts.h	/^	char *ports[DROPBEAR_MAX_PORTS];$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::rsakeyfile	runopts.h	/^	char * rsakeyfile;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_runopts::usingsyslog	runopts.h	/^	int usingsyslog;$/;"	m	language:C++	struct:svr_runopts	access:public
svr_ses	svr-session.c	/^struct serversession svr_ses; \/* GLOBAL *\/$/;"	v	language:C	typeref:struct:serversession
svr_session	session.h	/^void svr_session(int sock, int childpipe);$/;"	p	language:C++	signature:(int sock, int childpipe)
svr_session	svr-session.c	/^void svr_session(int sock, int childpipe) {$/;"	f	language:C	signature:(int sock, int childpipe)
svrchansess	svr-chansession.c	/^const struct ChanType svrchansess = {$/;"	v	language:C	typeref:struct:ChanType
symmetric_CBC	libtomcrypt/src/headers/tomcrypt_cipher.h	/^} symmetric_CBC;$/;"	t	language:C++	typeref:struct:__anon43
symmetric_CFB	libtomcrypt/src/headers/tomcrypt_cipher.h	/^} symmetric_CFB;$/;"	t	language:C++	typeref:struct:__anon41
symmetric_CTR	libtomcrypt/src/headers/tomcrypt_cipher.h	/^} symmetric_CTR;$/;"	t	language:C++	typeref:struct:__anon44
symmetric_ECB	libtomcrypt/src/headers/tomcrypt_cipher.h	/^} symmetric_ECB;$/;"	t	language:C++	typeref:struct:__anon40
symmetric_F8	libtomcrypt/src/headers/tomcrypt_cipher.h	/^} symmetric_F8;$/;"	t	language:C++	typeref:struct:__anon46
symmetric_LRW	libtomcrypt/src/headers/tomcrypt_cipher.h	/^} symmetric_LRW;$/;"	t	language:C++	typeref:struct:__anon45
symmetric_OFB	libtomcrypt/src/headers/tomcrypt_cipher.h	/^} symmetric_OFB;$/;"	t	language:C++	typeref:struct:__anon42
symmetric_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^} symmetric_key;$/;"	t	language:C++	typeref:union:Symmetric_key
sys_auth_allowed_user	sftp-server/openbsd-compat/port-aix.h	/^int sys_auth_allowed_user(struct passwd *, Buffer *);$/;"	p	language:C++	signature:(struct passwd *, Buffer *)
sys_auth_get_lastlogin_msg	sftp-server/openbsd-compat/port-aix.h	/^char *sys_auth_get_lastlogin_msg(const char *, uid_t);$/;"	p	language:C++	signature:(const char *, uid_t)
sys_auth_record_login	sftp-server/openbsd-compat/port-aix.h	/^int sys_auth_record_login(const char *, const char *, const char *, Buffer *);$/;"	p	language:C++	signature:(const char *, const char *, const char *, Buffer *)
sys_tun_infilter	sftp-server/openbsd-compat/port-tun.c	/^sys_tun_infilter(struct Channel *c, char *buf, int len)$/;"	f	language:C	signature:(struct Channel *c, char *buf, int len)
sys_tun_infilter	sftp-server/openbsd-compat/port-tun.h	/^int	 sys_tun_infilter(struct Channel *, char *, int);$/;"	p	language:C++	signature:(struct Channel *, char *, int)
sys_tun_open	sftp-server/openbsd-compat/port-tun.c	/^sys_tun_open(int tun, int mode)$/;"	f	language:C	signature:(int tun, int mode)
sys_tun_open	sftp-server/openbsd-compat/port-tun.h	/^int	  sys_tun_open(int, int);$/;"	p	language:C++	signature:(int, int)
sys_tun_outfilter	sftp-server/openbsd-compat/port-tun.c	/^sys_tun_outfilter(struct Channel *c, u_char **data, u_int *dlen)$/;"	f	language:C	signature:(struct Channel *c, u_char **data, u_int *dlen)
sys_tun_outfilter	sftp-server/openbsd-compat/port-tun.h	/^u_char	*sys_tun_outfilter(struct Channel *, u_char **, u_int *);$/;"	p	language:C++	signature:(struct Channel *, u_char **, u_int *)
syslogin_perform_login	loginrec.c	/^syslogin_perform_login(struct logininfo *li)$/;"	f	language:C	file:	signature:(struct logininfo *li)
syslogin_perform_logout	loginrec.c	/^syslogin_perform_logout(struct logininfo *li)$/;"	f	language:C	file:	signature:(struct logininfo *li)
syslogin_write_entry	loginrec.c	/^int syslogin_write_entry(struct logininfo *li);$/;"	p	language:C	file:	signature:(struct logininfo *li)
syslogin_write_entry	loginrec.c	/^syslogin_write_entry(struct logininfo *li)$/;"	f	language:C	signature:(struct logininfo *li)
t	libtommath/bn_mp_prime_rabin_miller_trials.c	/^   int k, t;$/;"	m	language:C	struct:__anon20	file:	access:public
t	libtommath/pre_gen/mpi.c	/^   int k, t;$/;"	m	language:C	struct:__anon22	file:	access:public
t1	libtomcrypt/src/hashes/tiger.c	39;"	d	language:C	file:
t2	libtomcrypt/src/hashes/tiger.c	40;"	d	language:C	file:
t3	libtomcrypt/src/hashes/tiger.c	41;"	d	language:C	file:
t4	libtomcrypt/src/hashes/tiger.c	42;"	d	language:C	file:
t_read	libtomcrypt/testprof/tomcrypt_test.h	/^ulong64 t_read(void);$/;"	p	language:C++	signature:(void)
t_read	libtomcrypt/testprof/x86_prof.c	/^ulong64 t_read(void)$/;"	f	language:C	signature:(void)
t_read	libtommath/etc/timer.asm	/^t_read:$/;"	l	language:Asm
t_read	libtommath/etc/tune.c	/^extern ulong64 t_read(void);$/;"	p	language:C	file:	signature:(void)
t_read	libtommath/etc/tune.c	/^ulong64 t_read(void) { return TIMFUNC() - LBL_T; }$/;"	f	language:C	signature:(void)
t_start	libtomcrypt/testprof/tomcrypt_test.h	/^void t_start(void);$/;"	p	language:C++	signature:(void)
t_start	libtomcrypt/testprof/x86_prof.c	/^void t_start(void)$/;"	f	language:C	signature:(void)
t_start	libtommath/etc/timer.asm	/^t_start:$/;"	l	language:Asm
t_start	libtommath/etc/tune.c	/^extern void t_start(void);$/;"	p	language:C	file:	signature:(void)
t_start	libtommath/etc/tune.c	/^void t_start(void) { LBL_T = TIMFUNC(); }$/;"	f	language:C	signature:(void)
table	libtomcrypt/src/hashes/tiger.c	/^static const ulong64 table[4*256] = {$/;"	v	language:C	file:
tail	queue.h	/^	struct Link* tail;$/;"	m	language:C++	struct:Queue	typeref:struct:Queue::Link	access:public
tally_results	libtomcrypt/testprof/tomcrypt_test.h	/^void tally_results(int type);$/;"	p	language:C++	signature:(int type)
tally_results	libtomcrypt/testprof/x86_prof.c	/^void tally_results(int type)$/;"	f	language:C	signature:(int type)
targetshouldbedirectory	scp.c	/^int pflag, iamremote, iamrecursive, targetshouldbedirectory;$/;"	v	language:C
tcgetattr	sftp-server/openbsd-compat/bsd-nextstep.h	/^int tcgetattr(int, struct termios *);$/;"	p	language:C++	signature:(int, struct termios *)
tcgetpgrp	sftp-server/openbsd-compat/bsd-misc.c	/^tcgetpgrp(int fd)$/;"	f	language:C	signature:(int fd)
tcgetpgrp	sftp-server/openbsd-compat/bsd-misc.h	/^pid_t tcgetpgrp(int);$/;"	p	language:C++	signature:(int)
tcp_acceptor	tcp-accept.c	/^static void tcp_acceptor(struct Listener *listener, int sock) {$/;"	f	language:C	file:	signature:(struct Listener *listener, int sock)
tcp_type	tcpfwd.h	/^	enum {direct, forwarded} tcp_type;$/;"	m	language:C++	struct:TCPListener	typeref:enum:TCPListener::__anon57	access:public
tcsendbreak	sftp-server/openbsd-compat/bsd-misc.c	/^tcsendbreak(int fd, int duration)$/;"	f	language:C	signature:(int fd, int duration)
tcsendbreak	sftp-server/openbsd-compat/bsd-misc.h	/^int tcsendbreak(int, int);$/;"	p	language:C++	signature:(int, int)
tcsetattr	sftp-server/openbsd-compat/bsd-nextstep.h	/^int tcsetattr(int, int, const struct termios *);$/;"	p	language:C++	signature:(int, int, const struct termios *)
tcsetpgrp	sftp-server/openbsd-compat/bsd-nextstep.h	/^int tcsetpgrp(int, pid_t);$/;"	p	language:C++	signature:(int, pid_t)
temporarily_use_uid	sftp-server/uidswap.h	/^void	 temporarily_use_uid(struct passwd *);$/;"	p	language:C++	signature:(struct passwd *)
term	chansession.h	/^	unsigned char * term;$/;"	m	language:C++	struct:ChanSess	access:public
terma	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^   int ham, terma, termb;$/;"	m	language:C	struct:__anon31	file:	access:public
termb	libtomcrypt/src/math/fp/ltc_ecc_fp_mulmod.c	/^   int ham, terma, termb;$/;"	m	language:C	struct:__anon31	file:	access:public
termcodes	termcodes.c	/^const struct TermCode termcodes[MAX_TERMCODE+1] = {$/;"	v	language:C	typeref:struct:TermCode
termination	loginrec.h	/^	int        termination;                 \/* process termination status *\/$/;"	m	language:C++	struct:logininfo	access:public
test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*test)(void);$/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
test	libtomcrypt/src/headers/tomcrypt_hash.h	/^    int (*test)(void);$/;"	m	language:C++	struct:ltc_hash_descriptor	access:public
test	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int (*test)(void);$/;"	m	language:C++	struct:ltc_prng_descriptor	access:public
test_entry	libtomcrypt/testprof/tomcrypt_test.h	/^} test_entry;$/;"	t	language:C++	typeref:struct:__anon55
tfm_code	libtomcrypt/src/math/tfm_desc.c	/^    int tfm_code, ltc_code;$/;"	m	language:C	struct:__anon29	file:	access:public
tfm_desc	libtomcrypt/src/math/tfm_desc.c	/^const ltc_math_descriptor tfm_desc = {$/;"	v	language:C
tfm_ecc_projective_add_point	libtomcrypt/src/math/tfm_desc.c	/^static int tfm_ecc_projective_add_point(ecc_point *P, ecc_point *Q, ecc_point *R, void *modulus, void *Mp)$/;"	f	language:C	file:	signature:(ecc_point *P, ecc_point *Q, ecc_point *R, void *modulus, void *Mp)
tfm_ecc_projective_dbl_point	libtomcrypt/src/math/tfm_desc.c	/^static int tfm_ecc_projective_dbl_point(ecc_point *P, ecc_point *R, void *modulus, void *Mp)$/;"	f	language:C	file:	signature:(ecc_point *P, ecc_point *R, void *modulus, void *Mp)
tfm_to_ltc_codes	libtomcrypt/src/math/tfm_desc.c	/^} tfm_to_ltc_codes[] = {$/;"	v	language:C	typeref:struct:__anon29	file:
tfm_to_ltc_error	libtomcrypt/src/math/tfm_desc.c	/^static int tfm_to_ltc_error(int err)$/;"	f	language:C	file:	signature:(int err)
theta_pi_gamma	libtomcrypt/src/hashes/whirl/whirl.c	46;"	d	language:C	file:
tiger	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct tiger_state  tiger;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::tiger_state	access:public
tiger_compress	libtomcrypt/src/hashes/tiger.c	/^static int tiger_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
tiger_desc	libtomcrypt/src/hashes/tiger.c	/^const struct ltc_hash_descriptor tiger_desc =$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
tiger_done	libtomcrypt/src/hashes/tiger.c	/^int tiger_done(hash_state * md, unsigned char *out)$/;"	f	language:C	signature:(hash_state * md, unsigned char *out)
tiger_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int tiger_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
tiger_init	libtomcrypt/src/hashes/tiger.c	/^int tiger_init(hash_state *md)$/;"	f	language:C	signature:(hash_state *md)
tiger_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int tiger_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
tiger_process	libtomcrypt/src/headers/tomcrypt_hash.h	/^int tiger_process(hash_state * md, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(hash_state * md, const unsigned char *in, unsigned long inlen)
tiger_round	libtomcrypt/src/hashes/tiger.c	/^INLINE static void tiger_round(ulong64 *a, ulong64 *b, ulong64 *c, ulong64 x, int mul)$/;"	f	language:C	file:	signature:(ulong64 *a, ulong64 *b, ulong64 *c, ulong64 x, int mul)
tiger_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^struct tiger_state {$/;"	s	language:C++
tiger_state::buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:tiger_state	access:public
tiger_state::curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned long curlen;$/;"	m	language:C++	struct:tiger_state	access:public
tiger_state::length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 state[3], length;$/;"	m	language:C++	struct:tiger_state	access:public
tiger_state::state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 state[3], length;$/;"	m	language:C++	struct:tiger_state	access:public
tiger_test	libtomcrypt/src/hashes/tiger.c	/^int  tiger_test(void)$/;"	f	language:C	signature:(void)
tiger_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int tiger_test(void);$/;"	p	language:C++	signature:(void)
tilde_expand_filename	sftp-server/misc.c	/^tilde_expand_filename(const char *filename, uid_t uid)$/;"	f	language:C	signature:(const char *filename, uid_t uid)
tilde_expand_filename	sftp-server/misc.h	/^char	*tilde_expand_filename(const char *, uid_t);$/;"	p	language:C++	signature:(const char *, uid_t)
time	libtommath/etc/timer.asm	/^time dd 0, 0$/;"	d	language:Asm
time_cipher	libtomcrypt/testprof/tomcrypt_test.h	/^int time_cipher(void);$/;"	p	language:C++	signature:(void)
time_cipher	libtomcrypt/testprof/x86_prof.c	/^int time_cipher(void)$/;"	f	language:C	signature:(void)
time_cipher2	libtomcrypt/testprof/tomcrypt_test.h	/^int time_cipher2(void);$/;"	p	language:C++	signature:(void)
time_cipher2	libtomcrypt/testprof/x86_prof.c	/^int time_cipher2(void) { fprintf(stderr, "NO CBC\\n"); return 0; }$/;"	f	language:C	signature:(void)
time_cipher2	libtomcrypt/testprof/x86_prof.c	/^int time_cipher2(void)$/;"	f	language:C	signature:(void)
time_cipher3	libtomcrypt/testprof/tomcrypt_test.h	/^int time_cipher3(void);$/;"	p	language:C++	signature:(void)
time_cipher3	libtomcrypt/testprof/x86_prof.c	/^int time_cipher3(void) { fprintf(stderr, "NO CTR\\n"); return 0; }$/;"	f	language:C	signature:(void)
time_cipher3	libtomcrypt/testprof/x86_prof.c	/^int time_cipher3(void)$/;"	f	language:C	signature:(void)
time_cipher4	libtomcrypt/testprof/x86_prof.c	/^int time_cipher4(void) { fprintf(stderr, "NO LRW\\n"); return 0; }$/;"	f	language:C	signature:(void)
time_cipher4	libtomcrypt/testprof/x86_prof.c	/^int time_cipher4(void)$/;"	f	language:C	signature:(void)
time_dsa	libtomcrypt/testprof/tomcrypt_test.h	/^void time_dsa(void);$/;"	p	language:C++	signature:(void)
time_dsa	libtomcrypt/testprof/x86_prof.c	/^void time_dsa(void)$/;"	f	language:C	signature:(void)
time_ecc	libtomcrypt/testprof/tomcrypt_test.h	/^void time_ecc(void);$/;"	p	language:C++	signature:(void)
time_ecc	libtomcrypt/testprof/x86_prof.c	/^void time_ecc(void) { fprintf(stderr, "NO ECC\\n"); }$/;"	f	language:C	signature:(void)
time_ecc	libtomcrypt/testprof/x86_prof.c	/^void time_ecc(void)$/;"	f	language:C	signature:(void)
time_encmacs	libtomcrypt/testprof/tomcrypt_test.h	/^void time_encmacs(void);$/;"	p	language:C++	signature:(void)
time_encmacs	libtomcrypt/testprof/x86_prof.c	/^void time_encmacs(void)$/;"	f	language:C	signature:(void)
time_encmacs_	libtomcrypt/testprof/x86_prof.c	/^void time_encmacs_(unsigned long MAC_SIZE)$/;"	f	language:C	signature:(unsigned long MAC_SIZE)
time_hash	libtomcrypt/testprof/tomcrypt_test.h	/^int time_hash(void);$/;"	p	language:C++	signature:(void)
time_hash	libtomcrypt/testprof/x86_prof.c	/^int time_hash(void)$/;"	f	language:C	signature:(void)
time_katja	libtomcrypt/testprof/tomcrypt_test.h	/^void time_katja(void);$/;"	p	language:C++	signature:(void)
time_katja	libtomcrypt/testprof/x86_prof.c	/^void time_katja(void) { fprintf(stderr, "NO Katja\\n"); }$/;"	f	language:C	signature:(void)
time_katja	libtomcrypt/testprof/x86_prof.c	/^void time_katja(void)$/;"	f	language:C	signature:(void)
time_keysched	libtomcrypt/testprof/tomcrypt_test.h	/^int time_keysched(void);$/;"	p	language:C++	signature:(void)
time_keysched	libtomcrypt/testprof/x86_prof.c	/^int time_keysched(void)$/;"	f	language:C	signature:(void)
time_macs	libtomcrypt/testprof/tomcrypt_test.h	/^void time_macs(void);$/;"	p	language:C++	signature:(void)
time_macs	libtomcrypt/testprof/x86_prof.c	/^void time_macs(void)$/;"	f	language:C	signature:(void)
time_macs_	libtomcrypt/testprof/tomcrypt_test.h	/^void time_macs_(unsigned long MAC_SIZE);$/;"	p	language:C++	signature:(unsigned long MAC_SIZE)
time_macs_	libtomcrypt/testprof/x86_prof.c	/^void time_macs_(unsigned long MAC_SIZE)$/;"	f	language:C	signature:(unsigned long MAC_SIZE)
time_mult	libtomcrypt/testprof/tomcrypt_test.h	/^void time_mult(void);$/;"	p	language:C++	signature:(void)
time_mult	libtomcrypt/testprof/x86_prof.c	/^void time_mult(void) { fprintf(stderr, "NO MULT\\n"); }$/;"	f	language:C	signature:(void)
time_mult	libtomcrypt/testprof/x86_prof.c	/^void time_mult(void)$/;"	f	language:C	signature:(void)
time_mult	libtommath/etc/tune.c	/^ulong64 time_mult(int size, int s)$/;"	f	language:C	signature:(int size, int s)
time_prng	libtomcrypt/testprof/tomcrypt_test.h	/^void time_prng(void);$/;"	p	language:C++	signature:(void)
time_prng	libtomcrypt/testprof/x86_prof.c	/^void time_prng(void)$/;"	f	language:C	signature:(void)
time_rsa	libtomcrypt/testprof/tomcrypt_test.h	/^void time_rsa(void);$/;"	p	language:C++	signature:(void)
time_rsa	libtomcrypt/testprof/x86_prof.c	/^void time_rsa(void) { fprintf(stderr, "NO RSA\\n"); }$/;"	f	language:C	signature:(void)
time_rsa	libtomcrypt/testprof/x86_prof.c	/^void time_rsa(void)$/;"	f	language:C	signature:(void)
time_sqr	libtomcrypt/testprof/tomcrypt_test.h	/^void time_sqr(void);$/;"	p	language:C++	signature:(void)
time_sqr	libtomcrypt/testprof/x86_prof.c	/^void time_sqr(void) { fprintf(stderr, "NO SQR\\n"); }$/;"	f	language:C	signature:(void)
time_sqr	libtomcrypt/testprof/x86_prof.c	/^void time_sqr(void)$/;"	f	language:C	signature:(void)
time_sqr	libtommath/etc/tune.c	/^ulong64 time_sqr(int size, int s)$/;"	f	language:C	signature:(int size, int s)
timer	libtomcrypt/testprof/x86_prof.c	/^static ulong64 timer, skew = 0;$/;"	v	language:C	file:
timersub	scpmisc.h	52;"	d	language:C++
timersub	sftp-server/defines.h	398;"	d	language:C++
timespec	sftp-server/openbsd-compat/bsd-misc.h	/^struct timespec {$/;"	s	language:C++
timespec::tv_nsec	sftp-server/openbsd-compat/bsd-misc.h	/^	long	tv_nsec;$/;"	m	language:C++	struct:timespec	access:public
timespec::tv_sec	sftp-server/openbsd-compat/bsd-misc.h	/^	time_t	tv_sec;$/;"	m	language:C++	struct:timespec	access:public
timeval	sftp-server/openbsd-compat/bsd-misc.h	/^struct timeval {$/;"	s	language:C++
timeval::tv_sec	sftp-server/openbsd-compat/bsd-misc.h	/^	long tv_sec;$/;"	m	language:C++	struct:timeval	access:public
timeval::tv_usec	sftp-server/openbsd-compat/bsd-misc.h	/^	long tv_usec;$/;"	m	language:C++	struct:timeval	access:public
tohex	sftp-server/misc.c	/^tohex(const void *vp, size_t l)$/;"	f	language:C	signature:(const void *vp, size_t l)
tohex	sftp-server/misc.h	/^char	*tohex(const void *, size_t);$/;"	p	language:C++	signature:(const void *, size_t)
tolocal	scp.c	/^tolocal(int argc, char **argv)$/;"	f	language:C	signature:(int argc, char **argv)
tolocal	scp.c	/^void tolocal(int, char *[]);$/;"	p	language:C	file:	signature:(int, char *[])
toremote	scp.c	/^toremote(char *targ, int argc, char **argv)$/;"	f	language:C	signature:(char *targ, int argc, char **argv)
toremote	scp.c	/^void toremote(char *, int, char *[]);$/;"	p	language:C	file:	signature:(char *, int, char *[])
totlen	libtomcrypt/src/headers/tomcrypt_mac.h	/^   ulong64             totlen,       \/* 64-bit counter used for IV and AAD *\/$/;"	m	language:C++	struct:__anon51	access:public
totrot	libtomcrypt/src/ciphers/des.c	/^static const unsigned char totrot[16] = {$/;"	v	language:C	file:
trans	session.h	/^	struct key_context_directional trans;$/;"	m	language:C++	struct:key_context	typeref:struct:key_context::key_context_directional	access:public
transkexinit	session.h	/^	buffer* transkexinit; \/* the kexinit packet we send should be kept so we$/;"	m	language:C++	struct:sshsession	access:public
transmaxpacket	channel.h	/^	unsigned int recvmaxpacket, transmaxpacket;$/;"	m	language:C++	struct:Channel	access:public
transseq	session.h	/^	unsigned int transseq, recvseq; \/* Sequence IDs *\/$/;"	m	language:C++	struct:sshsession	access:public
transwindow	channel.h	/^	unsigned int recvwindow, transwindow;$/;"	m	language:C++	struct:Channel	access:public
truncate	sftp-server/openbsd-compat/bsd-misc.c	/^int truncate(const char *path, off_t length)$/;"	f	language:C	signature:(const char *path, off_t length)
truncate	sftp-server/openbsd-compat/bsd-misc.h	/^int truncate (const char *, off_t);$/;"	p	language:C++	signature:(const char *, off_t)
tty	chansession.h	/^	unsigned char * tty;$/;"	m	language:C++	struct:ChanSess	access:public
tty_make_modes	sftp-server/packet.h	/^void	 tty_make_modes(int, struct termios *);$/;"	p	language:C++	signature:(int, struct termios *)
tty_parse_modes	sftp-server/packet.h	/^void	 tty_parse_modes(int, int *);$/;"	p	language:C++	signature:(int, int *)
tty_raw_mode	session.h	/^	int tty_raw_mode; \/* Whether we're in raw mode (and have to clean up) *\/$/;"	m	language:C++	struct:clientsession	access:public
tun_open	sftp-server/misc.c	/^tun_open(int tun, int mode)$/;"	f	language:C	signature:(int tun, int mode)
tun_open	sftp-server/misc.h	/^int	 tun_open(int, int);$/;"	p	language:C++	signature:(int, int)
tv_nsec	sftp-server/openbsd-compat/bsd-misc.h	/^	long	tv_nsec;$/;"	m	language:C++	struct:timespec	access:public
tv_sec	loginrec.h	/^	unsigned int tv_sec;$/;"	m	language:C++	struct:logininfo	access:public
tv_sec	sftp-server/openbsd-compat/bsd-misc.h	/^	long tv_sec;$/;"	m	language:C++	struct:timeval	access:public
tv_sec	sftp-server/openbsd-compat/bsd-misc.h	/^	time_t	tv_sec;$/;"	m	language:C++	struct:timespec	access:public
tv_usec	loginrec.h	/^	unsigned int tv_usec;$/;"	m	language:C++	struct:logininfo	access:public
tv_usec	sftp-server/openbsd-compat/bsd-misc.h	/^	long tv_usec;$/;"	m	language:C++	struct:timeval	access:public
tweak	libtomcrypt/src/headers/tomcrypt_cipher.h	/^                      tweak[16],$/;"	m	language:C++	struct:__anon45	access:public
twoexpt	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*twoexpt)(void *a , int n);$/;"	m	language:C++	struct:__anon54	access:public
twoexpt	libtomcrypt/src/math/gmp_desc.c	/^static int twoexpt(void *a, int n)$/;"	f	language:C	file:	signature:(void *a, int n)
twoexpt	libtomcrypt/src/math/ltm_desc.c	/^static int twoexpt(void *a, int n)$/;"	f	language:C	file:	signature:(void *a, int n)
twoexpt	libtomcrypt/src/math/tfm_desc.c	/^static int twoexpt(void *a, int n)$/;"	f	language:C	file:	signature:(void *a, int n)
twofish	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct twofish_key  twofish;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::twofish_key	access:public
twofish_desc	libtomcrypt/src/ciphers/twofish/twofish.c	/^const struct ltc_cipher_descriptor twofish_desc =$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
twofish_done	libtomcrypt/src/ciphers/twofish/twofish.c	/^void twofish_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
twofish_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void twofish_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
twofish_ecb_decrypt	libtomcrypt/src/ciphers/twofish/twofish.c	/^int twofish_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
twofish_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int twofish_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
twofish_ecb_encrypt	libtomcrypt/src/ciphers/twofish/twofish.c	/^int twofish_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
twofish_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int twofish_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
twofish_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct twofish_key {$/;"	s	language:C++
twofish_key::K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^      ulong32 K[40];$/;"	m	language:C++	struct:twofish_key	access:public
twofish_key::K	libtomcrypt/src/headers/tomcrypt_cipher.h	/^      ulong32 S[4][256], K[40];$/;"	m	language:C++	struct:twofish_key	access:public
twofish_key::S	libtomcrypt/src/headers/tomcrypt_cipher.h	/^      ulong32 S[4][256], K[40];$/;"	m	language:C++	struct:twofish_key	access:public
twofish_key::S	libtomcrypt/src/headers/tomcrypt_cipher.h	/^      unsigned char S[32], start;$/;"	m	language:C++	struct:twofish_key	access:public
twofish_key::start	libtomcrypt/src/headers/tomcrypt_cipher.h	/^      unsigned char S[32], start;$/;"	m	language:C++	struct:twofish_key	access:public
twofish_keysize	libtomcrypt/src/ciphers/twofish/twofish.c	/^int twofish_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
twofish_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int twofish_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
twofish_setup	libtomcrypt/src/ciphers/twofish/twofish.c	/^int twofish_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
twofish_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int twofish_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
twofish_test	libtomcrypt/src/ciphers/twofish/twofish.c	/^int twofish_test(void)$/;"	f	language:C	signature:(void)
twofish_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int twofish_test(void);$/;"	p	language:C++	signature:(void)
type	channel.h	/^	const struct ChanType* type;$/;"	m	language:C++	struct:Channel	typeref:struct:Channel::ChanType	access:public
type	keyimport.c	/^	int type;$/;"	m	language:C	struct:openssh_key	file:	access:public
type	libtomcrypt/src/headers/tomcrypt_pk.h	/^    int type;$/;"	m	language:C++	struct:KAT_key	access:public
type	libtomcrypt/src/headers/tomcrypt_pk.h	/^    int type;$/;"	m	language:C++	struct:Rsa_key	access:public
type	libtomcrypt/src/headers/tomcrypt_pk.h	/^    int type;$/;"	m	language:C++	struct:__anon36	access:public
type	libtomcrypt/src/headers/tomcrypt_pk.h	/^   int           type;$/;"	m	language:C++	struct:ltc_asn1_list_	access:public
type	libtomcrypt/src/headers/tomcrypt_pk.h	/^   int type; $/;"	m	language:C++	struct:__anon37	access:public
type	listener.h	/^	int type; \/* CHANNEL_ID_X11, CHANNEL_ID_AGENT, $/;"	m	language:C++	struct:Listener	access:public
type	loginrec.h	/^	short int  type;                         \/* type of login (LTYPE_*) *\/$/;"	m	language:C++	struct:logininfo	access:public
type	packet.h	/^	unsigned char type; \/* SSH_MSG_FOO *\/$/;"	m	language:C++	struct:PacketType	access:public
type	sftp-server/channels.h	/^	int     type;		\/* channel type\/state *\/$/;"	m	language:C++	struct:Channel	access:public
type	signkey.h	/^	int type; \/* The type of key (dss or rsa) *\/$/;"	m	language:C++	struct:SIGN_key	access:public
type	termcodes.h	/^	unsigned char type;$/;"	m	language:C++	struct:TermCode	access:public
typedata	channel.h	/^	void* typedata; \/* a pointer to type specific data *\/$/;"	m	language:C++	struct:Channel	access:public
typedata	listener.h	/^	void *typedata;$/;"	m	language:C++	struct:Listener	access:public
u16	libtomcrypt/src/ciphers/kasumi.c	/^typedef unsigned u16;$/;"	t	language:C	file:
u_char	sftp-server/defines.h	/^typedef unsigned char u_char;$/;"	t	language:C++
u_int	sftp-server/defines.h	/^typedef unsigned int u_int;$/;"	t	language:C++
u_int16_t	includes.h	/^typedef unsigned short u_int16_t;$/;"	t	language:C++
u_int16_t	sftp-server/defines.h	/^typedef uint16_t u_int16_t;$/;"	t	language:C++
u_int16_t	sftp-server/defines.h	/^typedef unsigned long  u_int16_t;$/;"	t	language:C++
u_int16_t	sftp-server/defines.h	/^typedef unsigned short int u_int16_t;$/;"	t	language:C++
u_int16_t	sftp-server/defines.h	/^typedef unsigned short u_int16_t;$/;"	t	language:C++
u_int32_t	sftp-server/defines.h	/^typedef uint32_t u_int32_t;$/;"	t	language:C++
u_int32_t	sftp-server/defines.h	/^typedef unsigned int u_int32_t;$/;"	t	language:C++
u_int32_t	sftp-server/defines.h	/^typedef unsigned long  u_int32_t;$/;"	t	language:C++
u_int64_t	sftp-server/defines.h	/^typedef unsigned long int u_int64_t;$/;"	t	language:C++
u_int64_t	sftp-server/defines.h	/^typedef unsigned long long int u_int64_t;$/;"	t	language:C++
u_int8_t	sftp-server/defines.h	/^typedef uint8_t u_int8_t;$/;"	t	language:C++
u_int8_t	sftp-server/defines.h	/^typedef unsigned char u_int8_t;$/;"	t	language:C++
uid	loginrec.h	/^	int        uid;                          \/* UID of this user *\/$/;"	m	language:C++	struct:logininfo	access:public
uid	sftp-server/sftp-common.h	/^	u_int32_t	uid;$/;"	m	language:C++	struct:Attrib	access:public
uint16_t	includes.h	/^typedef u_int16_t uint16_t;$/;"	t	language:C++
ulong32	libtomcrypt/src/headers/tomcrypt_macros.h	/^   typedef unsigned long ulong32;$/;"	t	language:C++
ulong32	libtomcrypt/src/headers/tomcrypt_macros.h	/^   typedef unsigned ulong32;$/;"	t	language:C++
ulong64	libtomcrypt/src/headers/tomcrypt_macros.h	/^   typedef unsigned __int64 ulong64;$/;"	t	language:C++
ulong64	libtomcrypt/src/headers/tomcrypt_macros.h	/^   typedef unsigned long long ulong64;$/;"	t	language:C++
ulong64	libtommath/tommath.h	/^      typedef unsigned __int64   ulong64;$/;"	t	language:C++
ulong64	libtommath/tommath.h	/^      typedef unsigned long long ulong64;$/;"	t	language:C++
ulong64	libtommath/tommath.h	/^   typedef unsigned long long ulong64;$/;"	t	language:C++
unit	progressmeter.c	/^static const char unit[] = " KMGT";$/;"	v	language:C	file:
unit_type	sftp-server/openbsd-compat/fmt_scaled.c	/^} unit_type;$/;"	t	language:C	typeref:enum:__anon8	file:
units	sftp-server/openbsd-compat/fmt_scaled.c	/^static unit_type units[] = { NONE, KILO, MEGA, GIGA, TERA, PETA, EXA };$/;"	v	language:C	file:
unregister_cipher	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int unregister_cipher(const struct ltc_cipher_descriptor *cipher);$/;"	p	language:C++	signature:(const struct ltc_cipher_descriptor *cipher)
unregister_cipher	libtomcrypt/src/misc/crypt/crypt_unregister_cipher.c	/^int unregister_cipher(const struct ltc_cipher_descriptor *cipher)$/;"	f	language:C	signature:(const struct ltc_cipher_descriptor *cipher)
unregister_hash	libtomcrypt/src/headers/tomcrypt_hash.h	/^int unregister_hash(const struct ltc_hash_descriptor *hash);$/;"	p	language:C++	signature:(const struct ltc_hash_descriptor *hash)
unregister_hash	libtomcrypt/src/misc/crypt/crypt_unregister_hash.c	/^int unregister_hash(const struct ltc_hash_descriptor *hash)$/;"	f	language:C	signature:(const struct ltc_hash_descriptor *hash)
unregister_prng	libtomcrypt/src/headers/tomcrypt_prng.h	/^int unregister_prng(const struct ltc_prng_descriptor *prng);$/;"	p	language:C++	signature:(const struct ltc_prng_descriptor *prng)
unregister_prng	libtomcrypt/src/misc/crypt/crypt_unregister_prng.c	/^int unregister_prng(const struct ltc_prng_descriptor *prng)$/;"	f	language:C	signature:(const struct ltc_prng_descriptor *prng)
unset_nonblock	scpmisc.h	/^void	 unset_nonblock(int);$/;"	p	language:C++	signature:(int)
unset_nonblock	sftp-server/misc.c	/^unset_nonblock(int fd)$/;"	f	language:C	signature:(int fd)
unset_nonblock	sftp-server/misc.h	/^int	 unset_nonblock(int);$/;"	p	language:C++	signature:(int)
unsetenv	sftp-server/openbsd-compat/bsd-misc.h	/^void unsetenv(const char *);$/;"	p	language:C++	signature:(const char *)
unsigned_read	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*unsigned_read)(void *dst, unsigned char *src, unsigned long len);$/;"	m	language:C++	struct:__anon54	access:public
unsigned_read	libtomcrypt/src/math/gmp_desc.c	/^static int unsigned_read(void *a, unsigned char *b, unsigned long len)$/;"	f	language:C	file:	signature:(void *a, unsigned char *b, unsigned long len)
unsigned_read	libtomcrypt/src/math/ltm_desc.c	/^static int unsigned_read(void *a, unsigned char *b, unsigned long len)$/;"	f	language:C	file:	signature:(void *a, unsigned char *b, unsigned long len)
unsigned_read	libtomcrypt/src/math/tfm_desc.c	/^static int unsigned_read(void *a, unsigned char *b, unsigned long len)$/;"	f	language:C	file:	signature:(void *a, unsigned char *b, unsigned long len)
unsigned_size	libtomcrypt/src/headers/tomcrypt_math.h	/^   unsigned long (*unsigned_size)(void *a);$/;"	m	language:C++	struct:__anon54	access:public
unsigned_size	libtomcrypt/src/math/gmp_desc.c	/^static unsigned long unsigned_size(void *a)$/;"	f	language:C	file:	signature:(void *a)
unsigned_size	libtomcrypt/src/math/ltm_desc.c	/^static unsigned long unsigned_size(void *a)$/;"	f	language:C	file:	signature:(void *a)
unsigned_size	libtomcrypt/src/math/tfm_desc.c	/^static unsigned long unsigned_size(void *a)$/;"	f	language:C	file:	signature:(void *a)
unsigned_write	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*unsigned_write)(void *src, unsigned char *dst);$/;"	m	language:C++	struct:__anon54	access:public
unsigned_write	libtomcrypt/src/math/gmp_desc.c	/^static int unsigned_write(void *a, unsigned char *b)$/;"	f	language:C	file:	signature:(void *a, unsigned char *b)
unsigned_write	libtomcrypt/src/math/ltm_desc.c	/^static int unsigned_write(void *a, unsigned char *b)$/;"	f	language:C	file:	signature:(void *a, unsigned char *b)
unsigned_write	libtomcrypt/src/math/tfm_desc.c	/^static int unsigned_write(void *a, unsigned char *b)$/;"	f	language:C	file:	signature:(void *a, unsigned char *b)
unvis	sftp-server/openbsd-compat/vis.h	/^int	unvis(char *, char, int *, int);$/;"	p	language:C++	signature:(char *, char, int *, int)
update_progress_meter	progressmeter.c	/^static void update_progress_meter(int);$/;"	p	language:C	file:	signature:(int)
update_progress_meter	progressmeter.c	/^update_progress_meter(int ignore)$/;"	f	language:C	file:	signature:(int ignore)
upload_dir	sftp-server/sftp-client.h	/^int upload_dir(struct sftp_conn *, char *, char *, int, int);$/;"	p	language:C++	signature:(struct sftp_conn *, char *, char *, int, int)
usable	algo.h	/^	char usable; \/* whether we can use this algorithm *\/$/;"	m	language:C++	struct:Algo_Type	access:public
usage	libtomcrypt/demos/encrypt.c	/^int usage(char *name) $/;"	f	language:C	signature:(char *name)
usage	scp.c	/^usage(void)$/;"	f	language:C	signature:(void)
usage	scp.c	/^void usage(void);$/;"	p	language:C	file:	signature:(void)
use	sftp-server/sftp-server.c	/^	int use;$/;"	m	language:C	struct:Handle	file:	access:public
used	circbuffer.h	/^	unsigned int used;$/;"	m	language:C++	struct:circbuf	access:public
used	libtomcrypt/src/headers/tomcrypt_pk.h	/^   int           used;$/;"	m	language:C++	struct:ltc_asn1_list_	access:public
used	libtommath/mtest/mpi.h	/^  mp_size       used;    \/* how many digits used       *\/$/;"	m	language:C++	struct:__anon23	access:public
used	libtommath/tommath.h	/^    int used, alloc, sign;$/;"	m	language:C++	struct:__anon18	access:public
user	svr-authpam.c	/^	char* user;$/;"	m	language:C	struct:UserDataS	file:	access:public
user_from_uid	sftp-server/openbsd-compat/openbsd-compat.h	/^char *user_from_uid(uid_t, int);$/;"	p	language:C++	signature:(uid_t, int)
user_from_uid	sftp-server/openbsd-compat/pwcache.c	/^user_from_uid(uid_t uid, int nouser)$/;"	f	language:C	signature:(uid_t uid, int nouser)
userid	scp.c	/^uid_t userid;$/;"	v	language:C
username	auth.h	/^	char *username; \/* This is the username the client presents to check. It$/;"	m	language:C++	struct:AuthState	access:public
username	loginrec.h	/^	char       username[LINFO_NAMESIZE];     \/* login username *\/$/;"	m	language:C++	struct:logininfo	access:public
username	runopts.h	/^	char *username;$/;"	m	language:C++	struct:cli_runopts	access:public
usingsyslog	runopts.h	/^	int usingsyslog;$/;"	m	language:C++	struct:svr_runopts	access:public
usrinfo	sftp-server/openbsd-compat/port-aix.h	/^int usrinfo(int, char *, int);$/;"	p	language:C++	signature:(int, char *, int)
utimes	sftp-server/openbsd-compat/bsd-misc.c	/^int utimes(char *filename, struct timeval *tvp)$/;"	f	language:C	signature:(char *filename, struct timeval *tvp)
utimes	sftp-server/openbsd-compat/bsd-misc.h	/^int utimes(char *, struct timeval *);$/;"	p	language:C++	signature:(char *, struct timeval *)
utmp_perform_login	loginrec.c	/^utmp_perform_login(struct logininfo *li)$/;"	f	language:C	file:	signature:(struct logininfo *li)
utmp_perform_logout	loginrec.c	/^utmp_perform_logout(struct logininfo *li)$/;"	f	language:C	file:	signature:(struct logininfo *li)
utmp_write_direct	loginrec.c	/^utmp_write_direct(struct logininfo *li, struct utmp *ut)$/;"	f	language:C	file:	signature:(struct logininfo *li, struct utmp *ut)
utmp_write_entry	loginrec.c	/^int utmp_write_entry(struct logininfo *li);$/;"	p	language:C	file:	signature:(struct logininfo *li)
utmp_write_entry	loginrec.c	/^utmp_write_entry(struct logininfo *li)$/;"	f	language:C	signature:(struct logininfo *li)
utmp_write_library	loginrec.c	/^utmp_write_library(struct logininfo *li, struct utmp *ut)$/;"	f	language:C	file:	signature:(struct logininfo *li, struct utmp *ut)
utmpx_perform_login	loginrec.c	/^utmpx_perform_login(struct logininfo *li)$/;"	f	language:C	file:	signature:(struct logininfo *li)
utmpx_perform_logout	loginrec.c	/^utmpx_perform_logout(struct logininfo *li)$/;"	f	language:C	file:	signature:(struct logininfo *li)
utmpx_write_direct	loginrec.c	/^utmpx_write_direct(struct logininfo *li, struct utmpx *utx)$/;"	f	language:C	file:	signature:(struct logininfo *li, struct utmpx *utx)
utmpx_write_entry	loginrec.c	/^int utmpx_write_entry(struct logininfo *li);$/;"	p	language:C	file:	signature:(struct logininfo *li)
utmpx_write_entry	loginrec.c	/^utmpx_write_entry(struct logininfo *li)$/;"	f	language:C	signature:(struct logininfo *li)
utmpx_write_library	loginrec.c	/^utmpx_write_library(struct logininfo *li, struct utmpx *utx)$/;"	f	language:C	file:	signature:(struct logininfo *li, struct utmpx *utx)
v4	sftp-server/addrmatch.c	/^		struct in_addr		v4;$/;"	m	language:C	union:xaddr::__anon2	typeref:struct:xaddr::__anon2::in_addr	file:	access:public
v4	sftp-server/addrmatch.c	45;"	d	language:C	file:
v6	sftp-server/addrmatch.c	/^		struct in6_addr		v6;$/;"	m	language:C	union:xaddr::__anon2	typeref:struct:xaddr::__anon2::in6_addr	file:	access:public
v6	sftp-server/addrmatch.c	46;"	d	language:C	file:
val	algo.h	/^	char val; \/* a value for this cipher, or -1 for invalid *\/$/;"	m	language:C++	struct:Algo_Type	access:public
val	sftp-server/log.c	/^	LogLevel val;$/;"	m	language:C	struct:__anon5	file:	access:public
val	sftp-server/log.c	/^	SyslogFacility val;$/;"	m	language:C	struct:__anon4	file:	access:public
value	libtomcrypt/src/pk/asn1/der/ia5/der_length_ia5_string.c	/^   int code, value;$/;"	m	language:C	struct:__anon24	file:	access:public
value	libtomcrypt/src/pk/asn1/der/printable_string/der_length_printable_string.c	/^   int code, value;$/;"	m	language:C	struct:__anon25	file:	access:public
vasprintf	sftp-server/openbsd-compat/openbsd-compat.h	/^int vasprintf(char **, const char *, va_list);$/;"	p	language:C++	signature:(char **, const char *, va_list)
verbose	sftp-server/log.c	/^verbose(const char *fmt,...)$/;"	f	language:C	signature:(const char *fmt,...)
verbose	sftp-server/log.h	/^void     verbose(const char *, ...) __attribute__((format(printf, 1, 2)));$/;"	p	language:C++	signature:(const char *, ...)
verbose_mode	scp.c	/^int verbose_mode = 0;$/;"	v	language:C
verifydir	scp.c	/^verifydir(char *cp)$/;"	f	language:C	signature:(char *cp)
verifydir	scp.c	/^void verifydir(char *);$/;"	p	language:C	file:	signature:(char *)
version	sftp-server/sftp-server.c	/^int version;$/;"	v	language:C
vhangup	sftp-server/openbsd-compat/bsd-nextstep.h	/^void vhangup(void);$/;"	p	language:C++	signature:(void)
vis	sftp-server/openbsd-compat/vis.c	/^vis(char *dst, int c, int flag, int nextc)$/;"	f	language:C	signature:(char *dst, int c, int flag, int nextc)
vis	sftp-server/openbsd-compat/vis.h	/^char	*vis(char *, int, int, int);$/;"	p	language:C++	signature:(char *, int, int, int)
void der_sequence_free(ltc_asn1_list *in);
void_cipher	common-algo.c	/^static int void_cipher(const unsigned char* in, unsigned char* out,$/;"	f	language:C	file:	signature:(const unsigned char* in, unsigned char* out, unsigned long len, void *cipher_state)
void_start	common-algo.c	/^static int void_start(int cipher, const unsigned char *IV, $/;"	f	language:C	file:	signature:(int cipher, const unsigned char *IV, const unsigned char *key, int keylen, int num_rounds, void *cipher_state)
vsnprintf	sftp-server/openbsd-compat/openbsd-compat.h	/^int vsnprintf(char *, size_t, const char *, va_list);$/;"	p	language:C++	signature:(char *, size_t, const char *, va_list)
vwrite	scpmisc.h	16;"	d	language:C++
wait	sftp-server/openbsd-compat/bsd-nextstep.h	43;"	d	language:C++
waitpid	sftp-server/openbsd-compat/bsd-waitpid.h	/^pid_t waitpid(int, int *, int);$/;"	p	language:C++	signature:(int, int *, int)
want_askpass	cli-authpasswd.c	/^static int want_askpass()$/;"	f	language:C	file:
wantpty	runopts.h	/^	int wantpty;$/;"	m	language:C++	struct:cli_runopts	access:public
wd	libtomcrypt/src/headers/tomcrypt_prng.h	/^                  wd;            $/;"	m	language:C++	struct:fortuna_prng	access:public
wfd	sftp-server/channels.h	/^	int     wfd;		\/* write fd *\/$/;"	m	language:C++	struct:Channel	access:public
wfd_isatty	sftp-server/channels.h	/^	int     wfd_isatty;	\/* wfd is a tty *\/$/;"	m	language:C++	struct:Channel	access:public
whirlpool	libtomcrypt/src/headers/tomcrypt_hash.h	/^    struct whirlpool_state whirlpool;$/;"	m	language:C++	union:Hash_state	typeref:struct:Hash_state::whirlpool_state	access:public
whirlpool_compress	libtomcrypt/src/hashes/whirl/whirl.c	/^static int whirlpool_compress(hash_state *md, unsigned char *buf)$/;"	f	language:C	file:	signature:(hash_state *md, unsigned char *buf)
whirlpool_desc	libtomcrypt/src/hashes/whirl/whirl.c	/^const struct ltc_hash_descriptor whirlpool_desc =$/;"	v	language:C	typeref:struct:ltc_hash_descriptor
whirlpool_done	libtomcrypt/src/hashes/whirl/whirl.c	/^int whirlpool_done(hash_state * md, unsigned char *out)$/;"	f	language:C	signature:(hash_state * md, unsigned char *out)
whirlpool_done	libtomcrypt/src/headers/tomcrypt_hash.h	/^int whirlpool_done(hash_state * md, unsigned char *hash);$/;"	p	language:C++	signature:(hash_state * md, unsigned char *hash)
whirlpool_init	libtomcrypt/src/hashes/whirl/whirl.c	/^int whirlpool_init(hash_state * md)$/;"	f	language:C	signature:(hash_state * md)
whirlpool_init	libtomcrypt/src/headers/tomcrypt_hash.h	/^int whirlpool_init(hash_state * md);$/;"	p	language:C++	signature:(hash_state * md)
whirlpool_process	libtomcrypt/src/headers/tomcrypt_hash.h	/^int whirlpool_process(hash_state * md, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(hash_state * md, const unsigned char *in, unsigned long inlen)
whirlpool_state	libtomcrypt/src/headers/tomcrypt_hash.h	/^struct whirlpool_state {$/;"	s	language:C++
whirlpool_state::buf	libtomcrypt/src/headers/tomcrypt_hash.h	/^    unsigned char buf[64];$/;"	m	language:C++	struct:whirlpool_state	access:public
whirlpool_state::curlen	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong32 curlen;$/;"	m	language:C++	struct:whirlpool_state	access:public
whirlpool_state::length	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length, state[8];$/;"	m	language:C++	struct:whirlpool_state	access:public
whirlpool_state::state	libtomcrypt/src/headers/tomcrypt_hash.h	/^    ulong64 length, state[8];$/;"	m	language:C++	struct:whirlpool_state	access:public
whirlpool_test	libtomcrypt/src/hashes/whirl/whirl.c	/^int  whirlpool_test(void)$/;"	f	language:C	signature:(void)
whirlpool_test	libtomcrypt/src/headers/tomcrypt_hash.h	/^int whirlpool_test(void);$/;"	p	language:C++	signature:(void)
win_resized	progressmeter.c	/^static volatile sig_atomic_t win_resized; \/* for window resizing *\/$/;"	v	language:C	file:
win_size	progressmeter.c	/^static int win_size;		\/* terminal window size *\/$/;"	v	language:C	file:
winchange	session.h	/^	int winchange; \/* Set to 1 when a windowchange signal happens *\/$/;"	m	language:C++	struct:clientsession	access:public
winsize	sftp-server/defines.h	/^struct winsize {$/;"	s	language:C++
winsize::ws_col	sftp-server/defines.h	/^      unsigned short ws_col;          \/* columns, in character *\/$/;"	m	language:C++	struct:winsize	access:public
winsize::ws_row	sftp-server/defines.h	/^      unsigned short ws_row;          \/* rows, in characters *\/$/;"	m	language:C++	struct:winsize	access:public
winsize::ws_xpixel	sftp-server/defines.h	/^      unsigned short ws_xpixel;       \/* horizontal size, pixels *\/$/;"	m	language:C++	struct:winsize	access:public
winsize::ws_ypixel	sftp-server/defines.h	/^      unsigned short ws_ypixel;       \/* vertical size, pixels *\/$/;"	m	language:C++	struct:winsize	access:public
write_packet	packet.c	/^void write_packet() {$/;"	f	language:C
write_packet	packet.h	/^void write_packet();$/;"	p	language:C++	signature:()
write_pending	common-channel.c	/^static unsigned int write_pending(struct Channel * channel) {$/;"	f	language:C	file:	signature:(struct Channel * channel)
write_pending	common-channel.c	/^static unsigned int write_pending(struct Channel * channel);$/;"	p	language:C	file:	signature:(struct Channel * channel)
write_radix	libtomcrypt/src/headers/tomcrypt_math.h	/^   int (*write_radix)(void *a, char *str, int radix);$/;"	m	language:C++	struct:__anon54	access:public
write_radix	libtomcrypt/src/math/gmp_desc.c	/^static int write_radix(void *a, char *b, int radix)$/;"	f	language:C	file:	signature:(void *a, char *b, int radix)
write_radix	libtomcrypt/src/math/ltm_desc.c	/^static int write_radix(void *a, char *b, int radix)$/;"	f	language:C	file:	signature:(void *a, char *b, int radix)
write_radix	libtomcrypt/src/math/tfm_desc.c	/^static int write_radix(void *a, char *b, int radix)$/;"	f	language:C	file:	signature:(void *a, char *b, int radix)
writebuf	channel.h	/^	circbuffer *writebuf; \/* data from the wire, for local consumption *\/$/;"	m	language:C++	struct:Channel	access:public
writechannel	common-channel.c	/^static void writechannel(struct Channel* channel, int fd, circbuffer *cbuf) {$/;"	f	language:C	file:	signature:(struct Channel* channel, int fd, circbuffer *cbuf)
writechannel	common-channel.c	/^static void writechannel(struct Channel* channel, int fd, circbuffer *cbuf);$/;"	p	language:C	file:	signature:(struct Channel* channel, int fd, circbuffer *cbuf)
writefd	channel.h	/^	int writefd; \/* read from wire, written to insecure side *\/$/;"	m	language:C++	struct:Channel	access:public
writepayload	session.h	/^	buffer *writepayload; \/* Unencrypted payload to write - this is used$/;"	m	language:C++	struct:sshsession	access:public
writepos	circbuffer.h	/^	unsigned int writepos;$/;"	m	language:C++	struct:circbuf	access:public
writequeue	session.h	/^	struct Queue writequeue; \/* A queue of encrypted packets to send *\/$/;"	m	language:C++	struct:sshsession	typeref:struct:sshsession::Queue	access:public
writev	sftp-server/openbsd-compat/openbsd-compat.h	/^int writev(int, struct iovec *, int);$/;"	p	language:C++	signature:(int, struct iovec *, int)
ws_col	sftp-server/defines.h	/^      unsigned short ws_col;          \/* columns, in character *\/$/;"	m	language:C++	struct:winsize	access:public
ws_row	sftp-server/defines.h	/^      unsigned short ws_row;          \/* rows, in characters *\/$/;"	m	language:C++	struct:winsize	access:public
ws_xpixel	sftp-server/defines.h	/^      unsigned short ws_xpixel;       \/* horizontal size, pixels *\/$/;"	m	language:C++	struct:winsize	access:public
ws_ypixel	sftp-server/defines.h	/^      unsigned short ws_ypixel;       \/* vertical size, pixels *\/$/;"	m	language:C++	struct:winsize	access:public
wtmp_get_entry	loginrec.c	/^int wtmp_get_entry(struct logininfo *li);$/;"	p	language:C	file:	signature:(struct logininfo *li)
wtmp_get_entry	loginrec.c	/^wtmp_get_entry(struct logininfo *li)$/;"	f	language:C	signature:(struct logininfo *li)
wtmp_islogin	loginrec.c	/^wtmp_islogin(struct logininfo *li, struct utmp *ut)$/;"	f	language:C	file:	signature:(struct logininfo *li, struct utmp *ut)
wtmp_perform_login	loginrec.c	/^wtmp_perform_login(struct logininfo *li)$/;"	f	language:C	file:	signature:(struct logininfo *li)
wtmp_perform_logout	loginrec.c	/^wtmp_perform_logout(struct logininfo *li)$/;"	f	language:C	file:	signature:(struct logininfo *li)
wtmp_write	loginrec.c	/^wtmp_write(struct logininfo *li, struct utmp *ut)$/;"	f	language:C	file:	signature:(struct logininfo *li, struct utmp *ut)
wtmp_write_entry	loginrec.c	/^int wtmp_write_entry(struct logininfo *li);$/;"	p	language:C	file:	signature:(struct logininfo *li)
wtmp_write_entry	loginrec.c	/^wtmp_write_entry(struct logininfo *li)$/;"	f	language:C	signature:(struct logininfo *li)
wtmpx_get_entry	loginrec.c	/^int wtmpx_get_entry(struct logininfo *li);$/;"	p	language:C	file:	signature:(struct logininfo *li)
wtmpx_get_entry	loginrec.c	/^wtmpx_get_entry(struct logininfo *li)$/;"	f	language:C	signature:(struct logininfo *li)
wtmpx_islogin	loginrec.c	/^wtmpx_islogin(struct logininfo *li, struct utmpx *utx)$/;"	f	language:C	file:	signature:(struct logininfo *li, struct utmpx *utx)
wtmpx_perform_login	loginrec.c	/^wtmpx_perform_login(struct logininfo *li)$/;"	f	language:C	file:	signature:(struct logininfo *li)
wtmpx_perform_logout	loginrec.c	/^wtmpx_perform_logout(struct logininfo *li)$/;"	f	language:C	file:	signature:(struct logininfo *li)
wtmpx_write	loginrec.c	/^wtmpx_write(struct logininfo *li, struct utmpx *utx)$/;"	f	language:C	file:	signature:(struct logininfo *li, struct utmpx *utx)
wtmpx_write_entry	loginrec.c	/^int wtmpx_write_entry(struct logininfo *li);$/;"	p	language:C	file:	signature:(struct logininfo *li)
wtmpx_write_entry	loginrec.c	/^wtmpx_write_entry(struct logininfo *li)$/;"	f	language:C	signature:(struct logininfo *li)
x	dss.h	/^	mp_int* x;$/;"	m	language:C++	struct:__anon56	access:public
x	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *x;$/;"	m	language:C++	struct:__anon35	access:public
x	libtomcrypt/src/headers/tomcrypt_pk.h	/^   void *x;$/;"	m	language:C++	struct:__anon37	access:public
x	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int x, y;$/;"	m	language:C++	struct:rc4_prng	access:public
x11_connect_display	sftp-server/channels.h	/^int	 x11_connect_display(void);$/;"	p	language:C++	signature:(void)
x11_create_display_inet	sftp-server/channels.h	/^int	 x11_create_display_inet(int, int, int, u_int *, int **);$/;"	p	language:C++	signature:(int, int, int, u_int *, int **)
x11_input_open	sftp-server/channels.h	/^void     x11_input_open(int, u_int32_t, void *);$/;"	p	language:C++	signature:(int, u_int32_t, void *)
x11_request_forwarding_with_spoofing	sftp-server/channels.h	/^void	 x11_request_forwarding_with_spoofing(int, const char *, const char *,$/;"	p	language:C++	signature:(int, const char *, const char *, const char *)
x11accept	svr-x11fwd.c	/^static void x11accept(struct Listener* listener, int sock) {$/;"	f	language:C	file:	signature:(struct Listener* listener, int sock)
x11accept	svr-x11fwd.c	/^static void x11accept(struct Listener* listener, int sock);$/;"	p	language:C	file:	signature:(struct Listener* listener, int sock)
x11authcookie	chansession.h	/^	char * x11authcookie;$/;"	m	language:C++	struct:ChanSess	access:public
x11authprot	chansession.h	/^	char * x11authprot;$/;"	m	language:C++	struct:ChanSess	access:public
x11cleanup	svr-x11fwd.c	/^void x11cleanup(struct ChanSess *chansess) {$/;"	f	language:C	signature:(struct ChanSess *chansess)
x11cleanup	x11fwd.h	/^void x11cleanup(struct ChanSess *chansess);$/;"	p	language:C++	signature:(struct ChanSess *chansess)
x11listener	chansession.h	/^	struct Listener * x11listener;$/;"	m	language:C++	struct:ChanSess	typeref:struct:ChanSess::Listener	access:public
x11port	chansession.h	/^	int x11port;$/;"	m	language:C++	struct:ChanSess	access:public
x11req	svr-x11fwd.c	/^int x11req(struct ChanSess * chansess) {$/;"	f	language:C	signature:(struct ChanSess * chansess)
x11req	x11fwd.h	/^int x11req(struct ChanSess * chansess);$/;"	p	language:C++	signature:(struct ChanSess * chansess)
x11screennum	chansession.h	/^	unsigned int x11screennum;$/;"	m	language:C++	struct:ChanSess	access:public
x11setauth	svr-x11fwd.c	/^void x11setauth(struct ChanSess *chansess) {$/;"	f	language:C	signature:(struct ChanSess *chansess)
x11setauth	x11fwd.h	/^void x11setauth(struct ChanSess *chansess);$/;"	p	language:C++	signature:(struct ChanSess *chansess)
x11singleconn	chansession.h	/^	unsigned char x11singleconn;$/;"	m	language:C++	struct:ChanSess	access:public
xa	sftp-server/addrmatch.c	/^	} xa;		    \/* 128-bit address *\/$/;"	m	language:C	struct:xaddr	typeref:union:xaddr::__anon2	file:	access:public
xaddr	sftp-server/addrmatch.c	/^struct xaddr {$/;"	s	language:C	file:
xaddr::__anon2::addr32	sftp-server/addrmatch.c	/^		u_int32_t		addr32[4];$/;"	m	language:C	union:xaddr::__anon2	file:	access:public
xaddr::__anon2::addr8	sftp-server/addrmatch.c	/^		u_int8_t		addr8[16];$/;"	m	language:C	union:xaddr::__anon2	file:	access:public
xaddr::__anon2::v4	sftp-server/addrmatch.c	/^		struct in_addr		v4;$/;"	m	language:C	union:xaddr::__anon2	typeref:struct:xaddr::__anon2::in_addr	file:	access:public
xaddr::__anon2::v6	sftp-server/addrmatch.c	/^		struct in6_addr		v6;$/;"	m	language:C	union:xaddr::__anon2	typeref:struct:xaddr::__anon2::in6_addr	file:	access:public
xaddr::af	sftp-server/addrmatch.c	/^	sa_family_t	af;$/;"	m	language:C	struct:xaddr	file:	access:public
xaddr::scope_id	sftp-server/addrmatch.c	/^	u_int32_t	scope_id;	\/* iface scope id for v6 *\/$/;"	m	language:C	struct:xaddr	file:	access:public
xaddr::xa	sftp-server/addrmatch.c	/^	} xa;		    \/* 128-bit address *\/$/;"	m	language:C	struct:xaddr	typeref:union:xaddr::__anon2	file:	access:public
xasprintf	sftp-server/xmalloc.c	/^xasprintf(char **ret, const char *fmt, ...)$/;"	f	language:C	signature:(char **ret, const char *fmt, ...)
xasprintf	sftp-server/xmalloc.h	/^int	 xasprintf(char **, const char *, ...)$/;"	p	language:C++	signature:(char **, const char *, ...)
xcalloc	sftp-server/xmalloc.c	/^xcalloc(size_t nmemb, size_t size)$/;"	f	language:C	signature:(size_t nmemb, size_t size)
xcalloc	sftp-server/xmalloc.h	/^void	*xcalloc(size_t, size_t);$/;"	p	language:C++	signature:(size_t, size_t)
xcbc_done	libtomcrypt/src/headers/tomcrypt_mac.h	/^int xcbc_done(xcbc_state *xcbc, unsigned char *out, unsigned long *outlen);$/;"	p	language:C++	signature:(xcbc_state *xcbc, unsigned char *out, unsigned long *outlen)
xcbc_done	libtomcrypt/src/mac/xcbc/xcbc_done.c	/^int xcbc_done(xcbc_state *xcbc, unsigned char *out, unsigned long *outlen)$/;"	f	language:C	signature:(xcbc_state *xcbc, unsigned char *out, unsigned long *outlen)
xcbc_file	libtomcrypt/src/headers/tomcrypt_mac.h	/^int xcbc_file(int cipher, $/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, const char *filename, unsigned char *out, unsigned long *outlen)
xcbc_file	libtomcrypt/src/mac/xcbc/xcbc_file.c	/^int xcbc_file(int cipher, $/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, const char *filename, unsigned char *out, unsigned long *outlen)
xcbc_init	libtomcrypt/src/headers/tomcrypt_mac.h	/^int xcbc_init(xcbc_state *xcbc, int cipher, const unsigned char *key, unsigned long keylen);$/;"	p	language:C++	signature:(xcbc_state *xcbc, int cipher, const unsigned char *key, unsigned long keylen)
xcbc_init	libtomcrypt/src/mac/xcbc/xcbc_init.c	/^int xcbc_init(xcbc_state *xcbc, int cipher, const unsigned char *key, unsigned long keylen)$/;"	f	language:C	signature:(xcbc_state *xcbc, int cipher, const unsigned char *key, unsigned long keylen)
xcbc_memory	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   int (*xcbc_memory)($/;"	m	language:C++	struct:ltc_cipher_descriptor	access:public
xcbc_memory	libtomcrypt/src/headers/tomcrypt_mac.h	/^int xcbc_memory(int cipher, $/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
xcbc_memory	libtomcrypt/src/mac/xcbc/xcbc_memory.c	/^int xcbc_memory(int cipher, $/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, const unsigned char *in, unsigned long inlen, unsigned char *out, unsigned long *outlen)
xcbc_memory_multi	libtomcrypt/src/headers/tomcrypt_mac.h	/^int xcbc_memory_multi(int cipher, $/;"	p	language:C++	signature:(int cipher, const unsigned char *key, unsigned long keylen, unsigned char *out, unsigned long *outlen, const unsigned char *in, unsigned long inlen, ...)
xcbc_memory_multi	libtomcrypt/src/mac/xcbc/xcbc_memory_multi.c	/^int xcbc_memory_multi(int cipher, $/;"	f	language:C	signature:(int cipher, const unsigned char *key, unsigned long keylen, unsigned char *out, unsigned long *outlen, const unsigned char *in, unsigned long inlen, ...)
xcbc_process	libtomcrypt/src/headers/tomcrypt_mac.h	/^int xcbc_process(xcbc_state *xcbc, const unsigned char *in, unsigned long inlen);$/;"	p	language:C++	signature:(xcbc_state *xcbc, const unsigned char *in, unsigned long inlen)
xcbc_process	libtomcrypt/src/mac/xcbc/xcbc_process.c	/^int xcbc_process(xcbc_state *xcbc, const unsigned char *in, unsigned long inlen)$/;"	f	language:C	signature:(xcbc_state *xcbc, const unsigned char *in, unsigned long inlen)
xcbc_state	libtomcrypt/src/headers/tomcrypt_mac.h	/^} xcbc_state;$/;"	t	language:C++	typeref:struct:__anon52
xcbc_test	libtomcrypt/src/headers/tomcrypt_mac.h	/^int xcbc_test(void);$/;"	p	language:C++	signature:(void)
xcbc_test	libtomcrypt/src/mac/xcbc/xcbc_test.c	/^int xcbc_test(void)$/;"	f	language:C	signature:(void)
xcrypt	sftp-server/openbsd-compat/openbsd-compat.h	/^char *xcrypt(const char *password, const char *salt);$/;"	p	language:C++	signature:(const char *password, const char *salt)
xfree	scpmisc.c	/^xfree(void *ptr)$/;"	f	language:C	signature:(void *ptr)
xfree	scpmisc.h	/^void     xfree(void *);$/;"	p	language:C++	signature:(void *)
xfree	sftp-server/xmalloc.c	/^xfree(void *ptr)$/;"	f	language:C	signature:(void *ptr)
xfree	sftp-server/xmalloc.h	/^void     xfree(void *);$/;"	p	language:C++	signature:(void *)
xkey	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct rc2_key { unsigned xkey[64]; };$/;"	m	language:C++	struct:rc2_key	access:public
xmalloc	scpmisc.c	/^xmalloc(size_t size)$/;"	f	language:C	signature:(size_t size)
xmalloc	scpmisc.h	/^void	*xmalloc(size_t);$/;"	p	language:C++	signature:(size_t)
xmalloc	sftp-server/xmalloc.c	/^xmalloc(size_t size)$/;"	f	language:C	signature:(size_t size)
xmalloc	sftp-server/xmalloc.h	/^void	*xmalloc(size_t);$/;"	p	language:C++	signature:(size_t)
xmmap	sftp-server/openbsd-compat/openbsd-compat.h	/^void *xmmap(size_t size);$/;"	p	language:C++	signature:(size_t size)
xrealloc	scpmisc.c	/^xrealloc(void *ptr, size_t new_size)$/;"	f	language:C	signature:(void *ptr, size_t new_size)
xrealloc	scpmisc.h	/^void	*xrealloc(void *, size_t);$/;"	p	language:C++	signature:(void *, size_t)
xrealloc	sftp-server/xmalloc.c	/^xrealloc(void *ptr, size_t nmemb, size_t size)$/;"	f	language:C	signature:(void *ptr, size_t nmemb, size_t size)
xrealloc	sftp-server/xmalloc.h	/^void	*xrealloc(void *, size_t, size_t);$/;"	p	language:C++	signature:(void *, size_t, size_t)
xstrdup	scpmisc.c	/^xstrdup(const char *str)$/;"	f	language:C	signature:(const char *str)
xstrdup	scpmisc.h	/^char	*xstrdup(const char *);$/;"	p	language:C++	signature:(const char *)
xstrdup	sftp-server/xmalloc.c	/^xstrdup(const char *str)$/;"	f	language:C	signature:(const char *str)
xstrdup	sftp-server/xmalloc.h	/^char	*xstrdup(const char *);$/;"	p	language:C++	signature:(const char *)
xtea	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   struct xtea_key     xtea;$/;"	m	language:C++	union:Symmetric_key	typeref:struct:Symmetric_key::xtea_key	access:public
xtea_desc	libtomcrypt/src/ciphers/xtea.c	/^const struct ltc_cipher_descriptor xtea_desc =$/;"	v	language:C	typeref:struct:ltc_cipher_descriptor
xtea_done	libtomcrypt/src/ciphers/xtea.c	/^void xtea_done(symmetric_key *skey)$/;"	f	language:C	signature:(symmetric_key *skey)
xtea_done	libtomcrypt/src/headers/tomcrypt_cipher.h	/^void xtea_done(symmetric_key *skey);$/;"	p	language:C++	signature:(symmetric_key *skey)
xtea_ecb_decrypt	libtomcrypt/src/ciphers/xtea.c	/^int xtea_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
xtea_ecb_decrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int xtea_ecb_decrypt(const unsigned char *ct, unsigned char *pt, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *ct, unsigned char *pt, symmetric_key *skey)
xtea_ecb_encrypt	libtomcrypt/src/ciphers/xtea.c	/^int xtea_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
xtea_ecb_encrypt	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int xtea_ecb_encrypt(const unsigned char *pt, unsigned char *ct, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *pt, unsigned char *ct, symmetric_key *skey)
xtea_key	libtomcrypt/src/headers/tomcrypt_cipher.h	/^struct xtea_key {$/;"	s	language:C++
xtea_key::A	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned long A[32], B[32];$/;"	m	language:C++	struct:xtea_key	access:public
xtea_key::B	libtomcrypt/src/headers/tomcrypt_cipher.h	/^   unsigned long A[32], B[32];$/;"	m	language:C++	struct:xtea_key	access:public
xtea_keysize	libtomcrypt/src/ciphers/xtea.c	/^int xtea_keysize(int *keysize)$/;"	f	language:C	signature:(int *keysize)
xtea_keysize	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int xtea_keysize(int *keysize);$/;"	p	language:C++	signature:(int *keysize)
xtea_setup	libtomcrypt/src/ciphers/xtea.c	/^int xtea_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)$/;"	f	language:C	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
xtea_setup	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int xtea_setup(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey);$/;"	p	language:C++	signature:(const unsigned char *key, int keylen, int num_rounds, symmetric_key *skey)
xtea_test	libtomcrypt/src/ciphers/xtea.c	/^int xtea_test(void)$/;"	f	language:C	signature:(void)
xtea_test	libtomcrypt/src/headers/tomcrypt_cipher.h	/^int xtea_test(void);$/;"	p	language:C++	signature:(void)
y	dss.h	/^	mp_int* y;$/;"	m	language:C++	struct:__anon56	access:public
y	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *y;$/;"	m	language:C++	struct:__anon35	access:public
y	libtomcrypt/src/headers/tomcrypt_pk.h	/^   void *y;$/;"	m	language:C++	struct:__anon37	access:public
y	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int x, y;$/;"	m	language:C++	struct:rc4_prng	access:public
yarrow	libtomcrypt/src/headers/tomcrypt_prng.h	/^    struct yarrow_prng    yarrow;$/;"	m	language:C++	union:Prng_state	typeref:struct:Prng_state::yarrow_prng	access:public
yarrow_add_entropy	libtomcrypt/src/headers/tomcrypt_prng.h	/^int yarrow_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
yarrow_add_entropy	libtomcrypt/src/prngs/yarrow.c	/^int yarrow_add_entropy(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
yarrow_desc	libtomcrypt/src/prngs/yarrow.c	/^const struct ltc_prng_descriptor yarrow_desc =$/;"	v	language:C	typeref:struct:ltc_prng_descriptor
yarrow_done	libtomcrypt/src/headers/tomcrypt_prng.h	/^int yarrow_done(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
yarrow_done	libtomcrypt/src/prngs/yarrow.c	/^int yarrow_done(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
yarrow_export	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  yarrow_export(unsigned char *out, unsigned long *outlen, prng_state *prng);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long *outlen, prng_state *prng)
yarrow_export	libtomcrypt/src/prngs/yarrow.c	/^int yarrow_export(unsigned char *out, unsigned long *outlen, prng_state *prng)$/;"	f	language:C	signature:(unsigned char *out, unsigned long *outlen, prng_state *prng)
yarrow_import	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  yarrow_import(const unsigned char *in, unsigned long inlen, prng_state *prng);$/;"	p	language:C++	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
yarrow_import	libtomcrypt/src/prngs/yarrow.c	/^int yarrow_import(const unsigned char *in, unsigned long inlen, prng_state *prng)$/;"	f	language:C	signature:(const unsigned char *in, unsigned long inlen, prng_state *prng)
yarrow_prng	libtomcrypt/src/headers/tomcrypt_prng.h	/^struct yarrow_prng {$/;"	s	language:C++
yarrow_prng	libtomcrypt/testprof/x86_prof.c	/^prng_state yarrow_prng;$/;"	v	language:C
yarrow_prng::cipher	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int                   cipher, hash;$/;"	m	language:C++	struct:yarrow_prng	access:public
yarrow_prng::ctr	libtomcrypt/src/headers/tomcrypt_prng.h	/^    symmetric_CTR         ctr;$/;"	m	language:C++	struct:yarrow_prng	access:public
yarrow_prng::hash	libtomcrypt/src/headers/tomcrypt_prng.h	/^    int                   cipher, hash;$/;"	m	language:C++	struct:yarrow_prng	access:public
yarrow_prng::pool	libtomcrypt/src/headers/tomcrypt_prng.h	/^    unsigned char         pool[MAXBLOCKSIZE];$/;"	m	language:C++	struct:yarrow_prng	access:public
yarrow_read	libtomcrypt/src/headers/tomcrypt_prng.h	/^unsigned long yarrow_read(unsigned char *out, unsigned long outlen, prng_state *prng);$/;"	p	language:C++	signature:(unsigned char *out, unsigned long outlen, prng_state *prng)
yarrow_read	libtomcrypt/src/prngs/yarrow.c	/^unsigned long yarrow_read(unsigned char *out, unsigned long outlen, prng_state *prng)$/;"	f	language:C	signature:(unsigned char *out, unsigned long outlen, prng_state *prng)
yarrow_ready	libtomcrypt/src/headers/tomcrypt_prng.h	/^int yarrow_ready(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
yarrow_ready	libtomcrypt/src/prngs/yarrow.c	/^int yarrow_ready(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
yarrow_start	libtomcrypt/src/headers/tomcrypt_prng.h	/^int yarrow_start(prng_state *prng);$/;"	p	language:C++	signature:(prng_state *prng)
yarrow_start	libtomcrypt/src/prngs/yarrow.c	/^int yarrow_start(prng_state *prng)$/;"	f	language:C	signature:(prng_state *prng)
yarrow_test	libtomcrypt/src/headers/tomcrypt_prng.h	/^int  yarrow_test(void);$/;"	p	language:C++	signature:(void)
yarrow_test	libtomcrypt/src/prngs/yarrow.c	/^int yarrow_test(void)$/;"	f	language:C	signature:(void)
z	libtomcrypt/src/headers/tomcrypt_pk.h	/^    void *z;$/;"	m	language:C++	struct:__anon35	access:public
zeromem	libtomcrypt/src/headers/tomcrypt_misc.h	/^void zeromem(void *dst, size_t len);$/;"	p	language:C++	signature:(void *dst, size_t len)
zeromem	libtomcrypt/src/misc/zeromem.c	/^void zeromem(void *out, size_t outlen)$/;"	f	language:C	signature:(void *out, size_t outlen)
zstream	session.h	/^	z_streamp zstream;$/;"	m	language:C++	struct:key_context_directional	access:public
